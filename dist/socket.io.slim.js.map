{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///socket.io.slim.js","webpack:///webpack/bootstrap c15c5bdd1eceed135081","webpack:///./lib/index.js","webpack:///./lib/url.js","webpack:///./~/parseuri/index.js","webpack:///./support/noop.js","webpack:///./~/socket.io-parser/index.js","webpack:///./~/component-emitter/index.js","webpack:///./~/socket.io-parser/binary.js","webpack:///./~/isarray/index.js","webpack:///./~/socket.io-parser/is-buffer.js","webpack:///./lib/manager.js","webpack:///./~/engine.io-client/lib/index.js","webpack:///./~/engine.io-client/lib/socket.js","webpack:///./~/engine.io-client/lib/transports/index.js","webpack:///./~/engine.io-client/lib/xmlhttprequest.js","webpack:///./~/has-cors/index.js","webpack:///./~/engine.io-client/lib/transports/polling-xhr.js","webpack:///./~/engine.io-client/lib/transports/polling.js","webpack:///./~/engine.io-client/lib/transport.js","webpack:///./~/engine.io-client/~/engine.io-parser/lib/browser.js","webpack:///./~/engine.io-client/~/engine.io-parser/lib/keys.js","webpack:///./~/has-binary2/index.js","webpack:///./~/buffer/index.js","webpack:///./~/base64-js/index.js","webpack:///./~/ieee754/index.js","webpack:///./~/buffer/~/isarray/index.js","webpack:///./~/arraybuffer.slice/index.js","webpack:///./~/after/index.js","webpack:///./~/engine.io-client/~/engine.io-parser/lib/utf8.js","webpack:///./~/base64-arraybuffer/lib/base64-arraybuffer.js","webpack:///./~/blob/index.js","webpack:///./~/parseqs/index.js","webpack:///./~/component-inherit/index.js","webpack:///./~/yeast/index.js","webpack:///./~/engine.io-client/lib/transports/polling-jsonp.js","webpack:///./~/engine.io-client/lib/transports/websocket.js","webpack:///./~/indexof/index.js","webpack:///./lib/socket.js","webpack:///./~/to-array/index.js","webpack:///./lib/on.js","webpack:///./~/component-bind/index.js","webpack:///./~/backo2/index.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","lookup","uri","opts","_typeof","undefined","io","parsed","url","source","path","sameNamespace","cache","nsps","newConnection","forceNew","multiplex","Manager","query","socket","Symbol","iterator","obj","constructor","prototype","parser","managers","protocol","connect","Socket","global","loc","location","host","charAt","test","parseuri","port","ipv6","indexOf","href","re","parts","str","src","b","e","substring","replace","length","exec","i","authority","ipv6uri","Encoder","encodeAsString","type","BINARY_EVENT","BINARY_ACK","attachments","nsp","data","payload","tryStringify","ERROR_PACKET","JSON","stringify","encodeAsBinary","callback","writeEncoding","bloblessData","deconstruction","binary","deconstructPacket","pack","packet","buffers","unshift","removeBlobs","Decoder","reconstructor","decodeString","Number","types","error","buf","Error","next","tryParse","substr","isPayloadValid","ERROR","isArray","parse","BinaryReconstructor","reconPack","msg","Emitter","isBuf","CONNECT","DISCONNECT","EVENT","ACK","encode","encoding","add","emit","base64","takeBinaryData","destroy","finishedReconstruction","binData","push","reconstructPacket","mixin","key","on","addEventListener","event","fn","_callbacks","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","callbacks","cb","splice","args","slice","len","listeners","hasListeners","_deconstructPacket","placeholder","_placeholder","num","newData","Array","Date","_reconstructPacket","toString","Object","withNativeBlob","Blob","withNativeFile","File","packetData","_removeBlobs","curKey","containingObject","pendingBlobs","fileReader","FileReader","onload","result","readAsArrayBuffer","arr","withNativeBuffer","Buffer","isBuffer","withNativeArrayBuffer","ArrayBuffer","isView","buffer","subs","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","Backoff","min","max","jitter","timeout","readyState","connecting","lastPing","packetBuffer","_parser","encoder","decoder","autoConnect","open","eio","bind","has","hasOwnProperty","emitAll","updateSocketIds","generateId","engine","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","setMin","_randomizationFactor","setJitter","_reconnectionDelayMax","setMax","_timeout","maybeReconnectOnOpen","reconnecting","attempts","reconnect","self","skipReconnect","openSub","onopen","errorSub","cleanup","err","timer","setTimeout","close","clearTimeout","onping","onpong","ondata","ondecoded","onerror","onConnecting","index","encodedPackets","write","options","processPacketQueue","shift","subsLength","sub","disconnect","reset","onclose","reason","delay","duration","onreconnect","attempt","hostname","secure","agent","parseqs","decode","upgrade","forceJSONP","jsonp","forceBase64","enablesXDR","timestampParam","timestampRequests","transports","transportOptions","writeBuffer","prevBufferLen","policyPort","rememberUpgrade","binaryType","onlyBinaryUpgrades","perMessageDeflate","threshold","pfx","passphrase","cert","ca","ciphers","rejectUnauthorized","forceNode","freeGlobal","extraHeaders","keys","localAddress","upgrades","pingInterval","pingTimeout","pingIntervalTimer","pingTimeoutTimer","clone","o","priorWebsocketSuccess","Transport","createTransport","name","EIO","transport","sid","requestTimeout","protocols","setTransport","onDrain","onPacket","onError","onClose","probe","onTransportOpen","upgradeLosesBinary","supportsBinary","failed","send","upgrading","pause","flush","freezeTransport","onTransportClose","onupgrade","to","onOpen","l","onHandshake","setPing","code","filterUpgrades","onHeartbeat","ping","sendPacket","writable","compress","cleanupAndClose","waitForUpgrade","desc","filteredUpgrades","j","polling","xhr","xd","xs","isSSL","xdomain","xscheme","XMLHttpRequest","XHR","JSONP","websocket","hasCORS","XDomainRequest","concat","join","empty","Polling","Request","method","async","isBinary","create","unloadHandler","requests","abort","inherit","request","doWrite","req","sendXhr","doPoll","onData","pollXhr","setDisableHeaderCheck","setRequestHeader","responseType","withCredentials","hasXDR","onLoad","responseText","onreadystatechange","contentType","getResponseHeader","status","document","requestsCount","onSuccess","fromError","response","String","fromCharCode","Uint8Array","attachEvent","hasXHR2","yeast","doOpen","poll","onPause","total","decodePayload","doClose","packets","callbackfn","encodePayload","schema","b64","description","decodePacket","encodeBase64Object","message","encodeArrayBuffer","encodeBase64Packet","contentArray","resultBuffer","byteLength","encodeBlobAsArrayBuffer","fr","encodePacket","encodeBlob","dontSendBlobs","blob","tryDecode","utf8","strict","map","ary","each","done","after","eachWithIndex","el","base64encoder","hasBinary","sliceBuffer","isAndroid","navigator","userAgent","isPhantomJS","pong","noop","packetslist","utf8encode","encoded","split","readAsDataURL","b64data","typed","basic","btoa","utf8decode","decodeBase64Packet","asArray","rest","setLengthHeader","encodeOne","doneCallback","encodePayloadAsBlob","encodePayloadAsArrayBuffer","results","decodePayloadAsBinary","n","chr","ret","totalLength","reduce","acc","resultArray","bufferIndex","forEach","isString","ab","view","charCodeAt","lenStr","parseInt","binaryIdentifier","size","lengthAry","bufferTail","tailArray","msgLength","toJSON","typedArraySupport","__proto__","foo","subarray","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","arg","encodingOrOffset","allocUnsafe","from","value","TypeError","fromArrayBuffer","fromString","fromObject","assertSize","alloc","fill","checked","string","isEncoding","actual","fromArrayLike","array","byteOffset","copy","isnan","SlowBuffer","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","val","dir","isNaN","arrayIndexOf","lastIndexOf","read","indexSize","readUInt16BE","arrLength","valLength","foundIndex","found","hexWrite","offset","remaining","strLen","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","fromByteArray","Math","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","codePoints","MAX_ARGUMENTS_LENGTH","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean","stringtrim","INVALID_BASE64_RE","trim","units","leadSurrogate","byteArray","hi","lo","toByteArray","dst","INSPECT_MAX_BYTES","poolSize","_augment","species","defineProperty","configurable","allocUnsafeSlow","_isBuffer","compare","a","x","y","list","pos","swap16","swap32","swap64","equals","inspect","match","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","_arr","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","getLens","validLen","placeHoldersLen","lens","_byteLength","tmp","Arr","curByte","revLookup","tripletToBase64","encodeChunk","uint8","output","extraBytes","maxChunkLength","len2","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","rt","abs","log","LN2","arraybuffer","abv","ii","count","err_cb","proxy","bail","ucs2decode","extra","counter","ucs2encode","stringFromCharCode","checkScalarValue","toUpperCase","createByte","encodeCodePoint","symbol","byteString","readContinuationByte","byteIndex","byteCount","continuationByte","decodeSymbol","byte1","byte2","byte3","byte4","version","chars","encoded1","encoded2","encoded3","encoded4","bufferLength","mapArrayBufferViews","chunk","BlobBuilderConstructor","bb","BlobBuilder","part","append","getBlob","BlobConstructor","WebKitBlobBuilder","MSBlobBuilder","MozBlobBuilder","blobSupported","blobSupportsArrayBufferView","blobBuilderSupported","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","alphabet","decoded","now","prev","seed","JSONPPolling","___eio","script","rNewline","rEscapedNewline","parentNode","removeChild","form","iframe","createElement","insertAt","getElementsByTagName","insertBefore","head","body","appendChild","isUAgecko","complete","initIframe","html","iframeId","area","className","style","position","top","left","setAttribute","action","submit","WS","usingBrowserWebSocket","BrowserWebSocket","WebSocket","NodeWebSocket","MozWebSocket","window","check","headers","ws","supports","addEventListeners","onmessage","ev","json","ids","acks","receiveBuffer","sendBuffer","connected","disconnected","flags","toArray","hasBin","events","connect_error","connect_timeout","reconnect_attempt","reconnect_failed","reconnect_error","subEvents","pop","onpacket","rootNamespaceError","onconnect","onevent","onack","ondisconnect","ack","sent","emitBuffered","ms","factor","rand","random","deviation"],"mappings":"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","file":"socket.io.slim.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"io\"] = factory();\n\telse\n\t\troot[\"io\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"io\"] = factory();\n\telse\n\t\troot[\"io\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\t/**\r\n\t * Module dependencies.\r\n\t */\n\t\n\tvar url = __webpack_require__(1);\n\tvar parser = __webpack_require__(4);\n\tvar Manager = __webpack_require__(9);\n\tvar debug = __webpack_require__(3)('socket.io-client');\n\t\n\t/**\r\n\t * Module exports.\r\n\t */\n\t\n\tmodule.exports = exports = lookup;\n\t\n\t/**\r\n\t * Managers cache.\r\n\t */\n\t\n\tvar cache = exports.managers = {};\n\t\n\t/**\r\n\t * Looks up an existing `Manager` for multiplexing.\r\n\t * If the user summons:\r\n\t *\r\n\t *   `io('http://localhost/a');`\r\n\t *   `io('http://localhost/b');`\r\n\t *\r\n\t * We reuse the existing instance based on same scheme/port/host,\r\n\t * and we initialize sockets for each namespace.\r\n\t *\r\n\t * @api public\r\n\t */\n\t\n\tfunction lookup(uri, opts) {\n\t  if ((typeof uri === 'undefined' ? 'undefined' : _typeof(uri)) === 'object') {\n\t    opts = uri;\n\t    uri = undefined;\n\t  }\n\t\n\t  opts = opts || {};\n\t\n\t  var parsed = url(uri);\n\t  var source = parsed.source;\n\t  var id = parsed.id;\n\t  var path = parsed.path;\n\t  var sameNamespace = cache[id] && path in cache[id].nsps;\n\t  var newConnection = opts.forceNew || opts['force new connection'] || false === opts.multiplex || sameNamespace;\n\t\n\t  var io;\n\t\n\t  if (newConnection) {\n\t\n\t    io = Manager(source, opts);\n\t  } else {\n\t    if (!cache[id]) {\n\t\n\t      cache[id] = Manager(source, opts);\n\t    }\n\t    io = cache[id];\n\t  }\n\t  if (parsed.query && !opts.query) {\n\t    opts.query = parsed.query;\n\t  }\n\t  return io.socket(parsed.path, opts);\n\t}\n\t\n\t/**\r\n\t * Protocol version.\r\n\t *\r\n\t * @api public\r\n\t */\n\t\n\texports.protocol = parser.protocol;\n\t\n\t/**\r\n\t * `connect`.\r\n\t *\r\n\t * @param {String} uri\r\n\t * @api public\r\n\t */\n\t\n\texports.connect = lookup;\n\t\n\t/**\r\n\t * Expose constructors for standalone build.\r\n\t *\r\n\t * @api public\r\n\t */\n\t\n\texports.Manager = __webpack_require__(9);\n\texports.Socket = __webpack_require__(37);\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\t/**\r\n\t * Module dependencies.\r\n\t */\n\t\n\tvar parseuri = __webpack_require__(2);\n\tvar debug = __webpack_require__(3)('socket.io-client:url');\n\t\n\t/**\r\n\t * Module exports.\r\n\t */\n\t\n\tmodule.exports = url;\n\t\n\t/**\r\n\t * URL parser.\r\n\t *\r\n\t * @param {String} url\r\n\t * @param {Object} An object meant to mimic window.location.\r\n\t *                 Defaults to window.location.\r\n\t * @api public\r\n\t */\n\t\n\tfunction url(uri, loc) {\n\t  var obj = uri;\n\t\n\t  // default to window.location\n\t  loc = loc || global.location;\n\t  if (null == uri) uri = loc.protocol + '//' + loc.host;\n\t\n\t  // relative path support\n\t  if ('string' === typeof uri) {\n\t    if ('/' === uri.charAt(0)) {\n\t      if ('/' === uri.charAt(1)) {\n\t        uri = loc.protocol + uri;\n\t      } else {\n\t        uri = loc.host + uri;\n\t      }\n\t    }\n\t\n\t    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n\t\n\t      if ('undefined' !== typeof loc) {\n\t        uri = loc.protocol + '//' + uri;\n\t      } else {\n\t        uri = 'https://' + uri;\n\t      }\n\t    }\n\t\n\t    // parse\n\t\n\t    obj = parseuri(uri);\n\t  }\n\t\n\t  // make sure we treat `localhost:80` and `localhost` equally\n\t  if (!obj.port) {\n\t    if (/^(http|ws)$/.test(obj.protocol)) {\n\t      obj.port = '80';\n\t    } else if (/^(http|ws)s$/.test(obj.protocol)) {\n\t      obj.port = '443';\n\t    }\n\t  }\n\t\n\t  obj.path = obj.path || '/';\n\t\n\t  var ipv6 = obj.host.indexOf(':') !== -1;\n\t  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\n\t\n\t  // define unique id\n\t  obj.id = obj.protocol + '://' + host + ':' + obj.port;\n\t  // define href\n\t  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : ':' + obj.port);\n\t\n\t  return obj;\n\t}\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\t/**\r\n\t * Parses an URI\r\n\t *\r\n\t * @author Steven Levithan <stevenlevithan.com> (MIT license)\r\n\t * @api private\r\n\t */\r\n\t\r\n\tvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\r\n\t\r\n\tvar parts = [\r\n\t    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\r\n\t];\r\n\t\r\n\tmodule.exports = function parseuri(str) {\r\n\t    var src = str,\r\n\t        b = str.indexOf('['),\r\n\t        e = str.indexOf(']');\r\n\t\r\n\t    if (b != -1 && e != -1) {\r\n\t        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\r\n\t    }\r\n\t\r\n\t    var m = re.exec(str || ''),\r\n\t        uri = {},\r\n\t        i = 14;\r\n\t\r\n\t    while (i--) {\r\n\t        uri[parts[i]] = m[i] || '';\r\n\t    }\r\n\t\r\n\t    if (b != -1 && e != -1) {\r\n\t        uri.source = src;\r\n\t        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\r\n\t        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\r\n\t        uri.ipv6uri = true;\r\n\t    }\r\n\t\r\n\t    return uri;\r\n\t};\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = function () {\n\t  return function () {};\n\t};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar debug = __webpack_require__(3)('socket.io-parser');\n\tvar Emitter = __webpack_require__(5);\n\tvar binary = __webpack_require__(6);\n\tvar isArray = __webpack_require__(7);\n\tvar isBuf = __webpack_require__(8);\n\t\n\t/**\n\t * Protocol version.\n\t *\n\t * @api public\n\t */\n\t\n\texports.protocol = 4;\n\t\n\t/**\n\t * Packet types.\n\t *\n\t * @api public\n\t */\n\t\n\texports.types = [\n\t  'CONNECT',\n\t  'DISCONNECT',\n\t  'EVENT',\n\t  'ACK',\n\t  'ERROR',\n\t  'BINARY_EVENT',\n\t  'BINARY_ACK'\n\t];\n\t\n\t/**\n\t * Packet type `connect`.\n\t *\n\t * @api public\n\t */\n\t\n\texports.CONNECT = 0;\n\t\n\t/**\n\t * Packet type `disconnect`.\n\t *\n\t * @api public\n\t */\n\t\n\texports.DISCONNECT = 1;\n\t\n\t/**\n\t * Packet type `event`.\n\t *\n\t * @api public\n\t */\n\t\n\texports.EVENT = 2;\n\t\n\t/**\n\t * Packet type `ack`.\n\t *\n\t * @api public\n\t */\n\t\n\texports.ACK = 3;\n\t\n\t/**\n\t * Packet type `error`.\n\t *\n\t * @api public\n\t */\n\t\n\texports.ERROR = 4;\n\t\n\t/**\n\t * Packet type 'binary event'\n\t *\n\t * @api public\n\t */\n\t\n\texports.BINARY_EVENT = 5;\n\t\n\t/**\n\t * Packet type `binary ack`. For acks with binary arguments.\n\t *\n\t * @api public\n\t */\n\t\n\texports.BINARY_ACK = 6;\n\t\n\t/**\n\t * Encoder constructor.\n\t *\n\t * @api public\n\t */\n\t\n\texports.Encoder = Encoder;\n\t\n\t/**\n\t * Decoder constructor.\n\t *\n\t * @api public\n\t */\n\t\n\texports.Decoder = Decoder;\n\t\n\t/**\n\t * A socket.io Encoder instance\n\t *\n\t * @api public\n\t */\n\t\n\tfunction Encoder() {}\n\t\n\tvar ERROR_PACKET = exports.ERROR + '\"encode error\"';\n\t\n\t/**\n\t * Encode a packet as a single string if non-binary, or as a\n\t * buffer sequence, depending on packet type.\n\t *\n\t * @param {Object} obj - packet object\n\t * @param {Function} callback - function to handle encodings (likely engine.write)\n\t * @return Calls callback with Array of encodings\n\t * @api public\n\t */\n\t\n\tEncoder.prototype.encode = function(obj, callback){\n\t\n\t\n\t  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n\t    encodeAsBinary(obj, callback);\n\t  } else {\n\t    var encoding = encodeAsString(obj);\n\t    callback([encoding]);\n\t  }\n\t};\n\t\n\t/**\n\t * Encode packet as string.\n\t *\n\t * @param {Object} packet\n\t * @return {String} encoded\n\t * @api private\n\t */\n\t\n\tfunction encodeAsString(obj) {\n\t\n\t  // first is type\n\t  var str = '' + obj.type;\n\t\n\t  // attachments if we have them\n\t  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n\t    str += obj.attachments + '-';\n\t  }\n\t\n\t  // if we have a namespace other than `/`\n\t  // we append it followed by a comma `,`\n\t  if (obj.nsp && '/' !== obj.nsp) {\n\t    str += obj.nsp + ',';\n\t  }\n\t\n\t  // immediately followed by the id\n\t  if (null != obj.id) {\n\t    str += obj.id;\n\t  }\n\t\n\t  // json data\n\t  if (null != obj.data) {\n\t    var payload = tryStringify(obj.data);\n\t    if (payload !== false) {\n\t      str += payload;\n\t    } else {\n\t      return ERROR_PACKET;\n\t    }\n\t  }\n\t\n\t\n\t  return str;\n\t}\n\t\n\tfunction tryStringify(str) {\n\t  try {\n\t    return JSON.stringify(str);\n\t  } catch(e){\n\t    return false;\n\t  }\n\t}\n\t\n\t/**\n\t * Encode packet as 'buffer sequence' by removing blobs, and\n\t * deconstructing packet into object with placeholders and\n\t * a list of buffers.\n\t *\n\t * @param {Object} packet\n\t * @return {Buffer} encoded\n\t * @api private\n\t */\n\t\n\tfunction encodeAsBinary(obj, callback) {\n\t\n\t  function writeEncoding(bloblessData) {\n\t    var deconstruction = binary.deconstructPacket(bloblessData);\n\t    var pack = encodeAsString(deconstruction.packet);\n\t    var buffers = deconstruction.buffers;\n\t\n\t    buffers.unshift(pack); // add packet info to beginning of data list\n\t    callback(buffers); // write all the buffers\n\t  }\n\t\n\t  binary.removeBlobs(obj, writeEncoding);\n\t}\n\t\n\t/**\n\t * A socket.io Decoder instance\n\t *\n\t * @return {Object} decoder\n\t * @api public\n\t */\n\t\n\tfunction Decoder() {\n\t  this.reconstructor = null;\n\t}\n\t\n\t/**\n\t * Mix in `Emitter` with Decoder.\n\t */\n\t\n\tEmitter(Decoder.prototype);\n\t\n\t/**\n\t * Decodes an ecoded packet string into packet JSON.\n\t *\n\t * @param {String} obj - encoded packet\n\t * @return {Object} packet\n\t * @api public\n\t */\n\t\n\tDecoder.prototype.add = function(obj) {\n\t  var packet;\n\t  if (typeof obj === 'string') {\n\t    packet = decodeString(obj);\n\t    if (exports.BINARY_EVENT === packet.type || exports.BINARY_ACK === packet.type) { // binary packet's json\n\t      this.reconstructor = new BinaryReconstructor(packet);\n\t\n\t      // no attachments, labeled binary but no binary data to follow\n\t      if (this.reconstructor.reconPack.attachments === 0) {\n\t        this.emit('decoded', packet);\n\t      }\n\t    } else { // non-binary full packet\n\t      this.emit('decoded', packet);\n\t    }\n\t  }\n\t  else if (isBuf(obj) || obj.base64) { // raw binary data\n\t    if (!this.reconstructor) {\n\t      throw new Error('got binary data when not reconstructing a packet');\n\t    } else {\n\t      packet = this.reconstructor.takeBinaryData(obj);\n\t      if (packet) { // received final buffer\n\t        this.reconstructor = null;\n\t        this.emit('decoded', packet);\n\t      }\n\t    }\n\t  }\n\t  else {\n\t    throw new Error('Unknown type: ' + obj);\n\t  }\n\t};\n\t\n\t/**\n\t * Decode a packet String (JSON data)\n\t *\n\t * @param {String} str\n\t * @return {Object} packet\n\t * @api private\n\t */\n\t\n\tfunction decodeString(str) {\n\t  var i = 0;\n\t  // look up type\n\t  var p = {\n\t    type: Number(str.charAt(0))\n\t  };\n\t\n\t  if (null == exports.types[p.type]) {\n\t    return error('unknown packet type ' + p.type);\n\t  }\n\t\n\t  // look up attachments if type binary\n\t  if (exports.BINARY_EVENT === p.type || exports.BINARY_ACK === p.type) {\n\t    var buf = '';\n\t    while (str.charAt(++i) !== '-') {\n\t      buf += str.charAt(i);\n\t      if (i == str.length) break;\n\t    }\n\t    if (buf != Number(buf) || str.charAt(i) !== '-') {\n\t      throw new Error('Illegal attachments');\n\t    }\n\t    p.attachments = Number(buf);\n\t  }\n\t\n\t  // look up namespace (if any)\n\t  if ('/' === str.charAt(i + 1)) {\n\t    p.nsp = '';\n\t    while (++i) {\n\t      var c = str.charAt(i);\n\t      if (',' === c) break;\n\t      p.nsp += c;\n\t      if (i === str.length) break;\n\t    }\n\t  } else {\n\t    p.nsp = '/';\n\t  }\n\t\n\t  // look up id\n\t  var next = str.charAt(i + 1);\n\t  if ('' !== next && Number(next) == next) {\n\t    p.id = '';\n\t    while (++i) {\n\t      var c = str.charAt(i);\n\t      if (null == c || Number(c) != c) {\n\t        --i;\n\t        break;\n\t      }\n\t      p.id += str.charAt(i);\n\t      if (i === str.length) break;\n\t    }\n\t    p.id = Number(p.id);\n\t  }\n\t\n\t  // look up json data\n\t  if (str.charAt(++i)) {\n\t    var payload = tryParse(str.substr(i));\n\t    var isPayloadValid = payload !== false && (p.type === exports.ERROR || isArray(payload));\n\t    if (isPayloadValid) {\n\t      p.data = payload;\n\t    } else {\n\t      return error('invalid payload');\n\t    }\n\t  }\n\t\n\t\n\t  return p;\n\t}\n\t\n\tfunction tryParse(str) {\n\t  try {\n\t    return JSON.parse(str);\n\t  } catch(e){\n\t    return false;\n\t  }\n\t}\n\t\n\t/**\n\t * Deallocates a parser's resources\n\t *\n\t * @api public\n\t */\n\t\n\tDecoder.prototype.destroy = function() {\n\t  if (this.reconstructor) {\n\t    this.reconstructor.finishedReconstruction();\n\t  }\n\t};\n\t\n\t/**\n\t * A manager of a binary event's 'buffer sequence'. Should\n\t * be constructed whenever a packet of type BINARY_EVENT is\n\t * decoded.\n\t *\n\t * @param {Object} packet\n\t * @return {BinaryReconstructor} initialized reconstructor\n\t * @api private\n\t */\n\t\n\tfunction BinaryReconstructor(packet) {\n\t  this.reconPack = packet;\n\t  this.buffers = [];\n\t}\n\t\n\t/**\n\t * Method to be called when binary data received from connection\n\t * after a BINARY_EVENT packet.\n\t *\n\t * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n\t * @return {null | Object} returns null if more binary data is expected or\n\t *   a reconstructed packet object if all buffers have been received.\n\t * @api private\n\t */\n\t\n\tBinaryReconstructor.prototype.takeBinaryData = function(binData) {\n\t  this.buffers.push(binData);\n\t  if (this.buffers.length === this.reconPack.attachments) { // done with buffer list\n\t    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n\t    this.finishedReconstruction();\n\t    return packet;\n\t  }\n\t  return null;\n\t};\n\t\n\t/**\n\t * Cleans up binary packet reconstruction variables.\n\t *\n\t * @api private\n\t */\n\t\n\tBinaryReconstructor.prototype.finishedReconstruction = function() {\n\t  this.reconPack = null;\n\t  this.buffers = [];\n\t};\n\t\n\tfunction error(msg) {\n\t  return {\n\t    type: exports.ERROR,\n\t    data: 'parser error: ' + msg\n\t  };\n\t}\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\r\n\t/**\r\n\t * Expose `Emitter`.\r\n\t */\r\n\t\r\n\tif (true) {\r\n\t  module.exports = Emitter;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Initialize a new `Emitter`.\r\n\t *\r\n\t * @api public\r\n\t */\r\n\t\r\n\tfunction Emitter(obj) {\r\n\t  if (obj) return mixin(obj);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Mixin the emitter properties.\r\n\t *\r\n\t * @param {Object} obj\r\n\t * @return {Object}\r\n\t * @api private\r\n\t */\r\n\t\r\n\tfunction mixin(obj) {\r\n\t  for (var key in Emitter.prototype) {\r\n\t    obj[key] = Emitter.prototype[key];\r\n\t  }\r\n\t  return obj;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Listen on the given `event` with `fn`.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Function} fn\r\n\t * @return {Emitter}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.on =\r\n\tEmitter.prototype.addEventListener = function(event, fn){\r\n\t  this._callbacks = this._callbacks || {};\r\n\t  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n\t    .push(fn);\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Adds an `event` listener that will be invoked a single\r\n\t * time then automatically removed.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Function} fn\r\n\t * @return {Emitter}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.once = function(event, fn){\r\n\t  function on() {\r\n\t    this.off(event, on);\r\n\t    fn.apply(this, arguments);\r\n\t  }\r\n\t\r\n\t  on.fn = fn;\r\n\t  this.on(event, on);\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Remove the given callback for `event` or all\r\n\t * registered callbacks.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Function} fn\r\n\t * @return {Emitter}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.off =\r\n\tEmitter.prototype.removeListener =\r\n\tEmitter.prototype.removeAllListeners =\r\n\tEmitter.prototype.removeEventListener = function(event, fn){\r\n\t  this._callbacks = this._callbacks || {};\r\n\t\r\n\t  // all\r\n\t  if (0 == arguments.length) {\r\n\t    this._callbacks = {};\r\n\t    return this;\r\n\t  }\r\n\t\r\n\t  // specific event\r\n\t  var callbacks = this._callbacks['$' + event];\r\n\t  if (!callbacks) return this;\r\n\t\r\n\t  // remove all handlers\r\n\t  if (1 == arguments.length) {\r\n\t    delete this._callbacks['$' + event];\r\n\t    return this;\r\n\t  }\r\n\t\r\n\t  // remove specific handler\r\n\t  var cb;\r\n\t  for (var i = 0; i < callbacks.length; i++) {\r\n\t    cb = callbacks[i];\r\n\t    if (cb === fn || cb.fn === fn) {\r\n\t      callbacks.splice(i, 1);\r\n\t      break;\r\n\t    }\r\n\t  }\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Emit `event` with the given args.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Mixed} ...\r\n\t * @return {Emitter}\r\n\t */\r\n\t\r\n\tEmitter.prototype.emit = function(event){\r\n\t  this._callbacks = this._callbacks || {};\r\n\t  var args = [].slice.call(arguments, 1)\r\n\t    , callbacks = this._callbacks['$' + event];\r\n\t\r\n\t  if (callbacks) {\r\n\t    callbacks = callbacks.slice(0);\r\n\t    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n\t      callbacks[i].apply(this, args);\r\n\t    }\r\n\t  }\r\n\t\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Return array of callbacks for `event`.\r\n\t *\r\n\t * @param {String} event\r\n\t * @return {Array}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.listeners = function(event){\r\n\t  this._callbacks = this._callbacks || {};\r\n\t  return this._callbacks['$' + event] || [];\r\n\t};\r\n\t\r\n\t/**\r\n\t * Check if this emitter has `event` handlers.\r\n\t *\r\n\t * @param {String} event\r\n\t * @return {Boolean}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.hasListeners = function(event){\r\n\t  return !! this.listeners(event).length;\r\n\t};\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*global Blob,File*/\n\t\n\t/**\n\t * Module requirements\n\t */\n\t\n\tvar isArray = __webpack_require__(7);\n\tvar isBuf = __webpack_require__(8);\n\tvar toString = Object.prototype.toString;\n\tvar withNativeBlob = typeof global.Blob === 'function' || toString.call(global.Blob) === '[object BlobConstructor]';\n\tvar withNativeFile = typeof global.File === 'function' || toString.call(global.File) === '[object FileConstructor]';\n\t\n\t/**\n\t * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n\t * Anything with blobs or files should be fed through removeBlobs before coming\n\t * here.\n\t *\n\t * @param {Object} packet - socket.io event packet\n\t * @return {Object} with deconstructed packet and list of buffers\n\t * @api public\n\t */\n\t\n\texports.deconstructPacket = function(packet) {\n\t  var buffers = [];\n\t  var packetData = packet.data;\n\t  var pack = packet;\n\t  pack.data = _deconstructPacket(packetData, buffers);\n\t  pack.attachments = buffers.length; // number of binary 'attachments'\n\t  return {packet: pack, buffers: buffers};\n\t};\n\t\n\tfunction _deconstructPacket(data, buffers) {\n\t  if (!data) return data;\n\t\n\t  if (isBuf(data)) {\n\t    var placeholder = { _placeholder: true, num: buffers.length };\n\t    buffers.push(data);\n\t    return placeholder;\n\t  } else if (isArray(data)) {\n\t    var newData = new Array(data.length);\n\t    for (var i = 0; i < data.length; i++) {\n\t      newData[i] = _deconstructPacket(data[i], buffers);\n\t    }\n\t    return newData;\n\t  } else if (typeof data === 'object' && !(data instanceof Date)) {\n\t    var newData = {};\n\t    for (var key in data) {\n\t      newData[key] = _deconstructPacket(data[key], buffers);\n\t    }\n\t    return newData;\n\t  }\n\t  return data;\n\t}\n\t\n\t/**\n\t * Reconstructs a binary packet from its placeholder packet and buffers\n\t *\n\t * @param {Object} packet - event packet with placeholders\n\t * @param {Array} buffers - binary buffers to put in placeholder positions\n\t * @return {Object} reconstructed packet\n\t * @api public\n\t */\n\t\n\texports.reconstructPacket = function(packet, buffers) {\n\t  packet.data = _reconstructPacket(packet.data, buffers);\n\t  packet.attachments = undefined; // no longer useful\n\t  return packet;\n\t};\n\t\n\tfunction _reconstructPacket(data, buffers) {\n\t  if (!data) return data;\n\t\n\t  if (data && data._placeholder) {\n\t    return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n\t  } else if (isArray(data)) {\n\t    for (var i = 0; i < data.length; i++) {\n\t      data[i] = _reconstructPacket(data[i], buffers);\n\t    }\n\t  } else if (typeof data === 'object') {\n\t    for (var key in data) {\n\t      data[key] = _reconstructPacket(data[key], buffers);\n\t    }\n\t  }\n\t\n\t  return data;\n\t}\n\t\n\t/**\n\t * Asynchronously removes Blobs or Files from data via\n\t * FileReader's readAsArrayBuffer method. Used before encoding\n\t * data as msgpack. Calls callback with the blobless data.\n\t *\n\t * @param {Object} data\n\t * @param {Function} callback\n\t * @api private\n\t */\n\t\n\texports.removeBlobs = function(data, callback) {\n\t  function _removeBlobs(obj, curKey, containingObject) {\n\t    if (!obj) return obj;\n\t\n\t    // convert any blob\n\t    if ((withNativeBlob && obj instanceof Blob) ||\n\t        (withNativeFile && obj instanceof File)) {\n\t      pendingBlobs++;\n\t\n\t      // async filereader\n\t      var fileReader = new FileReader();\n\t      fileReader.onload = function() { // this.result == arraybuffer\n\t        if (containingObject) {\n\t          containingObject[curKey] = this.result;\n\t        }\n\t        else {\n\t          bloblessData = this.result;\n\t        }\n\t\n\t        // if nothing pending its callback time\n\t        if(! --pendingBlobs) {\n\t          callback(bloblessData);\n\t        }\n\t      };\n\t\n\t      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n\t    } else if (isArray(obj)) { // handle array\n\t      for (var i = 0; i < obj.length; i++) {\n\t        _removeBlobs(obj[i], i, obj);\n\t      }\n\t    } else if (typeof obj === 'object' && !isBuf(obj)) { // and object\n\t      for (var key in obj) {\n\t        _removeBlobs(obj[key], key, obj);\n\t      }\n\t    }\n\t  }\n\t\n\t  var pendingBlobs = 0;\n\t  var bloblessData = data;\n\t  _removeBlobs(bloblessData);\n\t  if (!pendingBlobs) {\n\t    callback(bloblessData);\n\t  }\n\t};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\n\tvar toString = {}.toString;\n\t\n\tmodule.exports = Array.isArray || function (arr) {\n\t  return toString.call(arr) == '[object Array]';\n\t};\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\n\tmodule.exports = isBuf;\n\t\n\tvar withNativeBuffer = typeof global.Buffer === 'function' && typeof global.Buffer.isBuffer === 'function';\n\tvar withNativeArrayBuffer = typeof global.ArrayBuffer === 'function';\n\t\n\tvar isView = (function () {\n\t  if (withNativeArrayBuffer && typeof global.ArrayBuffer.isView === 'function') {\n\t    return global.ArrayBuffer.isView;\n\t  } else {\n\t    return function (obj) { return obj.buffer instanceof global.ArrayBuffer; };\n\t  }\n\t})();\n\t\n\t/**\n\t * Returns true if obj is a buffer or an arraybuffer.\n\t *\n\t * @api private\n\t */\n\t\n\tfunction isBuf(obj) {\n\t  return (withNativeBuffer && global.Buffer.isBuffer(obj)) ||\n\t          (withNativeArrayBuffer && (obj instanceof global.ArrayBuffer || isView(obj)));\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\t/**\r\n\t * Module dependencies.\r\n\t */\n\t\n\tvar eio = __webpack_require__(10);\n\tvar Socket = __webpack_require__(37);\n\tvar Emitter = __webpack_require__(5);\n\tvar parser = __webpack_require__(4);\n\tvar on = __webpack_require__(39);\n\tvar bind = __webpack_require__(40);\n\tvar debug = __webpack_require__(3)('socket.io-client:manager');\n\tvar indexOf = __webpack_require__(36);\n\tvar Backoff = __webpack_require__(41);\n\t\n\t/**\r\n\t * IE6+ hasOwnProperty\r\n\t */\n\t\n\tvar has = Object.prototype.hasOwnProperty;\n\t\n\t/**\r\n\t * Module exports\r\n\t */\n\t\n\tmodule.exports = Manager;\n\t\n\t/**\r\n\t * `Manager` constructor.\r\n\t *\r\n\t * @param {String} engine instance or engine uri/opts\r\n\t * @param {Object} options\r\n\t * @api public\r\n\t */\n\t\n\tfunction Manager(uri, opts) {\n\t  if (!(this instanceof Manager)) return new Manager(uri, opts);\n\t  if (uri && 'object' === (typeof uri === 'undefined' ? 'undefined' : _typeof(uri))) {\n\t    opts = uri;\n\t    uri = undefined;\n\t  }\n\t  opts = opts || {};\n\t\n\t  opts.path = opts.path || '/socket.io';\n\t  this.nsps = {};\n\t  this.subs = [];\n\t  this.opts = opts;\n\t  this.reconnection(opts.reconnection !== false);\n\t  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n\t  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n\t  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n\t  this.randomizationFactor(opts.randomizationFactor || 0.5);\n\t  this.backoff = new Backoff({\n\t    min: this.reconnectionDelay(),\n\t    max: this.reconnectionDelayMax(),\n\t    jitter: this.randomizationFactor()\n\t  });\n\t  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n\t  this.readyState = 'closed';\n\t  this.uri = uri;\n\t  this.connecting = [];\n\t  this.lastPing = null;\n\t  this.encoding = false;\n\t  this.packetBuffer = [];\n\t  var _parser = opts.parser || parser;\n\t  this.encoder = new _parser.Encoder();\n\t  this.decoder = new _parser.Decoder();\n\t  this.autoConnect = opts.autoConnect !== false;\n\t  if (this.autoConnect) this.open();\n\t}\n\t\n\t/**\r\n\t * Propagate given event to sockets and emit on `this`\r\n\t *\r\n\t * @api private\r\n\t */\n\t\n\tManager.prototype.emitAll = function () {\n\t  this.emit.apply(this, arguments);\n\t  for (var nsp in this.nsps) {\n\t    if (has.call(this.nsps, nsp)) {\n\t      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n\t    }\n\t  }\n\t};\n\t\n\t/**\r\n\t * Update `socket.id` of all sockets\r\n\t *\r\n\t * @api private\r\n\t */\n\t\n\tManager.prototype.updateSocketIds = function () {\n\t  for (var nsp in this.nsps) {\n\t    if (has.call(this.nsps, nsp)) {\n\t      this.nsps[nsp].id = this.generateId(nsp);\n\t    }\n\t  }\n\t};\n\t\n\t/**\r\n\t * generate `socket.id` for the given `nsp`\r\n\t *\r\n\t * @param {String} nsp\r\n\t * @return {String}\r\n\t * @api private\r\n\t */\n\t\n\tManager.prototype.generateId = function (nsp) {\n\t  return (nsp === '/' ? '' : nsp + '#') + this.engine.id;\n\t};\n\t\n\t/**\r\n\t * Mix in `Emitter`.\r\n\t */\n\t\n\tEmitter(Manager.prototype);\n\t\n\t/**\r\n\t * Sets the `reconnection` config.\r\n\t *\r\n\t * @param {Boolean} true/false if it should automatically reconnect\r\n\t * @return {Manager} self or value\r\n\t * @api public\r\n\t */\n\t\n\tManager.prototype.reconnection = function (v) {\n\t  if (!arguments.length) return this._reconnection;\n\t  this._reconnection = !!v;\n\t  return this;\n\t};\n\t\n\t/**\r\n\t * Sets the reconnection attempts config.\r\n\t *\r\n\t * @param {Number} max reconnection attempts before giving up\r\n\t * @return {Manager} self or value\r\n\t * @api public\r\n\t */\n\t\n\tManager.prototype.reconnectionAttempts = function (v) {\n\t  if (!arguments.length) return this._reconnectionAttempts;\n\t  this._reconnectionAttempts = v;\n\t  return this;\n\t};\n\t\n\t/**\r\n\t * Sets the delay between reconnections.\r\n\t *\r\n\t * @param {Number} delay\r\n\t * @return {Manager} self or value\r\n\t * @api public\r\n\t */\n\t\n\tManager.prototype.reconnectionDelay = function (v) {\n\t  if (!arguments.length) return this._reconnectionDelay;\n\t  this._reconnectionDelay = v;\n\t  this.backoff && this.backoff.setMin(v);\n\t  return this;\n\t};\n\t\n\tManager.prototype.randomizationFactor = function (v) {\n\t  if (!arguments.length) return this._randomizationFactor;\n\t  this._randomizationFactor = v;\n\t  this.backoff && this.backoff.setJitter(v);\n\t  return this;\n\t};\n\t\n\t/**\r\n\t * Sets the maximum delay between reconnections.\r\n\t *\r\n\t * @param {Number} delay\r\n\t * @return {Manager} self or value\r\n\t * @api public\r\n\t */\n\t\n\tManager.prototype.reconnectionDelayMax = function (v) {\n\t  if (!arguments.length) return this._reconnectionDelayMax;\n\t  this._reconnectionDelayMax = v;\n\t  this.backoff && this.backoff.setMax(v);\n\t  return this;\n\t};\n\t\n\t/**\r\n\t * Sets the connection timeout. `false` to disable\r\n\t *\r\n\t * @return {Manager} self or value\r\n\t * @api public\r\n\t */\n\t\n\tManager.prototype.timeout = function (v) {\n\t  if (!arguments.length) return this._timeout;\n\t  this._timeout = v;\n\t  return this;\n\t};\n\t\n\t/**\r\n\t * Starts trying to reconnect if reconnection is enabled and we have not\r\n\t * started reconnecting yet\r\n\t *\r\n\t * @api private\r\n\t */\n\t\n\tManager.prototype.maybeReconnectOnOpen = function () {\n\t  // Only try to reconnect if it's the first time we're connecting\n\t  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n\t    // keeps reconnection from firing twice for the same reconnection loop\n\t    this.reconnect();\n\t  }\n\t};\n\t\n\t/**\r\n\t * Sets the current transport `socket`.\r\n\t *\r\n\t * @param {Function} optional, callback\r\n\t * @return {Manager} self\r\n\t * @api public\r\n\t */\n\t\n\tManager.prototype.open = Manager.prototype.connect = function (fn, opts) {\n\t\n\t  if (~this.readyState.indexOf('open')) return this;\n\t\n\t  this.engine = eio(this.uri, this.opts);\n\t  var socket = this.engine;\n\t  var self = this;\n\t  this.readyState = 'opening';\n\t  this.skipReconnect = false;\n\t\n\t  // emit `open`\n\t  var openSub = on(socket, 'open', function () {\n\t    self.onopen();\n\t    fn && fn();\n\t  });\n\t\n\t  // emit `connect_error`\n\t  var errorSub = on(socket, 'error', function (data) {\n\t\n\t    self.cleanup();\n\t    self.readyState = 'closed';\n\t    self.emitAll('connect_error', data);\n\t    if (fn) {\n\t      var err = new Error('Connection error');\n\t      err.data = data;\n\t      fn(err);\n\t    } else {\n\t      // Only do this if there is no fn to handle the error\n\t      self.maybeReconnectOnOpen();\n\t    }\n\t  });\n\t\n\t  // emit `connect_timeout`\n\t  if (false !== this._timeout) {\n\t    var timeout = this._timeout;\n\t\n\t    // set timer\n\t    var timer = setTimeout(function () {\n\t\n\t      openSub.destroy();\n\t      socket.close();\n\t      socket.emit('error', 'timeout');\n\t      self.emitAll('connect_timeout', timeout);\n\t    }, timeout);\n\t\n\t    this.subs.push({\n\t      destroy: function destroy() {\n\t        clearTimeout(timer);\n\t      }\n\t    });\n\t  }\n\t\n\t  this.subs.push(openSub);\n\t  this.subs.push(errorSub);\n\t\n\t  return this;\n\t};\n\t\n\t/**\r\n\t * Called upon transport open.\r\n\t *\r\n\t * @api private\r\n\t */\n\t\n\tManager.prototype.onopen = function () {\n\t\n\t  // clear old subs\n\t  this.cleanup();\n\t\n\t  // mark as open\n\t  this.readyState = 'open';\n\t  this.emit('open');\n\t\n\t  // add new subs\n\t  var socket = this.engine;\n\t  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n\t  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n\t  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n\t  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n\t  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n\t  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n\t};\n\t\n\t/**\r\n\t * Called upon a ping.\r\n\t *\r\n\t * @api private\r\n\t */\n\t\n\tManager.prototype.onping = function () {\n\t  this.lastPing = new Date();\n\t  this.emitAll('ping');\n\t};\n\t\n\t/**\r\n\t * Called upon a packet.\r\n\t *\r\n\t * @api private\r\n\t */\n\t\n\tManager.prototype.onpong = function () {\n\t  this.emitAll('pong', new Date() - this.lastPing);\n\t};\n\t\n\t/**\r\n\t * Called with data.\r\n\t *\r\n\t * @api private\r\n\t */\n\t\n\tManager.prototype.ondata = function (data) {\n\t  this.decoder.add(data);\n\t};\n\t\n\t/**\r\n\t * Called when parser fully decodes a packet.\r\n\t *\r\n\t * @api private\r\n\t */\n\t\n\tManager.prototype.ondecoded = function (packet) {\n\t  this.emit('packet', packet);\n\t};\n\t\n\t/**\r\n\t * Called upon socket error.\r\n\t *\r\n\t * @api private\r\n\t */\n\t\n\tManager.prototype.onerror = function (err) {\n\t\n\t  this.emitAll('error', err);\n\t};\n\t\n\t/**\r\n\t * Creates a new socket for the given `nsp`.\r\n\t *\r\n\t * @return {Socket}\r\n\t * @api public\r\n\t */\n\t\n\tManager.prototype.socket = function (nsp, opts) {\n\t  var socket = this.nsps[nsp];\n\t  if (!socket) {\n\t    socket = new Socket(this, nsp, opts);\n\t    this.nsps[nsp] = socket;\n\t    var self = this;\n\t    socket.on('connecting', onConnecting);\n\t    socket.on('connect', function () {\n\t      socket.id = self.generateId(nsp);\n\t    });\n\t\n\t    if (this.autoConnect) {\n\t      // manually call here since connecting event is fired before listening\n\t      onConnecting();\n\t    }\n\t  }\n\t\n\t  function onConnecting() {\n\t    if (!~indexOf(self.connecting, socket)) {\n\t      self.connecting.push(socket);\n\t    }\n\t  }\n\t\n\t  return socket;\n\t};\n\t\n\t/**\r\n\t * Called upon a socket close.\r\n\t *\r\n\t * @param {Socket} socket\r\n\t */\n\t\n\tManager.prototype.destroy = function (socket) {\n\t  var index = indexOf(this.connecting, socket);\n\t  if (~index) this.connecting.splice(index, 1);\n\t  if (this.connecting.length) return;\n\t\n\t  this.close();\n\t};\n\t\n\t/**\r\n\t * Writes a packet.\r\n\t *\r\n\t * @param {Object} packet\r\n\t * @api private\r\n\t */\n\t\n\tManager.prototype.packet = function (packet) {\n\t\n\t  var self = this;\n\t  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;\n\t\n\t  if (!self.encoding) {\n\t    // encode, then write to engine with result\n\t    self.encoding = true;\n\t    this.encoder.encode(packet, function (encodedPackets) {\n\t      for (var i = 0; i < encodedPackets.length; i++) {\n\t        self.engine.write(encodedPackets[i], packet.options);\n\t      }\n\t      self.encoding = false;\n\t      self.processPacketQueue();\n\t    });\n\t  } else {\n\t    // add packet to the queue\n\t    self.packetBuffer.push(packet);\n\t  }\n\t};\n\t\n\t/**\r\n\t * If packet buffer is non-empty, begins encoding the\r\n\t * next packet in line.\r\n\t *\r\n\t * @api private\r\n\t */\n\t\n\tManager.prototype.processPacketQueue = function () {\n\t  if (this.packetBuffer.length > 0 && !this.encoding) {\n\t    var pack = this.packetBuffer.shift();\n\t    this.packet(pack);\n\t  }\n\t};\n\t\n\t/**\r\n\t * Clean up transport subscriptions and packet buffer.\r\n\t *\r\n\t * @api private\r\n\t */\n\t\n\tManager.prototype.cleanup = function () {\n\t\n\t  var subsLength = this.subs.length;\n\t  for (var i = 0; i < subsLength; i++) {\n\t    var sub = this.subs.shift();\n\t    sub.destroy();\n\t  }\n\t\n\t  this.packetBuffer = [];\n\t  this.encoding = false;\n\t  this.lastPing = null;\n\t\n\t  this.decoder.destroy();\n\t};\n\t\n\t/**\r\n\t * Close the current socket.\r\n\t *\r\n\t * @api private\r\n\t */\n\t\n\tManager.prototype.close = Manager.prototype.disconnect = function () {\n\t\n\t  this.skipReconnect = true;\n\t  this.reconnecting = false;\n\t  if ('opening' === this.readyState) {\n\t    // `onclose` will not fire because\n\t    // an open event never happened\n\t    this.cleanup();\n\t  }\n\t  this.backoff.reset();\n\t  this.readyState = 'closed';\n\t  if (this.engine) this.engine.close();\n\t};\n\t\n\t/**\r\n\t * Called upon engine close.\r\n\t *\r\n\t * @api private\r\n\t */\n\t\n\tManager.prototype.onclose = function (reason) {\n\t\n\t  this.cleanup();\n\t  this.backoff.reset();\n\t  this.readyState = 'closed';\n\t  this.emit('close', reason);\n\t\n\t  if (this._reconnection && !this.skipReconnect) {\n\t    this.reconnect();\n\t  }\n\t};\n\t\n\t/**\r\n\t * Attempt a reconnection.\r\n\t *\r\n\t * @api private\r\n\t */\n\t\n\tManager.prototype.reconnect = function () {\n\t  if (this.reconnecting || this.skipReconnect) return this;\n\t\n\t  var self = this;\n\t\n\t  if (this.backoff.attempts >= this._reconnectionAttempts) {\n\t\n\t    this.backoff.reset();\n\t    this.emitAll('reconnect_failed');\n\t    this.reconnecting = false;\n\t  } else {\n\t    var delay = this.backoff.duration();\n\t\n\t    this.reconnecting = true;\n\t    var timer = setTimeout(function () {\n\t      if (self.skipReconnect) return;\n\t\n\t      self.emitAll('reconnect_attempt', self.backoff.attempts);\n\t      self.emitAll('reconnecting', self.backoff.attempts);\n\t\n\t      // check again for the case socket closed in above events\n\t      if (self.skipReconnect) return;\n\t\n\t      self.open(function (err) {\n\t        if (err) {\n\t\n\t          self.reconnecting = false;\n\t          self.reconnect();\n\t          self.emitAll('reconnect_error', err.data);\n\t        } else {\n\t\n\t          self.onreconnect();\n\t        }\n\t      });\n\t    }, delay);\n\t\n\t    this.subs.push({\n\t      destroy: function destroy() {\n\t        clearTimeout(timer);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\r\n\t * Called upon successful reconnect.\r\n\t *\r\n\t * @api private\r\n\t */\n\t\n\tManager.prototype.onreconnect = function () {\n\t  var attempt = this.backoff.attempts;\n\t  this.reconnecting = false;\n\t  this.backoff.reset();\n\t  this.updateSocketIds();\n\t  this.emitAll('reconnect', attempt);\n\t};\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\r\n\tmodule.exports = __webpack_require__(11);\r\n\t\r\n\t/**\r\n\t * Exports parser\r\n\t *\r\n\t * @api public\r\n\t *\r\n\t */\r\n\tmodule.exports.parser = __webpack_require__(18);\r\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\r\n\t * Module dependencies.\r\n\t */\r\n\t\r\n\tvar transports = __webpack_require__(12);\r\n\tvar Emitter = __webpack_require__(5);\r\n\tvar debug = __webpack_require__(3)('engine.io-client:socket');\r\n\tvar index = __webpack_require__(36);\r\n\tvar parser = __webpack_require__(18);\r\n\tvar parseuri = __webpack_require__(2);\r\n\tvar parseqs = __webpack_require__(30);\r\n\t\r\n\t/**\r\n\t * Module exports.\r\n\t */\r\n\t\r\n\tmodule.exports = Socket;\r\n\t\r\n\t/**\r\n\t * Socket constructor.\r\n\t *\r\n\t * @param {String|Object} uri or options\r\n\t * @param {Object} options\r\n\t * @api public\r\n\t */\r\n\t\r\n\tfunction Socket (uri, opts) {\r\n\t  if (!(this instanceof Socket)) return new Socket(uri, opts);\r\n\t\r\n\t  opts = opts || {};\r\n\t\r\n\t  if (uri && 'object' === typeof uri) {\r\n\t    opts = uri;\r\n\t    uri = null;\r\n\t  }\r\n\t\r\n\t  if (uri) {\r\n\t    uri = parseuri(uri);\r\n\t    opts.hostname = uri.host;\r\n\t    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\r\n\t    opts.port = uri.port;\r\n\t    if (uri.query) opts.query = uri.query;\r\n\t  } else if (opts.host) {\r\n\t    opts.hostname = parseuri(opts.host).host;\r\n\t  }\r\n\t\r\n\t  this.secure = null != opts.secure ? opts.secure\r\n\t    : (global.location && 'https:' === location.protocol);\r\n\t\r\n\t  if (opts.hostname && !opts.port) {\r\n\t    // if no port is specified manually, use the protocol default\r\n\t    opts.port = this.secure ? '443' : '80';\r\n\t  }\r\n\t\r\n\t  this.agent = opts.agent || false;\r\n\t  this.hostname = opts.hostname ||\r\n\t    (global.location ? location.hostname : 'localhost');\r\n\t  this.port = opts.port || (global.location && location.port\r\n\t      ? location.port\r\n\t      : (this.secure ? 443 : 80));\r\n\t  this.query = opts.query || {};\r\n\t  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);\r\n\t  this.upgrade = false !== opts.upgrade;\r\n\t  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\r\n\t  this.forceJSONP = !!opts.forceJSONP;\r\n\t  this.jsonp = false !== opts.jsonp;\r\n\t  this.forceBase64 = !!opts.forceBase64;\r\n\t  this.enablesXDR = !!opts.enablesXDR;\r\n\t  this.timestampParam = opts.timestampParam || 't';\r\n\t  this.timestampRequests = opts.timestampRequests;\r\n\t  this.transports = opts.transports || ['polling', 'websocket'];\r\n\t  this.transportOptions = opts.transportOptions || {};\r\n\t  this.readyState = '';\r\n\t  this.writeBuffer = [];\r\n\t  this.prevBufferLen = 0;\r\n\t  this.policyPort = opts.policyPort || 843;\r\n\t  this.rememberUpgrade = opts.rememberUpgrade || false;\r\n\t  this.binaryType = null;\r\n\t  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\r\n\t  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;\r\n\t\r\n\t  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\r\n\t  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\r\n\t    this.perMessageDeflate.threshold = 1024;\r\n\t  }\r\n\t\r\n\t  // SSL options for Node.js client\r\n\t  this.pfx = opts.pfx || null;\r\n\t  this.key = opts.key || null;\r\n\t  this.passphrase = opts.passphrase || null;\r\n\t  this.cert = opts.cert || null;\r\n\t  this.ca = opts.ca || null;\r\n\t  this.ciphers = opts.ciphers || null;\r\n\t  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;\r\n\t  this.forceNode = !!opts.forceNode;\r\n\t\r\n\t  // other options for Node.js client\r\n\t  var freeGlobal = typeof global === 'object' && global;\r\n\t  if (freeGlobal.global === freeGlobal) {\r\n\t    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\r\n\t      this.extraHeaders = opts.extraHeaders;\r\n\t    }\r\n\t\r\n\t    if (opts.localAddress) {\r\n\t      this.localAddress = opts.localAddress;\r\n\t    }\r\n\t  }\r\n\t\r\n\t  // set on handshake\r\n\t  this.id = null;\r\n\t  this.upgrades = null;\r\n\t  this.pingInterval = null;\r\n\t  this.pingTimeout = null;\r\n\t\r\n\t  // set on heartbeat\r\n\t  this.pingIntervalTimer = null;\r\n\t  this.pingTimeoutTimer = null;\r\n\t\r\n\t  this.open();\r\n\t}\r\n\t\r\n\tSocket.priorWebsocketSuccess = false;\r\n\t\r\n\t/**\r\n\t * Mix in `Emitter`.\r\n\t */\r\n\t\r\n\tEmitter(Socket.prototype);\r\n\t\r\n\t/**\r\n\t * Protocol version.\r\n\t *\r\n\t * @api public\r\n\t */\r\n\t\r\n\tSocket.protocol = parser.protocol; // this is an int\r\n\t\r\n\t/**\r\n\t * Expose deps for legacy compatibility\r\n\t * and standalone browser access.\r\n\t */\r\n\t\r\n\tSocket.Socket = Socket;\r\n\tSocket.Transport = __webpack_require__(17);\r\n\tSocket.transports = __webpack_require__(12);\r\n\tSocket.parser = __webpack_require__(18);\r\n\t\r\n\t/**\r\n\t * Creates transport of the given type.\r\n\t *\r\n\t * @param {String} transport name\r\n\t * @return {Transport}\r\n\t * @api private\r\n\t */\r\n\t\r\n\tSocket.prototype.createTransport = function (name) {\r\n\t\r\n\t  var query = clone(this.query);\r\n\t\r\n\t  // append engine.io protocol identifier\r\n\t  query.EIO = parser.protocol;\r\n\t\r\n\t  // transport name\r\n\t  query.transport = name;\r\n\t\r\n\t  // per-transport options\r\n\t  var options = this.transportOptions[name] || {};\r\n\t\r\n\t  // session id if we already have one\r\n\t  if (this.id) query.sid = this.id;\r\n\t\r\n\t  var transport = new transports[name]({\r\n\t    query: query,\r\n\t    socket: this,\r\n\t    agent: options.agent || this.agent,\r\n\t    hostname: options.hostname || this.hostname,\r\n\t    port: options.port || this.port,\r\n\t    secure: options.secure || this.secure,\r\n\t    path: options.path || this.path,\r\n\t    forceJSONP: options.forceJSONP || this.forceJSONP,\r\n\t    jsonp: options.jsonp || this.jsonp,\r\n\t    forceBase64: options.forceBase64 || this.forceBase64,\r\n\t    enablesXDR: options.enablesXDR || this.enablesXDR,\r\n\t    timestampRequests: options.timestampRequests || this.timestampRequests,\r\n\t    timestampParam: options.timestampParam || this.timestampParam,\r\n\t    policyPort: options.policyPort || this.policyPort,\r\n\t    pfx: options.pfx || this.pfx,\r\n\t    key: options.key || this.key,\r\n\t    passphrase: options.passphrase || this.passphrase,\r\n\t    cert: options.cert || this.cert,\r\n\t    ca: options.ca || this.ca,\r\n\t    ciphers: options.ciphers || this.ciphers,\r\n\t    rejectUnauthorized: options.rejectUnauthorized || this.rejectUnauthorized,\r\n\t    perMessageDeflate: options.perMessageDeflate || this.perMessageDeflate,\r\n\t    extraHeaders: options.extraHeaders || this.extraHeaders,\r\n\t    forceNode: options.forceNode || this.forceNode,\r\n\t    localAddress: options.localAddress || this.localAddress,\r\n\t    requestTimeout: options.requestTimeout || this.requestTimeout,\r\n\t    protocols: options.protocols || void (0)\r\n\t  });\r\n\t\r\n\t  return transport;\r\n\t};\r\n\t\r\n\tfunction clone (obj) {\r\n\t  var o = {};\r\n\t  for (var i in obj) {\r\n\t    if (obj.hasOwnProperty(i)) {\r\n\t      o[i] = obj[i];\r\n\t    }\r\n\t  }\r\n\t  return o;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Initializes transport to use and starts probe.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\tSocket.prototype.open = function () {\r\n\t  var transport;\r\n\t  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {\r\n\t    transport = 'websocket';\r\n\t  } else if (0 === this.transports.length) {\r\n\t    // Emit error on next tick so it can be listened to\r\n\t    var self = this;\r\n\t    setTimeout(function () {\r\n\t      self.emit('error', 'No transports available');\r\n\t    }, 0);\r\n\t    return;\r\n\t  } else {\r\n\t    transport = this.transports[0];\r\n\t  }\r\n\t  this.readyState = 'opening';\r\n\t\r\n\t  // Retry with the next transport if the transport is disabled (jsonp: false)\r\n\t  try {\r\n\t    transport = this.createTransport(transport);\r\n\t  } catch (e) {\r\n\t    this.transports.shift();\r\n\t    this.open();\r\n\t    return;\r\n\t  }\r\n\t\r\n\t  transport.open();\r\n\t  this.setTransport(transport);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Sets the current transport. Disables the existing one (if any).\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tSocket.prototype.setTransport = function (transport) {\r\n\t\r\n\t  var self = this;\r\n\t\r\n\t  if (this.transport) {\r\n\t\r\n\t    this.transport.removeAllListeners();\r\n\t  }\r\n\t\r\n\t  // set up transport\r\n\t  this.transport = transport;\r\n\t\r\n\t  // set up transport listeners\r\n\t  transport\r\n\t  .on('drain', function () {\r\n\t    self.onDrain();\r\n\t  })\r\n\t  .on('packet', function (packet) {\r\n\t    self.onPacket(packet);\r\n\t  })\r\n\t  .on('error', function (e) {\r\n\t    self.onError(e);\r\n\t  })\r\n\t  .on('close', function () {\r\n\t    self.onClose('transport close');\r\n\t  });\r\n\t};\r\n\t\r\n\t/**\r\n\t * Probes a transport.\r\n\t *\r\n\t * @param {String} transport name\r\n\t * @api private\r\n\t */\r\n\t\r\n\tSocket.prototype.probe = function (name) {\r\n\t\r\n\t  var transport = this.createTransport(name, { probe: 1 });\r\n\t  var failed = false;\r\n\t  var self = this;\r\n\t\r\n\t  Socket.priorWebsocketSuccess = false;\r\n\t\r\n\t  function onTransportOpen () {\r\n\t    if (self.onlyBinaryUpgrades) {\r\n\t      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\r\n\t      failed = failed || upgradeLosesBinary;\r\n\t    }\r\n\t    if (failed) return;\r\n\t\r\n\t\r\n\t    transport.send([{ type: 'ping', data: 'probe' }]);\r\n\t    transport.once('packet', function (msg) {\r\n\t      if (failed) return;\r\n\t      if ('pong' === msg.type && 'probe' === msg.data) {\r\n\t\r\n\t        self.upgrading = true;\r\n\t        self.emit('upgrading', transport);\r\n\t        if (!transport) return;\r\n\t        Socket.priorWebsocketSuccess = 'websocket' === transport.name;\r\n\t\r\n\t\r\n\t        self.transport.pause(function () {\r\n\t          if (failed) return;\r\n\t          if ('closed' === self.readyState) return;\r\n\t\r\n\t\r\n\t          cleanup();\r\n\t\r\n\t          self.setTransport(transport);\r\n\t          transport.send([{ type: 'upgrade' }]);\r\n\t          self.emit('upgrade', transport);\r\n\t          transport = null;\r\n\t          self.upgrading = false;\r\n\t          self.flush();\r\n\t        });\r\n\t      } else {\r\n\t\r\n\t        var err = new Error('probe error');\r\n\t        err.transport = transport.name;\r\n\t        self.emit('upgradeError', err);\r\n\t      }\r\n\t    });\r\n\t  }\r\n\t\r\n\t  function freezeTransport () {\r\n\t    if (failed) return;\r\n\t\r\n\t    // Any callback called by transport should be ignored since now\r\n\t    failed = true;\r\n\t\r\n\t    cleanup();\r\n\t\r\n\t    transport.close();\r\n\t    transport = null;\r\n\t  }\r\n\t\r\n\t  // Handle any error that happens while probing\r\n\t  function onerror (err) {\r\n\t    var error = new Error('probe error: ' + err);\r\n\t    error.transport = transport.name;\r\n\t\r\n\t    freezeTransport();\r\n\t\r\n\t\r\n\t\r\n\t    self.emit('upgradeError', error);\r\n\t  }\r\n\t\r\n\t  function onTransportClose () {\r\n\t    onerror('transport closed');\r\n\t  }\r\n\t\r\n\t  // When the socket is closed while we're probing\r\n\t  function onclose () {\r\n\t    onerror('socket closed');\r\n\t  }\r\n\t\r\n\t  // When the socket is upgraded while we're probing\r\n\t  function onupgrade (to) {\r\n\t    if (transport && to.name !== transport.name) {\r\n\t\r\n\t      freezeTransport();\r\n\t    }\r\n\t  }\r\n\t\r\n\t  // Remove all listeners on the transport and on self\r\n\t  function cleanup () {\r\n\t    transport.removeListener('open', onTransportOpen);\r\n\t    transport.removeListener('error', onerror);\r\n\t    transport.removeListener('close', onTransportClose);\r\n\t    self.removeListener('close', onclose);\r\n\t    self.removeListener('upgrading', onupgrade);\r\n\t  }\r\n\t\r\n\t  transport.once('open', onTransportOpen);\r\n\t  transport.once('error', onerror);\r\n\t  transport.once('close', onTransportClose);\r\n\t\r\n\t  this.once('close', onclose);\r\n\t  this.once('upgrading', onupgrade);\r\n\t\r\n\t  transport.open();\r\n\t};\r\n\t\r\n\t/**\r\n\t * Called when connection is deemed open.\r\n\t *\r\n\t * @api public\r\n\t */\r\n\t\r\n\tSocket.prototype.onOpen = function () {\r\n\t\r\n\t  this.readyState = 'open';\r\n\t  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\r\n\t  this.emit('open');\r\n\t  this.flush();\r\n\t\r\n\t  // we check for `readyState` in case an `open`\r\n\t  // listener already closed the socket\r\n\t  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\r\n\t\r\n\t    for (var i = 0, l = this.upgrades.length; i < l; i++) {\r\n\t      this.probe(this.upgrades[i]);\r\n\t    }\r\n\t  }\r\n\t};\r\n\t\r\n\t/**\r\n\t * Handles a packet.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tSocket.prototype.onPacket = function (packet) {\r\n\t  if ('opening' === this.readyState || 'open' === this.readyState ||\r\n\t      'closing' === this.readyState) {\r\n\t\r\n\t\r\n\t    this.emit('packet', packet);\r\n\t\r\n\t    // Socket is live - any packet counts\r\n\t    this.emit('heartbeat');\r\n\t\r\n\t    switch (packet.type) {\r\n\t      case 'open':\r\n\t        this.onHandshake(JSON.parse(packet.data));\r\n\t        break;\r\n\t\r\n\t      case 'pong':\r\n\t        this.setPing();\r\n\t        this.emit('pong');\r\n\t        break;\r\n\t\r\n\t      case 'error':\r\n\t        var err = new Error('server error');\r\n\t        err.code = packet.data;\r\n\t        this.onError(err);\r\n\t        break;\r\n\t\r\n\t      case 'message':\r\n\t        this.emit('data', packet.data);\r\n\t        this.emit('message', packet.data);\r\n\t        break;\r\n\t    }\r\n\t  } else {\r\n\t\r\n\t  }\r\n\t};\r\n\t\r\n\t/**\r\n\t * Called upon handshake completion.\r\n\t *\r\n\t * @param {Object} handshake obj\r\n\t * @api private\r\n\t */\r\n\t\r\n\tSocket.prototype.onHandshake = function (data) {\r\n\t  this.emit('handshake', data);\r\n\t  this.id = data.sid;\r\n\t  this.transport.query.sid = data.sid;\r\n\t  this.upgrades = this.filterUpgrades(data.upgrades);\r\n\t  this.pingInterval = data.pingInterval;\r\n\t  this.pingTimeout = data.pingTimeout;\r\n\t  this.onOpen();\r\n\t  // In case open handler closes socket\r\n\t  if ('closed' === this.readyState) return;\r\n\t  this.setPing();\r\n\t\r\n\t  // Prolong liveness of socket on heartbeat\r\n\t  this.removeListener('heartbeat', this.onHeartbeat);\r\n\t  this.on('heartbeat', this.onHeartbeat);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Resets ping timeout.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tSocket.prototype.onHeartbeat = function (timeout) {\r\n\t  clearTimeout(this.pingTimeoutTimer);\r\n\t  var self = this;\r\n\t  self.pingTimeoutTimer = setTimeout(function () {\r\n\t    if ('closed' === self.readyState) return;\r\n\t    self.onClose('ping timeout');\r\n\t  }, timeout || (self.pingInterval + self.pingTimeout));\r\n\t};\r\n\t\r\n\t/**\r\n\t * Pings server every `this.pingInterval` and expects response\r\n\t * within `this.pingTimeout` or closes connection.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tSocket.prototype.setPing = function () {\r\n\t  var self = this;\r\n\t  clearTimeout(self.pingIntervalTimer);\r\n\t  self.pingIntervalTimer = setTimeout(function () {\r\n\t\r\n\t    self.ping();\r\n\t    self.onHeartbeat(self.pingTimeout);\r\n\t  }, self.pingInterval);\r\n\t};\r\n\t\r\n\t/**\r\n\t* Sends a ping packet.\r\n\t*\r\n\t* @api private\r\n\t*/\r\n\t\r\n\tSocket.prototype.ping = function () {\r\n\t  var self = this;\r\n\t  this.sendPacket('ping', function () {\r\n\t    self.emit('ping');\r\n\t  });\r\n\t};\r\n\t\r\n\t/**\r\n\t * Called on `drain` event\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tSocket.prototype.onDrain = function () {\r\n\t  this.writeBuffer.splice(0, this.prevBufferLen);\r\n\t\r\n\t  // setting prevBufferLen = 0 is very important\r\n\t  // for example, when upgrading, upgrade packet is sent over,\r\n\t  // and a nonzero prevBufferLen could cause problems on `drain`\r\n\t  this.prevBufferLen = 0;\r\n\t\r\n\t  if (0 === this.writeBuffer.length) {\r\n\t    this.emit('drain');\r\n\t  } else {\r\n\t    this.flush();\r\n\t  }\r\n\t};\r\n\t\r\n\t/**\r\n\t * Flush write buffers.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tSocket.prototype.flush = function () {\r\n\t  if ('closed' !== this.readyState && this.transport.writable &&\r\n\t    !this.upgrading && this.writeBuffer.length) {\r\n\t\r\n\t    this.transport.send(this.writeBuffer);\r\n\t    // keep track of current length of writeBuffer\r\n\t    // splice writeBuffer and callbackBuffer on `drain`\r\n\t    this.prevBufferLen = this.writeBuffer.length;\r\n\t    this.emit('flush');\r\n\t  }\r\n\t};\r\n\t\r\n\t/**\r\n\t * Sends a message.\r\n\t *\r\n\t * @param {String} message.\r\n\t * @param {Function} callback function.\r\n\t * @param {Object} options.\r\n\t * @return {Socket} for chaining.\r\n\t * @api public\r\n\t */\r\n\t\r\n\tSocket.prototype.write =\r\n\tSocket.prototype.send = function (msg, options, fn) {\r\n\t  this.sendPacket('message', msg, options, fn);\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Sends a packet.\r\n\t *\r\n\t * @param {String} packet type.\r\n\t * @param {String} data.\r\n\t * @param {Object} options.\r\n\t * @param {Function} callback function.\r\n\t * @api private\r\n\t */\r\n\t\r\n\tSocket.prototype.sendPacket = function (type, data, options, fn) {\r\n\t  if ('function' === typeof data) {\r\n\t    fn = data;\r\n\t    data = undefined;\r\n\t  }\r\n\t\r\n\t  if ('function' === typeof options) {\r\n\t    fn = options;\r\n\t    options = null;\r\n\t  }\r\n\t\r\n\t  if ('closing' === this.readyState || 'closed' === this.readyState) {\r\n\t    return;\r\n\t  }\r\n\t\r\n\t  options = options || {};\r\n\t  options.compress = false !== options.compress;\r\n\t\r\n\t  var packet = {\r\n\t    type: type,\r\n\t    data: data,\r\n\t    options: options\r\n\t  };\r\n\t  this.emit('packetCreate', packet);\r\n\t  this.writeBuffer.push(packet);\r\n\t  if (fn) this.once('flush', fn);\r\n\t  this.flush();\r\n\t};\r\n\t\r\n\t/**\r\n\t * Closes the connection.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tSocket.prototype.close = function () {\r\n\t  if ('opening' === this.readyState || 'open' === this.readyState) {\r\n\t    this.readyState = 'closing';\r\n\t\r\n\t    var self = this;\r\n\t\r\n\t    if (this.writeBuffer.length) {\r\n\t      this.once('drain', function () {\r\n\t        if (this.upgrading) {\r\n\t          waitForUpgrade();\r\n\t        } else {\r\n\t          close();\r\n\t        }\r\n\t      });\r\n\t    } else if (this.upgrading) {\r\n\t      waitForUpgrade();\r\n\t    } else {\r\n\t      close();\r\n\t    }\r\n\t  }\r\n\t\r\n\t  function close () {\r\n\t    self.onClose('forced close');\r\n\t\r\n\t    self.transport.close();\r\n\t  }\r\n\t\r\n\t  function cleanupAndClose () {\r\n\t    self.removeListener('upgrade', cleanupAndClose);\r\n\t    self.removeListener('upgradeError', cleanupAndClose);\r\n\t    close();\r\n\t  }\r\n\t\r\n\t  function waitForUpgrade () {\r\n\t    // wait for upgrade to finish since we can't send packets while pausing a transport\r\n\t    self.once('upgrade', cleanupAndClose);\r\n\t    self.once('upgradeError', cleanupAndClose);\r\n\t  }\r\n\t\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Called upon transport error\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tSocket.prototype.onError = function (err) {\r\n\t\r\n\t  Socket.priorWebsocketSuccess = false;\r\n\t  this.emit('error', err);\r\n\t  this.onClose('transport error', err);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Called upon transport close.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tSocket.prototype.onClose = function (reason, desc) {\r\n\t  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\r\n\t\r\n\t    var self = this;\r\n\t\r\n\t    // clear timers\r\n\t    clearTimeout(this.pingIntervalTimer);\r\n\t    clearTimeout(this.pingTimeoutTimer);\r\n\t\r\n\t    // stop event from firing again for transport\r\n\t    this.transport.removeAllListeners('close');\r\n\t\r\n\t    // ensure transport won't stay open\r\n\t    this.transport.close();\r\n\t\r\n\t    // ignore further transport communication\r\n\t    this.transport.removeAllListeners();\r\n\t\r\n\t    // set ready state\r\n\t    this.readyState = 'closed';\r\n\t\r\n\t    // clear session id\r\n\t    this.id = null;\r\n\t\r\n\t    // emit close event\r\n\t    this.emit('close', reason, desc);\r\n\t\r\n\t    // clean buffers after, so users can still\r\n\t    // grab the buffers on `close` event\r\n\t    self.writeBuffer = [];\r\n\t    self.prevBufferLen = 0;\r\n\t  }\r\n\t};\r\n\t\r\n\t/**\r\n\t * Filters upgrades, returning only those matching client transports.\r\n\t *\r\n\t * @param {Array} server upgrades\r\n\t * @api private\r\n\t *\r\n\t */\r\n\t\r\n\tSocket.prototype.filterUpgrades = function (upgrades) {\r\n\t  var filteredUpgrades = [];\r\n\t  for (var i = 0, j = upgrades.length; i < j; i++) {\r\n\t    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\r\n\t  }\r\n\t  return filteredUpgrades;\r\n\t};\r\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\r\n\t * Module dependencies\r\n\t */\r\n\t\r\n\tvar XMLHttpRequest = __webpack_require__(13);\r\n\tvar XHR = __webpack_require__(15);\r\n\tvar JSONP = __webpack_require__(33);\r\n\tvar websocket = __webpack_require__(34);\r\n\t\r\n\t/**\r\n\t * Export transports.\r\n\t */\r\n\t\r\n\texports.polling = polling;\r\n\texports.websocket = websocket;\r\n\t\r\n\t/**\r\n\t * Polling transport polymorphic constructor.\r\n\t * Decides on xhr vs jsonp based on feature detection.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tfunction polling (opts) {\r\n\t  var xhr;\r\n\t  var xd = false;\r\n\t  var xs = false;\r\n\t  var jsonp = false !== opts.jsonp;\r\n\t\r\n\t  if (global.location) {\r\n\t    var isSSL = 'https:' === location.protocol;\r\n\t    var port = location.port;\r\n\t\r\n\t    // some user agents have empty `location.port`\r\n\t    if (!port) {\r\n\t      port = isSSL ? 443 : 80;\r\n\t    }\r\n\t\r\n\t    xd = opts.hostname !== location.hostname || port !== opts.port;\r\n\t    xs = opts.secure !== isSSL;\r\n\t  }\r\n\t\r\n\t  opts.xdomain = xd;\r\n\t  opts.xscheme = xs;\r\n\t  xhr = new XMLHttpRequest(opts);\r\n\t\r\n\t  if ('open' in xhr && !opts.forceJSONP) {\r\n\t    return new XHR(opts);\r\n\t  } else {\r\n\t    if (!jsonp) throw new Error('JSONP disabled');\r\n\t    return new JSONP(opts);\r\n\t  }\r\n\t}\r\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {// browser shim for xmlhttprequest module\r\n\t\r\n\tvar hasCORS = __webpack_require__(14);\r\n\t\r\n\tmodule.exports = function (opts) {\r\n\t  var xdomain = opts.xdomain;\r\n\t\r\n\t  // scheme must be same when usign XDomainRequest\r\n\t  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\r\n\t  var xscheme = opts.xscheme;\r\n\t\r\n\t  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\r\n\t  // https://github.com/Automattic/engine.io-client/pull/217\r\n\t  var enablesXDR = opts.enablesXDR;\r\n\t\r\n\t  // XMLHttpRequest can be disabled on IE\r\n\t  try {\r\n\t    if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\r\n\t      return new XMLHttpRequest();\r\n\t    }\r\n\t  } catch (e) { }\r\n\t\r\n\t  // Use XDomainRequest for IE8 if enablesXDR is true\r\n\t  // because loading bar keeps flashing when using jsonp-polling\r\n\t  // https://github.com/yujiosaka/socke.io-ie8-loading-example\r\n\t  try {\r\n\t    if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {\r\n\t      return new XDomainRequest();\r\n\t    }\r\n\t  } catch (e) { }\r\n\t\r\n\t  if (!xdomain) {\r\n\t    try {\r\n\t      return new global[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');\r\n\t    } catch (e) { }\r\n\t  }\r\n\t};\r\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\n\t\n\t/**\n\t * Module exports.\n\t *\n\t * Logic borrowed from Modernizr:\n\t *\n\t *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n\t */\n\t\n\ttry {\n\t  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n\t    'withCredentials' in new XMLHttpRequest();\n\t} catch (err) {\n\t  // if XMLHttp support is disabled in IE then it will throw\n\t  // when trying to create\n\t  module.exports = false;\n\t}\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\r\n\t * Module requirements.\r\n\t */\r\n\t\r\n\tvar XMLHttpRequest = __webpack_require__(13);\r\n\tvar Polling = __webpack_require__(16);\r\n\tvar Emitter = __webpack_require__(5);\r\n\tvar inherit = __webpack_require__(31);\r\n\tvar debug = __webpack_require__(3)('engine.io-client:polling-xhr');\r\n\t\r\n\t/**\r\n\t * Module exports.\r\n\t */\r\n\t\r\n\tmodule.exports = XHR;\r\n\tmodule.exports.Request = Request;\r\n\t\r\n\t/**\r\n\t * Empty function\r\n\t */\r\n\t\r\n\tfunction empty () {}\r\n\t\r\n\t/**\r\n\t * XHR Polling constructor.\r\n\t *\r\n\t * @param {Object} opts\r\n\t * @api public\r\n\t */\r\n\t\r\n\tfunction XHR (opts) {\r\n\t  Polling.call(this, opts);\r\n\t  this.requestTimeout = opts.requestTimeout;\r\n\t  this.extraHeaders = opts.extraHeaders;\r\n\t\r\n\t  if (global.location) {\r\n\t    var isSSL = 'https:' === location.protocol;\r\n\t    var port = location.port;\r\n\t\r\n\t    // some user agents have empty `location.port`\r\n\t    if (!port) {\r\n\t      port = isSSL ? 443 : 80;\r\n\t    }\r\n\t\r\n\t    this.xd = opts.hostname !== global.location.hostname ||\r\n\t      port !== opts.port;\r\n\t    this.xs = opts.secure !== isSSL;\r\n\t  }\r\n\t}\r\n\t\r\n\t/**\r\n\t * Inherits from Polling.\r\n\t */\r\n\t\r\n\tinherit(XHR, Polling);\r\n\t\r\n\t/**\r\n\t * XHR supports binary\r\n\t */\r\n\t\r\n\tXHR.prototype.supportsBinary = true;\r\n\t\r\n\t/**\r\n\t * Creates a request.\r\n\t *\r\n\t * @param {String} method\r\n\t * @api private\r\n\t */\r\n\t\r\n\tXHR.prototype.request = function (opts) {\r\n\t  opts = opts || {};\r\n\t  opts.uri = this.uri();\r\n\t  opts.xd = this.xd;\r\n\t  opts.xs = this.xs;\r\n\t  opts.agent = this.agent || false;\r\n\t  opts.supportsBinary = this.supportsBinary;\r\n\t  opts.enablesXDR = this.enablesXDR;\r\n\t\r\n\t  // SSL options for Node.js client\r\n\t  opts.pfx = this.pfx;\r\n\t  opts.key = this.key;\r\n\t  opts.passphrase = this.passphrase;\r\n\t  opts.cert = this.cert;\r\n\t  opts.ca = this.ca;\r\n\t  opts.ciphers = this.ciphers;\r\n\t  opts.rejectUnauthorized = this.rejectUnauthorized;\r\n\t  opts.requestTimeout = this.requestTimeout;\r\n\t\r\n\t  // other options for Node.js client\r\n\t  opts.extraHeaders = this.extraHeaders;\r\n\t\r\n\t  return new Request(opts);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Sends data.\r\n\t *\r\n\t * @param {String} data to send.\r\n\t * @param {Function} called upon flush.\r\n\t * @api private\r\n\t */\r\n\t\r\n\tXHR.prototype.doWrite = function (data, fn) {\r\n\t  var isBinary = typeof data !== 'string' && data !== undefined;\r\n\t  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\r\n\t  var self = this;\r\n\t  req.on('success', fn);\r\n\t  req.on('error', function (err) {\r\n\t    self.onError('xhr post error', err);\r\n\t  });\r\n\t  this.sendXhr = req;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Starts a poll cycle.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tXHR.prototype.doPoll = function () {\r\n\t\r\n\t  var req = this.request();\r\n\t  var self = this;\r\n\t  req.on('data', function (data) {\r\n\t    self.onData(data);\r\n\t  });\r\n\t  req.on('error', function (err) {\r\n\t    self.onError('xhr poll error', err);\r\n\t  });\r\n\t  this.pollXhr = req;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Request constructor\r\n\t *\r\n\t * @param {Object} options\r\n\t * @api public\r\n\t */\r\n\t\r\n\tfunction Request (opts) {\r\n\t  this.method = opts.method || 'GET';\r\n\t  this.uri = opts.uri;\r\n\t  this.xd = !!opts.xd;\r\n\t  this.xs = !!opts.xs;\r\n\t  this.async = false !== opts.async;\r\n\t  this.data = undefined !== opts.data ? opts.data : null;\r\n\t  this.agent = opts.agent;\r\n\t  this.isBinary = opts.isBinary;\r\n\t  this.supportsBinary = opts.supportsBinary;\r\n\t  this.enablesXDR = opts.enablesXDR;\r\n\t  this.requestTimeout = opts.requestTimeout;\r\n\t\r\n\t  // SSL options for Node.js client\r\n\t  this.pfx = opts.pfx;\r\n\t  this.key = opts.key;\r\n\t  this.passphrase = opts.passphrase;\r\n\t  this.cert = opts.cert;\r\n\t  this.ca = opts.ca;\r\n\t  this.ciphers = opts.ciphers;\r\n\t  this.rejectUnauthorized = opts.rejectUnauthorized;\r\n\t\r\n\t  // other options for Node.js client\r\n\t  this.extraHeaders = opts.extraHeaders;\r\n\t\r\n\t  this.create();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Mix in `Emitter`.\r\n\t */\r\n\t\r\n\tEmitter(Request.prototype);\r\n\t\r\n\t/**\r\n\t * Creates the XHR object and sends the request.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tRequest.prototype.create = function () {\r\n\t  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\r\n\t\r\n\t  // SSL options for Node.js client\r\n\t  opts.pfx = this.pfx;\r\n\t  opts.key = this.key;\r\n\t  opts.passphrase = this.passphrase;\r\n\t  opts.cert = this.cert;\r\n\t  opts.ca = this.ca;\r\n\t  opts.ciphers = this.ciphers;\r\n\t  opts.rejectUnauthorized = this.rejectUnauthorized;\r\n\t\r\n\t  var xhr = this.xhr = new XMLHttpRequest(opts);\r\n\t  var self = this;\r\n\t\r\n\t  try {\r\n\t\r\n\t    xhr.open(this.method, this.uri, this.async);\r\n\t    try {\r\n\t      if (this.extraHeaders) {\r\n\t        xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\r\n\t        for (var i in this.extraHeaders) {\r\n\t          if (this.extraHeaders.hasOwnProperty(i)) {\r\n\t            xhr.setRequestHeader(i, this.extraHeaders[i]);\r\n\t          }\r\n\t        }\r\n\t      }\r\n\t    } catch (e) {}\r\n\t\r\n\t    if ('POST' === this.method) {\r\n\t      try {\r\n\t        if (this.isBinary) {\r\n\t          xhr.setRequestHeader('Content-type', 'application/octet-stream');\r\n\t        } else {\r\n\t          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\r\n\t        }\r\n\t      } catch (e) {}\r\n\t    }\r\n\t\r\n\t    try {\r\n\t      xhr.setRequestHeader('Accept', '*/*');\r\n\t    } catch (e) {}\r\n\t\r\n\t    if (this.supportsBinary) {\r\n\t      xhr.responseType = 'arraybuffer';\r\n\t    }\r\n\t\r\n\t    // ie6 check\r\n\t    if ('withCredentials' in xhr) {\r\n\t      xhr.withCredentials = true;\r\n\t    }\r\n\t\r\n\t    if (this.requestTimeout) {\r\n\t      xhr.timeout = this.requestTimeout;\r\n\t    }\r\n\t\r\n\t    if (this.hasXDR()) {\r\n\t      xhr.onload = function () {\r\n\t        self.onLoad();\r\n\t      };\r\n\t      xhr.onerror = function () {\r\n\t        self.onError(xhr.responseText);\r\n\t      };\r\n\t    } else {\r\n\t      xhr.onreadystatechange = function () {\r\n\t        if (xhr.readyState === 2) {\r\n\t          try {\r\n\t            var contentType = xhr.getResponseHeader('Content-Type');\r\n\t            if (contentType !== 'application/octet-stream') {\r\n\t              xhr.responseType = 'text';\r\n\t            }\r\n\t          } catch (e) {}\r\n\t        }\r\n\t        if (4 !== xhr.readyState) return;\r\n\t        if (200 === xhr.status || 1223 === xhr.status) {\r\n\t          self.onLoad();\r\n\t        } else {\r\n\t          // make sure the `error` event handler that's user-set\r\n\t          // does not throw in the same tick and gets caught here\r\n\t          setTimeout(function () {\r\n\t            self.onError(xhr.status);\r\n\t          }, 0);\r\n\t        }\r\n\t      };\r\n\t    }\r\n\t\r\n\t\r\n\t    xhr.send(this.data);\r\n\t  } catch (e) {\r\n\t    // Need to defer since .create() is called directly fhrom the constructor\r\n\t    // and thus the 'error' event can only be only bound *after* this exception\r\n\t    // occurs.  Therefore, also, we cannot throw here at all.\r\n\t    setTimeout(function () {\r\n\t      self.onError(e);\r\n\t    }, 0);\r\n\t    return;\r\n\t  }\r\n\t\r\n\t  if (global.document) {\r\n\t    this.index = Request.requestsCount++;\r\n\t    Request.requests[this.index] = this;\r\n\t  }\r\n\t};\r\n\t\r\n\t/**\r\n\t * Called upon successful response.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tRequest.prototype.onSuccess = function () {\r\n\t  this.emit('success');\r\n\t  this.cleanup();\r\n\t};\r\n\t\r\n\t/**\r\n\t * Called if we have data.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tRequest.prototype.onData = function (data) {\r\n\t  this.emit('data', data);\r\n\t  this.onSuccess();\r\n\t};\r\n\t\r\n\t/**\r\n\t * Called upon error.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tRequest.prototype.onError = function (err) {\r\n\t  this.emit('error', err);\r\n\t  this.cleanup(true);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Cleans up house.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tRequest.prototype.cleanup = function (fromError) {\r\n\t  if ('undefined' === typeof this.xhr || null === this.xhr) {\r\n\t    return;\r\n\t  }\r\n\t  // xmlhttprequest\r\n\t  if (this.hasXDR()) {\r\n\t    this.xhr.onload = this.xhr.onerror = empty;\r\n\t  } else {\r\n\t    this.xhr.onreadystatechange = empty;\r\n\t  }\r\n\t\r\n\t  if (fromError) {\r\n\t    try {\r\n\t      this.xhr.abort();\r\n\t    } catch (e) {}\r\n\t  }\r\n\t\r\n\t  if (global.document) {\r\n\t    delete Request.requests[this.index];\r\n\t  }\r\n\t\r\n\t  this.xhr = null;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Called upon load.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tRequest.prototype.onLoad = function () {\r\n\t  var data;\r\n\t  try {\r\n\t    var contentType;\r\n\t    try {\r\n\t      contentType = this.xhr.getResponseHeader('Content-Type');\r\n\t    } catch (e) {}\r\n\t    if (contentType === 'application/octet-stream') {\r\n\t      data = this.xhr.response || this.xhr.responseText;\r\n\t    } else if (this.xhr.responseType === 'arraybuffer') {\r\n\t      data = String.fromCharCode.apply(null, new Uint8Array(this.xhr.response));\r\n\t    } else {\r\n\t      data = this.xhr.responseText;\r\n\t    }\r\n\t  } catch (e) {\r\n\t    this.onError(e);\r\n\t  }\r\n\t  if (null != data) {\r\n\t    this.onData(data);\r\n\t  }\r\n\t};\r\n\t\r\n\t/**\r\n\t * Check if it has XDomainRequest.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tRequest.prototype.hasXDR = function () {\r\n\t  return 'undefined' !== typeof global.XDomainRequest && !this.xs && this.enablesXDR;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Aborts the request.\r\n\t *\r\n\t * @api public\r\n\t */\r\n\t\r\n\tRequest.prototype.abort = function () {\r\n\t  this.cleanup();\r\n\t};\r\n\t\r\n\t/**\r\n\t * Aborts pending requests when unloading the window. This is needed to prevent\r\n\t * memory leaks (e.g. when using IE) and to ensure that no spurious error is\r\n\t * emitted.\r\n\t */\r\n\t\r\n\tRequest.requestsCount = 0;\r\n\tRequest.requests = {};\r\n\t\r\n\tif (global.document) {\r\n\t  if (global.attachEvent) {\r\n\t    global.attachEvent('onunload', unloadHandler);\r\n\t  } else if (global.addEventListener) {\r\n\t    global.addEventListener('beforeunload', unloadHandler, false);\r\n\t  }\r\n\t}\r\n\t\r\n\tfunction unloadHandler () {\r\n\t  for (var i in Request.requests) {\r\n\t    if (Request.requests.hasOwnProperty(i)) {\r\n\t      Request.requests[i].abort();\r\n\t    }\r\n\t  }\r\n\t}\r\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * Module dependencies.\r\n\t */\r\n\t\r\n\tvar Transport = __webpack_require__(17);\r\n\tvar parseqs = __webpack_require__(30);\r\n\tvar parser = __webpack_require__(18);\r\n\tvar inherit = __webpack_require__(31);\r\n\tvar yeast = __webpack_require__(32);\r\n\tvar debug = __webpack_require__(3)('engine.io-client:polling');\r\n\t\r\n\t/**\r\n\t * Module exports.\r\n\t */\r\n\t\r\n\tmodule.exports = Polling;\r\n\t\r\n\t/**\r\n\t * Is XHR2 supported?\r\n\t */\r\n\t\r\n\tvar hasXHR2 = (function () {\r\n\t  var XMLHttpRequest = __webpack_require__(13);\r\n\t  var xhr = new XMLHttpRequest({ xdomain: false });\r\n\t  return null != xhr.responseType;\r\n\t})();\r\n\t\r\n\t/**\r\n\t * Polling interface.\r\n\t *\r\n\t * @param {Object} opts\r\n\t * @api private\r\n\t */\r\n\t\r\n\tfunction Polling (opts) {\r\n\t  var forceBase64 = (opts && opts.forceBase64);\r\n\t  if (!hasXHR2 || forceBase64) {\r\n\t    this.supportsBinary = false;\r\n\t  }\r\n\t  Transport.call(this, opts);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Inherits from Transport.\r\n\t */\r\n\t\r\n\tinherit(Polling, Transport);\r\n\t\r\n\t/**\r\n\t * Transport name.\r\n\t */\r\n\t\r\n\tPolling.prototype.name = 'polling';\r\n\t\r\n\t/**\r\n\t * Opens the socket (triggers polling). We write a PING message to determine\r\n\t * when the transport is open.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tPolling.prototype.doOpen = function () {\r\n\t  this.poll();\r\n\t};\r\n\t\r\n\t/**\r\n\t * Pauses polling.\r\n\t *\r\n\t * @param {Function} callback upon buffers are flushed and transport is paused\r\n\t * @api private\r\n\t */\r\n\t\r\n\tPolling.prototype.pause = function (onPause) {\r\n\t  var self = this;\r\n\t\r\n\t  this.readyState = 'pausing';\r\n\t\r\n\t  function pause () {\r\n\t\r\n\t    self.readyState = 'paused';\r\n\t    onPause();\r\n\t  }\r\n\t\r\n\t  if (this.polling || !this.writable) {\r\n\t    var total = 0;\r\n\t\r\n\t    if (this.polling) {\r\n\t\r\n\t      total++;\r\n\t      this.once('pollComplete', function () {\r\n\t\r\n\t        --total || pause();\r\n\t      });\r\n\t    }\r\n\t\r\n\t    if (!this.writable) {\r\n\t\r\n\t      total++;\r\n\t      this.once('drain', function () {\r\n\t\r\n\t        --total || pause();\r\n\t      });\r\n\t    }\r\n\t  } else {\r\n\t    pause();\r\n\t  }\r\n\t};\r\n\t\r\n\t/**\r\n\t * Starts polling cycle.\r\n\t *\r\n\t * @api public\r\n\t */\r\n\t\r\n\tPolling.prototype.poll = function () {\r\n\t\r\n\t  this.polling = true;\r\n\t  this.doPoll();\r\n\t  this.emit('poll');\r\n\t};\r\n\t\r\n\t/**\r\n\t * Overloads onData to detect payloads.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tPolling.prototype.onData = function (data) {\r\n\t  var self = this;\r\n\t\r\n\t  var callback = function (packet, index, total) {\r\n\t    // if its the first message we consider the transport open\r\n\t    if ('opening' === self.readyState) {\r\n\t      self.onOpen();\r\n\t    }\r\n\t\r\n\t    // if its a close packet, we close the ongoing requests\r\n\t    if ('close' === packet.type) {\r\n\t      self.onClose();\r\n\t      return false;\r\n\t    }\r\n\t\r\n\t    // otherwise bypass onData and handle the message\r\n\t    self.onPacket(packet);\r\n\t  };\r\n\t\r\n\t  // decode payload\r\n\t  parser.decodePayload(data, this.socket.binaryType, callback);\r\n\t\r\n\t  // if an event did not trigger closing\r\n\t  if ('closed' !== this.readyState) {\r\n\t    // if we got data we're not polling\r\n\t    this.polling = false;\r\n\t    this.emit('pollComplete');\r\n\t\r\n\t    if ('open' === this.readyState) {\r\n\t      this.poll();\r\n\t    } else {\r\n\t\r\n\t    }\r\n\t  }\r\n\t};\r\n\t\r\n\t/**\r\n\t * For polling, send a close packet.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tPolling.prototype.doClose = function () {\r\n\t  var self = this;\r\n\t\r\n\t  function close () {\r\n\t\r\n\t    self.write([{ type: 'close' }]);\r\n\t  }\r\n\t\r\n\t  if ('open' === this.readyState) {\r\n\t\r\n\t    close();\r\n\t  } else {\r\n\t    // in case we're trying to close while\r\n\t    // handshaking is in progress (GH-164)\r\n\t\r\n\t    this.once('open', close);\r\n\t  }\r\n\t};\r\n\t\r\n\t/**\r\n\t * Writes a packets payload.\r\n\t *\r\n\t * @param {Array} data packets\r\n\t * @param {Function} drain callback\r\n\t * @api private\r\n\t */\r\n\t\r\n\tPolling.prototype.write = function (packets) {\r\n\t  var self = this;\r\n\t  this.writable = false;\r\n\t  var callbackfn = function () {\r\n\t    self.writable = true;\r\n\t    self.emit('drain');\r\n\t  };\r\n\t\r\n\t  parser.encodePayload(packets, this.supportsBinary, function (data) {\r\n\t    self.doWrite(data, callbackfn);\r\n\t  });\r\n\t};\r\n\t\r\n\t/**\r\n\t * Generates uri for connection.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tPolling.prototype.uri = function () {\r\n\t  var query = this.query || {};\r\n\t  var schema = this.secure ? 'https' : 'http';\r\n\t  var port = '';\r\n\t\r\n\t  // cache busting is forced\r\n\t  if (false !== this.timestampRequests) {\r\n\t    query[this.timestampParam] = yeast();\r\n\t  }\r\n\t\r\n\t  if (!this.supportsBinary && !query.sid) {\r\n\t    query.b64 = 1;\r\n\t  }\r\n\t\r\n\t  query = parseqs.encode(query);\r\n\t\r\n\t  // avoid port if default for schema\r\n\t  if (this.port && (('https' === schema && Number(this.port) !== 443) ||\r\n\t     ('http' === schema && Number(this.port) !== 80))) {\r\n\t    port = ':' + this.port;\r\n\t  }\r\n\t\r\n\t  // prepend ? to query\r\n\t  if (query.length) {\r\n\t    query = '?' + query;\r\n\t  }\r\n\t\r\n\t  var ipv6 = this.hostname.indexOf(':') !== -1;\r\n\t  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\r\n\t};\r\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * Module dependencies.\r\n\t */\r\n\t\r\n\tvar parser = __webpack_require__(18);\r\n\tvar Emitter = __webpack_require__(5);\r\n\t\r\n\t/**\r\n\t * Module exports.\r\n\t */\r\n\t\r\n\tmodule.exports = Transport;\r\n\t\r\n\t/**\r\n\t * Transport abstract constructor.\r\n\t *\r\n\t * @param {Object} options.\r\n\t * @api private\r\n\t */\r\n\t\r\n\tfunction Transport (opts) {\r\n\t  this.path = opts.path;\r\n\t  this.hostname = opts.hostname;\r\n\t  this.port = opts.port;\r\n\t  this.secure = opts.secure;\r\n\t  this.query = opts.query;\r\n\t  this.timestampParam = opts.timestampParam;\r\n\t  this.timestampRequests = opts.timestampRequests;\r\n\t  this.readyState = '';\r\n\t  this.agent = opts.agent || false;\r\n\t  this.socket = opts.socket;\r\n\t  this.enablesXDR = opts.enablesXDR;\r\n\t\r\n\t  // SSL options for Node.js client\r\n\t  this.pfx = opts.pfx;\r\n\t  this.key = opts.key;\r\n\t  this.passphrase = opts.passphrase;\r\n\t  this.cert = opts.cert;\r\n\t  this.ca = opts.ca;\r\n\t  this.ciphers = opts.ciphers;\r\n\t  this.rejectUnauthorized = opts.rejectUnauthorized;\r\n\t  this.forceNode = opts.forceNode;\r\n\t\r\n\t  // other options for Node.js client\r\n\t  this.extraHeaders = opts.extraHeaders;\r\n\t  this.localAddress = opts.localAddress;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Mix in `Emitter`.\r\n\t */\r\n\t\r\n\tEmitter(Transport.prototype);\r\n\t\r\n\t/**\r\n\t * Emits an error.\r\n\t *\r\n\t * @param {String} str\r\n\t * @return {Transport} for chaining\r\n\t * @api public\r\n\t */\r\n\t\r\n\tTransport.prototype.onError = function (msg, desc) {\r\n\t  var err = {};\r\n\t  err.type = 'TransportError';\r\n\t  err.description = desc;\r\n\t  this.emit('error', err);\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Opens the transport.\r\n\t *\r\n\t * @api public\r\n\t */\r\n\t\r\n\tTransport.prototype.open = function () {\r\n\t  if ('closed' === this.readyState || '' === this.readyState) {\r\n\t    this.readyState = 'opening';\r\n\t    this.doOpen();\r\n\t  }\r\n\t\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Closes the transport.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tTransport.prototype.close = function () {\r\n\t  if ('opening' === this.readyState || 'open' === this.readyState) {\r\n\t    this.doClose();\r\n\t    this.onClose();\r\n\t  }\r\n\t\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Sends multiple packets.\r\n\t *\r\n\t * @param {Array} packets\r\n\t * @api private\r\n\t */\r\n\t\r\n\tTransport.prototype.send = function (packets) {\r\n\t  if ('open' === this.readyState) {\r\n\t    this.write(packets);\r\n\t  } else {\r\n\t    throw new Error('Transport not open');\r\n\t  }\r\n\t};\r\n\t\r\n\t/**\r\n\t * Called upon open\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tTransport.prototype.onOpen = function () {\r\n\t  this.readyState = 'open';\r\n\t  this.writable = true;\r\n\t  this.emit('open');\r\n\t};\r\n\t\r\n\t/**\r\n\t * Called with data.\r\n\t *\r\n\t * @param {String} data\r\n\t * @api private\r\n\t */\r\n\t\r\n\tTransport.prototype.onData = function (data) {\r\n\t  var packet = parser.decodePacket(data, this.socket.binaryType);\r\n\t  this.onPacket(packet);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Called with a decoded packet.\r\n\t */\r\n\t\r\n\tTransport.prototype.onPacket = function (packet) {\r\n\t  this.emit('packet', packet);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Called upon close.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tTransport.prototype.onClose = function () {\r\n\t  this.readyState = 'closed';\r\n\t  this.emit('close');\r\n\t};\r\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar keys = __webpack_require__(19);\n\tvar hasBinary = __webpack_require__(20);\n\tvar sliceBuffer = __webpack_require__(25);\n\tvar after = __webpack_require__(26);\n\tvar utf8 = __webpack_require__(27);\n\t\n\tvar base64encoder;\n\tif (typeof ArrayBuffer !== 'undefined') {\n\t  base64encoder = __webpack_require__(28);\n\t}\n\t\n\t/**\n\t * Check if we are running an android browser. That requires us to use\n\t * ArrayBuffer with polling transports...\n\t *\n\t * http://ghinda.net/jpeg-blob-ajax-android/\n\t */\n\t\n\tvar isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);\n\t\n\t/**\n\t * Check if we are running in PhantomJS.\n\t * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n\t * https://github.com/ariya/phantomjs/issues/11395\n\t * @type boolean\n\t */\n\tvar isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);\n\t\n\t/**\n\t * When true, avoids using Blobs to encode payloads.\n\t * @type boolean\n\t */\n\tvar dontSendBlobs = isAndroid || isPhantomJS;\n\t\n\t/**\n\t * Current protocol version.\n\t */\n\t\n\texports.protocol = 3;\n\t\n\t/**\n\t * Packet types.\n\t */\n\t\n\tvar packets = exports.packets = {\n\t    open:     0    // non-ws\n\t  , close:    1    // non-ws\n\t  , ping:     2\n\t  , pong:     3\n\t  , message:  4\n\t  , upgrade:  5\n\t  , noop:     6\n\t};\n\t\n\tvar packetslist = keys(packets);\n\t\n\t/**\n\t * Premade error packet.\n\t */\n\t\n\tvar err = { type: 'error', data: 'parser error' };\n\t\n\t/**\n\t * Create a blob api even for blob builder when vendor prefixes exist\n\t */\n\t\n\tvar Blob = __webpack_require__(29);\n\t\n\t/**\n\t * Encodes a packet.\n\t *\n\t *     <packet type id> [ <data> ]\n\t *\n\t * Example:\n\t *\n\t *     5hello world\n\t *     3\n\t *     4\n\t *\n\t * Binary is encoded in an identical principle\n\t *\n\t * @api private\n\t */\n\t\n\texports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n\t  if (typeof supportsBinary === 'function') {\n\t    callback = supportsBinary;\n\t    supportsBinary = false;\n\t  }\n\t\n\t  if (typeof utf8encode === 'function') {\n\t    callback = utf8encode;\n\t    utf8encode = null;\n\t  }\n\t\n\t  var data = (packet.data === undefined)\n\t    ? undefined\n\t    : packet.data.buffer || packet.data;\n\t\n\t  if (typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer) {\n\t    return encodeArrayBuffer(packet, supportsBinary, callback);\n\t  } else if (typeof Blob !== 'undefined' && data instanceof Blob) {\n\t    return encodeBlob(packet, supportsBinary, callback);\n\t  }\n\t\n\t  // might be an object with { base64: true, data: dataAsBase64String }\n\t  if (data && data.base64) {\n\t    return encodeBase64Object(packet, callback);\n\t  }\n\t\n\t  // Sending data as a utf-8 string\n\t  var encoded = packets[packet.type];\n\t\n\t  // data fragment is optional\n\t  if (undefined !== packet.data) {\n\t    encoded += utf8encode ? utf8.encode(String(packet.data), { strict: false }) : String(packet.data);\n\t  }\n\t\n\t  return callback('' + encoded);\n\t\n\t};\n\t\n\tfunction encodeBase64Object(packet, callback) {\n\t  // packet data is an object { base64: true, data: dataAsBase64String }\n\t  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n\t  return callback(message);\n\t}\n\t\n\t/**\n\t * Encode packet helpers for binary types\n\t */\n\t\n\tfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n\t  if (!supportsBinary) {\n\t    return exports.encodeBase64Packet(packet, callback);\n\t  }\n\t\n\t  var data = packet.data;\n\t  var contentArray = new Uint8Array(data);\n\t  var resultBuffer = new Uint8Array(1 + data.byteLength);\n\t\n\t  resultBuffer[0] = packets[packet.type];\n\t  for (var i = 0; i < contentArray.length; i++) {\n\t    resultBuffer[i+1] = contentArray[i];\n\t  }\n\t\n\t  return callback(resultBuffer.buffer);\n\t}\n\t\n\tfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n\t  if (!supportsBinary) {\n\t    return exports.encodeBase64Packet(packet, callback);\n\t  }\n\t\n\t  var fr = new FileReader();\n\t  fr.onload = function() {\n\t    exports.encodePacket({ type: packet.type, data: fr.result }, supportsBinary, true, callback);\n\t  };\n\t  return fr.readAsArrayBuffer(packet.data);\n\t}\n\t\n\tfunction encodeBlob(packet, supportsBinary, callback) {\n\t  if (!supportsBinary) {\n\t    return exports.encodeBase64Packet(packet, callback);\n\t  }\n\t\n\t  if (dontSendBlobs) {\n\t    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n\t  }\n\t\n\t  var length = new Uint8Array(1);\n\t  length[0] = packets[packet.type];\n\t  var blob = new Blob([length.buffer, packet.data]);\n\t\n\t  return callback(blob);\n\t}\n\t\n\t/**\n\t * Encodes a packet with binary data in a base64 string\n\t *\n\t * @param {Object} packet, has `type` and `data`\n\t * @return {String} base64 encoded message\n\t */\n\t\n\texports.encodeBase64Packet = function(packet, callback) {\n\t  var message = 'b' + exports.packets[packet.type];\n\t  if (typeof Blob !== 'undefined' && packet.data instanceof Blob) {\n\t    var fr = new FileReader();\n\t    fr.onload = function() {\n\t      var b64 = fr.result.split(',')[1];\n\t      callback(message + b64);\n\t    };\n\t    return fr.readAsDataURL(packet.data);\n\t  }\n\t\n\t  var b64data;\n\t  try {\n\t    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n\t  } catch (e) {\n\t    // iPhone Safari doesn't let you apply with typed arrays\n\t    var typed = new Uint8Array(packet.data);\n\t    var basic = new Array(typed.length);\n\t    for (var i = 0; i < typed.length; i++) {\n\t      basic[i] = typed[i];\n\t    }\n\t    b64data = String.fromCharCode.apply(null, basic);\n\t  }\n\t  message += btoa(b64data);\n\t  return callback(message);\n\t};\n\t\n\t/**\n\t * Decodes a packet. Changes format to Blob if requested.\n\t *\n\t * @return {Object} with `type` and `data` (if any)\n\t * @api private\n\t */\n\t\n\texports.decodePacket = function (data, binaryType, utf8decode) {\n\t  if (data === undefined) {\n\t    return err;\n\t  }\n\t  // String data\n\t  if (typeof data === 'string') {\n\t    if (data.charAt(0) === 'b') {\n\t      return exports.decodeBase64Packet(data.substr(1), binaryType);\n\t    }\n\t\n\t    if (utf8decode) {\n\t      data = tryDecode(data);\n\t      if (data === false) {\n\t        return err;\n\t      }\n\t    }\n\t    var type = data.charAt(0);\n\t\n\t    if (Number(type) != type || !packetslist[type]) {\n\t      return err;\n\t    }\n\t\n\t    if (data.length > 1) {\n\t      return { type: packetslist[type], data: data.substring(1) };\n\t    } else {\n\t      return { type: packetslist[type] };\n\t    }\n\t  }\n\t\n\t  var asArray = new Uint8Array(data);\n\t  var type = asArray[0];\n\t  var rest = sliceBuffer(data, 1);\n\t  if (Blob && binaryType === 'blob') {\n\t    rest = new Blob([rest]);\n\t  }\n\t  return { type: packetslist[type], data: rest };\n\t};\n\t\n\tfunction tryDecode(data) {\n\t  try {\n\t    data = utf8.decode(data, { strict: false });\n\t  } catch (e) {\n\t    return false;\n\t  }\n\t  return data;\n\t}\n\t\n\t/**\n\t * Decodes a packet encoded in a base64 string\n\t *\n\t * @param {String} base64 encoded message\n\t * @return {Object} with `type` and `data` (if any)\n\t */\n\t\n\texports.decodeBase64Packet = function(msg, binaryType) {\n\t  var type = packetslist[msg.charAt(0)];\n\t  if (!base64encoder) {\n\t    return { type: type, data: { base64: true, data: msg.substr(1) } };\n\t  }\n\t\n\t  var data = base64encoder.decode(msg.substr(1));\n\t\n\t  if (binaryType === 'blob' && Blob) {\n\t    data = new Blob([data]);\n\t  }\n\t\n\t  return { type: type, data: data };\n\t};\n\t\n\t/**\n\t * Encodes multiple messages (payload).\n\t *\n\t *     <length>:data\n\t *\n\t * Example:\n\t *\n\t *     11:hello world2:hi\n\t *\n\t * If any contents are binary, they will be encoded as base64 strings. Base64\n\t * encoded strings are marked with a b before the length specifier\n\t *\n\t * @param {Array} packets\n\t * @api private\n\t */\n\t\n\texports.encodePayload = function (packets, supportsBinary, callback) {\n\t  if (typeof supportsBinary === 'function') {\n\t    callback = supportsBinary;\n\t    supportsBinary = null;\n\t  }\n\t\n\t  var isBinary = hasBinary(packets);\n\t\n\t  if (supportsBinary && isBinary) {\n\t    if (Blob && !dontSendBlobs) {\n\t      return exports.encodePayloadAsBlob(packets, callback);\n\t    }\n\t\n\t    return exports.encodePayloadAsArrayBuffer(packets, callback);\n\t  }\n\t\n\t  if (!packets.length) {\n\t    return callback('0:');\n\t  }\n\t\n\t  function setLengthHeader(message) {\n\t    return message.length + ':' + message;\n\t  }\n\t\n\t  function encodeOne(packet, doneCallback) {\n\t    exports.encodePacket(packet, !isBinary ? false : supportsBinary, false, function(message) {\n\t      doneCallback(null, setLengthHeader(message));\n\t    });\n\t  }\n\t\n\t  map(packets, encodeOne, function(err, results) {\n\t    return callback(results.join(''));\n\t  });\n\t};\n\t\n\t/**\n\t * Async array map using after\n\t */\n\t\n\tfunction map(ary, each, done) {\n\t  var result = new Array(ary.length);\n\t  var next = after(ary.length, done);\n\t\n\t  var eachWithIndex = function(i, el, cb) {\n\t    each(el, function(error, msg) {\n\t      result[i] = msg;\n\t      cb(error, result);\n\t    });\n\t  };\n\t\n\t  for (var i = 0; i < ary.length; i++) {\n\t    eachWithIndex(i, ary[i], next);\n\t  }\n\t}\n\t\n\t/*\n\t * Decodes data when a payload is maybe expected. Possible binary contents are\n\t * decoded from their base64 representation\n\t *\n\t * @param {String} data, callback method\n\t * @api public\n\t */\n\t\n\texports.decodePayload = function (data, binaryType, callback) {\n\t  if (typeof data !== 'string') {\n\t    return exports.decodePayloadAsBinary(data, binaryType, callback);\n\t  }\n\t\n\t  if (typeof binaryType === 'function') {\n\t    callback = binaryType;\n\t    binaryType = null;\n\t  }\n\t\n\t  var packet;\n\t  if (data === '') {\n\t    // parser error - ignoring payload\n\t    return callback(err, 0, 1);\n\t  }\n\t\n\t  var length = '', n, msg;\n\t\n\t  for (var i = 0, l = data.length; i < l; i++) {\n\t    var chr = data.charAt(i);\n\t\n\t    if (chr !== ':') {\n\t      length += chr;\n\t      continue;\n\t    }\n\t\n\t    if (length === '' || (length != (n = Number(length)))) {\n\t      // parser error - ignoring payload\n\t      return callback(err, 0, 1);\n\t    }\n\t\n\t    msg = data.substr(i + 1, n);\n\t\n\t    if (length != msg.length) {\n\t      // parser error - ignoring payload\n\t      return callback(err, 0, 1);\n\t    }\n\t\n\t    if (msg.length) {\n\t      packet = exports.decodePacket(msg, binaryType, false);\n\t\n\t      if (err.type === packet.type && err.data === packet.data) {\n\t        // parser error in individual packet - ignoring payload\n\t        return callback(err, 0, 1);\n\t      }\n\t\n\t      var ret = callback(packet, i + n, l);\n\t      if (false === ret) return;\n\t    }\n\t\n\t    // advance cursor\n\t    i += n;\n\t    length = '';\n\t  }\n\t\n\t  if (length !== '') {\n\t    // parser error - ignoring payload\n\t    return callback(err, 0, 1);\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Encodes multiple messages (payload) as binary.\n\t *\n\t * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n\t * 255><data>\n\t *\n\t * Example:\n\t * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n\t *\n\t * @param {Array} packets\n\t * @return {ArrayBuffer} encoded payload\n\t * @api private\n\t */\n\t\n\texports.encodePayloadAsArrayBuffer = function(packets, callback) {\n\t  if (!packets.length) {\n\t    return callback(new ArrayBuffer(0));\n\t  }\n\t\n\t  function encodeOne(packet, doneCallback) {\n\t    exports.encodePacket(packet, true, true, function(data) {\n\t      return doneCallback(null, data);\n\t    });\n\t  }\n\t\n\t  map(packets, encodeOne, function(err, encodedPackets) {\n\t    var totalLength = encodedPackets.reduce(function(acc, p) {\n\t      var len;\n\t      if (typeof p === 'string'){\n\t        len = p.length;\n\t      } else {\n\t        len = p.byteLength;\n\t      }\n\t      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n\t    }, 0);\n\t\n\t    var resultArray = new Uint8Array(totalLength);\n\t\n\t    var bufferIndex = 0;\n\t    encodedPackets.forEach(function(p) {\n\t      var isString = typeof p === 'string';\n\t      var ab = p;\n\t      if (isString) {\n\t        var view = new Uint8Array(p.length);\n\t        for (var i = 0; i < p.length; i++) {\n\t          view[i] = p.charCodeAt(i);\n\t        }\n\t        ab = view.buffer;\n\t      }\n\t\n\t      if (isString) { // not true binary\n\t        resultArray[bufferIndex++] = 0;\n\t      } else { // true binary\n\t        resultArray[bufferIndex++] = 1;\n\t      }\n\t\n\t      var lenStr = ab.byteLength.toString();\n\t      for (var i = 0; i < lenStr.length; i++) {\n\t        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n\t      }\n\t      resultArray[bufferIndex++] = 255;\n\t\n\t      var view = new Uint8Array(ab);\n\t      for (var i = 0; i < view.length; i++) {\n\t        resultArray[bufferIndex++] = view[i];\n\t      }\n\t    });\n\t\n\t    return callback(resultArray.buffer);\n\t  });\n\t};\n\t\n\t/**\n\t * Encode as Blob\n\t */\n\t\n\texports.encodePayloadAsBlob = function(packets, callback) {\n\t  function encodeOne(packet, doneCallback) {\n\t    exports.encodePacket(packet, true, true, function(encoded) {\n\t      var binaryIdentifier = new Uint8Array(1);\n\t      binaryIdentifier[0] = 1;\n\t      if (typeof encoded === 'string') {\n\t        var view = new Uint8Array(encoded.length);\n\t        for (var i = 0; i < encoded.length; i++) {\n\t          view[i] = encoded.charCodeAt(i);\n\t        }\n\t        encoded = view.buffer;\n\t        binaryIdentifier[0] = 0;\n\t      }\n\t\n\t      var len = (encoded instanceof ArrayBuffer)\n\t        ? encoded.byteLength\n\t        : encoded.size;\n\t\n\t      var lenStr = len.toString();\n\t      var lengthAry = new Uint8Array(lenStr.length + 1);\n\t      for (var i = 0; i < lenStr.length; i++) {\n\t        lengthAry[i] = parseInt(lenStr[i]);\n\t      }\n\t      lengthAry[lenStr.length] = 255;\n\t\n\t      if (Blob) {\n\t        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n\t        doneCallback(null, blob);\n\t      }\n\t    });\n\t  }\n\t\n\t  map(packets, encodeOne, function(err, results) {\n\t    return callback(new Blob(results));\n\t  });\n\t};\n\t\n\t/*\n\t * Decodes data when a payload is maybe expected. Strings are decoded by\n\t * interpreting each byte as a key code for entries marked to start with 0. See\n\t * description of encodePayloadAsBinary\n\t *\n\t * @param {ArrayBuffer} data, callback method\n\t * @api public\n\t */\n\t\n\texports.decodePayloadAsBinary = function (data, binaryType, callback) {\n\t  if (typeof binaryType === 'function') {\n\t    callback = binaryType;\n\t    binaryType = null;\n\t  }\n\t\n\t  var bufferTail = data;\n\t  var buffers = [];\n\t\n\t  while (bufferTail.byteLength > 0) {\n\t    var tailArray = new Uint8Array(bufferTail);\n\t    var isString = tailArray[0] === 0;\n\t    var msgLength = '';\n\t\n\t    for (var i = 1; ; i++) {\n\t      if (tailArray[i] === 255) break;\n\t\n\t      // 310 = char length of Number.MAX_VALUE\n\t      if (msgLength.length > 310) {\n\t        return callback(err, 0, 1);\n\t      }\n\t\n\t      msgLength += tailArray[i];\n\t    }\n\t\n\t    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n\t    msgLength = parseInt(msgLength);\n\t\n\t    var msg = sliceBuffer(bufferTail, 0, msgLength);\n\t    if (isString) {\n\t      try {\n\t        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n\t      } catch (e) {\n\t        // iPhone Safari doesn't let you apply to typed arrays\n\t        var typed = new Uint8Array(msg);\n\t        msg = '';\n\t        for (var i = 0; i < typed.length; i++) {\n\t          msg += String.fromCharCode(typed[i]);\n\t        }\n\t      }\n\t    }\n\t\n\t    buffers.push(msg);\n\t    bufferTail = sliceBuffer(bufferTail, msgLength);\n\t  }\n\t\n\t  var total = buffers.length;\n\t  buffers.forEach(function(buffer, i) {\n\t    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n\t  });\n\t};\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports) {\n\n\t\n\t/**\n\t * Gets the keys for an object.\n\t *\n\t * @return {Array} keys\n\t * @api private\n\t */\n\t\n\tmodule.exports = Object.keys || function keys (obj){\n\t  var arr = [];\n\t  var has = Object.prototype.hasOwnProperty;\n\t\n\t  for (var i in obj) {\n\t    if (has.call(obj, i)) {\n\t      arr.push(i);\n\t    }\n\t  }\n\t  return arr;\n\t};\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) {/* global Blob File */\n\t\n\t/*\n\t * Module requirements.\n\t */\n\t\n\tvar isArray = __webpack_require__(7);\n\t\n\tvar toString = Object.prototype.toString;\n\tvar withNativeBlob = typeof Blob === 'function' ||\n\t                        typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';\n\tvar withNativeFile = typeof File === 'function' ||\n\t                        typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = hasBinary;\n\t\n\t/**\n\t * Checks for binary data.\n\t *\n\t * Supports Buffer, ArrayBuffer, Blob and File.\n\t *\n\t * @param {Object} anything\n\t * @api public\n\t */\n\t\n\tfunction hasBinary (obj) {\n\t  if (!obj || typeof obj !== 'object') {\n\t    return false;\n\t  }\n\t\n\t  if (isArray(obj)) {\n\t    for (var i = 0, l = obj.length; i < l; i++) {\n\t      if (hasBinary(obj[i])) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  }\n\t\n\t  if ((typeof Buffer === 'function' && Buffer.isBuffer && Buffer.isBuffer(obj)) ||\n\t    (typeof ArrayBuffer === 'function' && obj instanceof ArrayBuffer) ||\n\t    (withNativeBlob && obj instanceof Blob) ||\n\t    (withNativeFile && obj instanceof File)\n\t  ) {\n\t    return true;\n\t  }\n\t\n\t  // see: https://github.com/Automattic/has-binary/pull/4\n\t  if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {\n\t    return hasBinary(obj.toJSON(), true);\n\t  }\n\t\n\t  for (var key in obj) {\n\t    if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n\t      return true;\n\t    }\n\t  }\n\t\n\t  return false;\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(21).Buffer))\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*!\n\t * The buffer module from node.js, for the browser.\n\t *\n\t * @author   Feross Aboukhadijeh <http://feross.org>\n\t * @license  MIT\n\t */\n\t/* eslint-disable no-proto */\n\t\n\t'use strict'\n\t\n\tvar base64 = __webpack_require__(22)\n\tvar ieee754 = __webpack_require__(23)\n\tvar isArray = __webpack_require__(24)\n\t\n\texports.Buffer = Buffer\n\texports.SlowBuffer = SlowBuffer\n\texports.INSPECT_MAX_BYTES = 50\n\t\n\t/**\n\t * If `Buffer.TYPED_ARRAY_SUPPORT`:\n\t *   === true    Use Uint8Array implementation (fastest)\n\t *   === false   Use Object implementation (most compatible, even IE6)\n\t *\n\t * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n\t * Opera 11.6+, iOS 4.2+.\n\t *\n\t * Due to various browser bugs, sometimes the Object implementation will be used even\n\t * when the browser supports typed arrays.\n\t *\n\t * Note:\n\t *\n\t *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n\t *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n\t *\n\t *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n\t *\n\t *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n\t *     incorrect length in some situations.\n\t\n\t * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n\t * get the Object implementation, which is slower but behaves correctly.\n\t */\n\tBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n\t  ? global.TYPED_ARRAY_SUPPORT\n\t  : typedArraySupport()\n\t\n\t/*\n\t * Export kMaxLength after typed array support is determined.\n\t */\n\texports.kMaxLength = kMaxLength()\n\t\n\tfunction typedArraySupport () {\n\t  try {\n\t    var arr = new Uint8Array(1)\n\t    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n\t    return arr.foo() === 42 && // typed array instances can be augmented\n\t        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n\t        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n\t  } catch (e) {\n\t    return false\n\t  }\n\t}\n\t\n\tfunction kMaxLength () {\n\t  return Buffer.TYPED_ARRAY_SUPPORT\n\t    ? 0x7fffffff\n\t    : 0x3fffffff\n\t}\n\t\n\tfunction createBuffer (that, length) {\n\t  if (kMaxLength() < length) {\n\t    throw new RangeError('Invalid typed array length')\n\t  }\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // Return an augmented `Uint8Array` instance, for best performance\n\t    that = new Uint8Array(length)\n\t    that.__proto__ = Buffer.prototype\n\t  } else {\n\t    // Fallback: Return an object instance of the Buffer class\n\t    if (that === null) {\n\t      that = new Buffer(length)\n\t    }\n\t    that.length = length\n\t  }\n\t\n\t  return that\n\t}\n\t\n\t/**\n\t * The Buffer constructor returns instances of `Uint8Array` that have their\n\t * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n\t * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n\t * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n\t * returns a single octet.\n\t *\n\t * The `Uint8Array` prototype remains unmodified.\n\t */\n\t\n\tfunction Buffer (arg, encodingOrOffset, length) {\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n\t    return new Buffer(arg, encodingOrOffset, length)\n\t  }\n\t\n\t  // Common case.\n\t  if (typeof arg === 'number') {\n\t    if (typeof encodingOrOffset === 'string') {\n\t      throw new Error(\n\t        'If encoding is specified then the first argument must be a string'\n\t      )\n\t    }\n\t    return allocUnsafe(this, arg)\n\t  }\n\t  return from(this, arg, encodingOrOffset, length)\n\t}\n\t\n\tBuffer.poolSize = 8192 // not used by this implementation\n\t\n\t// TODO: Legacy, not needed anymore. Remove in next major version.\n\tBuffer._augment = function (arr) {\n\t  arr.__proto__ = Buffer.prototype\n\t  return arr\n\t}\n\t\n\tfunction from (that, value, encodingOrOffset, length) {\n\t  if (typeof value === 'number') {\n\t    throw new TypeError('\"value\" argument must not be a number')\n\t  }\n\t\n\t  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n\t    return fromArrayBuffer(that, value, encodingOrOffset, length)\n\t  }\n\t\n\t  if (typeof value === 'string') {\n\t    return fromString(that, value, encodingOrOffset)\n\t  }\n\t\n\t  return fromObject(that, value)\n\t}\n\t\n\t/**\n\t * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n\t * if value is a number.\n\t * Buffer.from(str[, encoding])\n\t * Buffer.from(array)\n\t * Buffer.from(buffer)\n\t * Buffer.from(arrayBuffer[, byteOffset[, length]])\n\t **/\n\tBuffer.from = function (value, encodingOrOffset, length) {\n\t  return from(null, value, encodingOrOffset, length)\n\t}\n\t\n\tif (Buffer.TYPED_ARRAY_SUPPORT) {\n\t  Buffer.prototype.__proto__ = Uint8Array.prototype\n\t  Buffer.__proto__ = Uint8Array\n\t  if (typeof Symbol !== 'undefined' && Symbol.species &&\n\t      Buffer[Symbol.species] === Buffer) {\n\t    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n\t    Object.defineProperty(Buffer, Symbol.species, {\n\t      value: null,\n\t      configurable: true\n\t    })\n\t  }\n\t}\n\t\n\tfunction assertSize (size) {\n\t  if (typeof size !== 'number') {\n\t    throw new TypeError('\"size\" argument must be a number')\n\t  } else if (size < 0) {\n\t    throw new RangeError('\"size\" argument must not be negative')\n\t  }\n\t}\n\t\n\tfunction alloc (that, size, fill, encoding) {\n\t  assertSize(size)\n\t  if (size <= 0) {\n\t    return createBuffer(that, size)\n\t  }\n\t  if (fill !== undefined) {\n\t    // Only pay attention to encoding if it's a string. This\n\t    // prevents accidentally sending in a number that would\n\t    // be interpretted as a start offset.\n\t    return typeof encoding === 'string'\n\t      ? createBuffer(that, size).fill(fill, encoding)\n\t      : createBuffer(that, size).fill(fill)\n\t  }\n\t  return createBuffer(that, size)\n\t}\n\t\n\t/**\n\t * Creates a new filled Buffer instance.\n\t * alloc(size[, fill[, encoding]])\n\t **/\n\tBuffer.alloc = function (size, fill, encoding) {\n\t  return alloc(null, size, fill, encoding)\n\t}\n\t\n\tfunction allocUnsafe (that, size) {\n\t  assertSize(size)\n\t  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n\t    for (var i = 0; i < size; ++i) {\n\t      that[i] = 0\n\t    }\n\t  }\n\t  return that\n\t}\n\t\n\t/**\n\t * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n\t * */\n\tBuffer.allocUnsafe = function (size) {\n\t  return allocUnsafe(null, size)\n\t}\n\t/**\n\t * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n\t */\n\tBuffer.allocUnsafeSlow = function (size) {\n\t  return allocUnsafe(null, size)\n\t}\n\t\n\tfunction fromString (that, string, encoding) {\n\t  if (typeof encoding !== 'string' || encoding === '') {\n\t    encoding = 'utf8'\n\t  }\n\t\n\t  if (!Buffer.isEncoding(encoding)) {\n\t    throw new TypeError('\"encoding\" must be a valid string encoding')\n\t  }\n\t\n\t  var length = byteLength(string, encoding) | 0\n\t  that = createBuffer(that, length)\n\t\n\t  var actual = that.write(string, encoding)\n\t\n\t  if (actual !== length) {\n\t    // Writing a hex string, for example, that contains invalid characters will\n\t    // cause everything after the first invalid character to be ignored. (e.g.\n\t    // 'abxxcd' will be treated as 'ab')\n\t    that = that.slice(0, actual)\n\t  }\n\t\n\t  return that\n\t}\n\t\n\tfunction fromArrayLike (that, array) {\n\t  var length = array.length < 0 ? 0 : checked(array.length) | 0\n\t  that = createBuffer(that, length)\n\t  for (var i = 0; i < length; i += 1) {\n\t    that[i] = array[i] & 255\n\t  }\n\t  return that\n\t}\n\t\n\tfunction fromArrayBuffer (that, array, byteOffset, length) {\n\t  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\t\n\t  if (byteOffset < 0 || array.byteLength < byteOffset) {\n\t    throw new RangeError('\\'offset\\' is out of bounds')\n\t  }\n\t\n\t  if (array.byteLength < byteOffset + (length || 0)) {\n\t    throw new RangeError('\\'length\\' is out of bounds')\n\t  }\n\t\n\t  if (byteOffset === undefined && length === undefined) {\n\t    array = new Uint8Array(array)\n\t  } else if (length === undefined) {\n\t    array = new Uint8Array(array, byteOffset)\n\t  } else {\n\t    array = new Uint8Array(array, byteOffset, length)\n\t  }\n\t\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // Return an augmented `Uint8Array` instance, for best performance\n\t    that = array\n\t    that.__proto__ = Buffer.prototype\n\t  } else {\n\t    // Fallback: Return an object instance of the Buffer class\n\t    that = fromArrayLike(that, array)\n\t  }\n\t  return that\n\t}\n\t\n\tfunction fromObject (that, obj) {\n\t  if (Buffer.isBuffer(obj)) {\n\t    var len = checked(obj.length) | 0\n\t    that = createBuffer(that, len)\n\t\n\t    if (that.length === 0) {\n\t      return that\n\t    }\n\t\n\t    obj.copy(that, 0, 0, len)\n\t    return that\n\t  }\n\t\n\t  if (obj) {\n\t    if ((typeof ArrayBuffer !== 'undefined' &&\n\t        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n\t      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n\t        return createBuffer(that, 0)\n\t      }\n\t      return fromArrayLike(that, obj)\n\t    }\n\t\n\t    if (obj.type === 'Buffer' && isArray(obj.data)) {\n\t      return fromArrayLike(that, obj.data)\n\t    }\n\t  }\n\t\n\t  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n\t}\n\t\n\tfunction checked (length) {\n\t  // Note: cannot use `length < kMaxLength()` here because that fails when\n\t  // length is NaN (which is otherwise coerced to zero.)\n\t  if (length >= kMaxLength()) {\n\t    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n\t                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n\t  }\n\t  return length | 0\n\t}\n\t\n\tfunction SlowBuffer (length) {\n\t  if (+length != length) { // eslint-disable-line eqeqeq\n\t    length = 0\n\t  }\n\t  return Buffer.alloc(+length)\n\t}\n\t\n\tBuffer.isBuffer = function isBuffer (b) {\n\t  return !!(b != null && b._isBuffer)\n\t}\n\t\n\tBuffer.compare = function compare (a, b) {\n\t  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n\t    throw new TypeError('Arguments must be Buffers')\n\t  }\n\t\n\t  if (a === b) return 0\n\t\n\t  var x = a.length\n\t  var y = b.length\n\t\n\t  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n\t    if (a[i] !== b[i]) {\n\t      x = a[i]\n\t      y = b[i]\n\t      break\n\t    }\n\t  }\n\t\n\t  if (x < y) return -1\n\t  if (y < x) return 1\n\t  return 0\n\t}\n\t\n\tBuffer.isEncoding = function isEncoding (encoding) {\n\t  switch (String(encoding).toLowerCase()) {\n\t    case 'hex':\n\t    case 'utf8':\n\t    case 'utf-8':\n\t    case 'ascii':\n\t    case 'latin1':\n\t    case 'binary':\n\t    case 'base64':\n\t    case 'ucs2':\n\t    case 'ucs-2':\n\t    case 'utf16le':\n\t    case 'utf-16le':\n\t      return true\n\t    default:\n\t      return false\n\t  }\n\t}\n\t\n\tBuffer.concat = function concat (list, length) {\n\t  if (!isArray(list)) {\n\t    throw new TypeError('\"list\" argument must be an Array of Buffers')\n\t  }\n\t\n\t  if (list.length === 0) {\n\t    return Buffer.alloc(0)\n\t  }\n\t\n\t  var i\n\t  if (length === undefined) {\n\t    length = 0\n\t    for (i = 0; i < list.length; ++i) {\n\t      length += list[i].length\n\t    }\n\t  }\n\t\n\t  var buffer = Buffer.allocUnsafe(length)\n\t  var pos = 0\n\t  for (i = 0; i < list.length; ++i) {\n\t    var buf = list[i]\n\t    if (!Buffer.isBuffer(buf)) {\n\t      throw new TypeError('\"list\" argument must be an Array of Buffers')\n\t    }\n\t    buf.copy(buffer, pos)\n\t    pos += buf.length\n\t  }\n\t  return buffer\n\t}\n\t\n\tfunction byteLength (string, encoding) {\n\t  if (Buffer.isBuffer(string)) {\n\t    return string.length\n\t  }\n\t  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n\t      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n\t    return string.byteLength\n\t  }\n\t  if (typeof string !== 'string') {\n\t    string = '' + string\n\t  }\n\t\n\t  var len = string.length\n\t  if (len === 0) return 0\n\t\n\t  // Use a for loop to avoid recursion\n\t  var loweredCase = false\n\t  for (;;) {\n\t    switch (encoding) {\n\t      case 'ascii':\n\t      case 'latin1':\n\t      case 'binary':\n\t        return len\n\t      case 'utf8':\n\t      case 'utf-8':\n\t      case undefined:\n\t        return utf8ToBytes(string).length\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return len * 2\n\t      case 'hex':\n\t        return len >>> 1\n\t      case 'base64':\n\t        return base64ToBytes(string).length\n\t      default:\n\t        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n\t        encoding = ('' + encoding).toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\tBuffer.byteLength = byteLength\n\t\n\tfunction slowToString (encoding, start, end) {\n\t  var loweredCase = false\n\t\n\t  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n\t  // property of a typed array.\n\t\n\t  // This behaves neither like String nor Uint8Array in that we set start/end\n\t  // to their upper/lower bounds if the value passed is out of range.\n\t  // undefined is handled specially as per ECMA-262 6th Edition,\n\t  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\t  if (start === undefined || start < 0) {\n\t    start = 0\n\t  }\n\t  // Return early if start > this.length. Done here to prevent potential uint32\n\t  // coercion fail below.\n\t  if (start > this.length) {\n\t    return ''\n\t  }\n\t\n\t  if (end === undefined || end > this.length) {\n\t    end = this.length\n\t  }\n\t\n\t  if (end <= 0) {\n\t    return ''\n\t  }\n\t\n\t  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n\t  end >>>= 0\n\t  start >>>= 0\n\t\n\t  if (end <= start) {\n\t    return ''\n\t  }\n\t\n\t  if (!encoding) encoding = 'utf8'\n\t\n\t  while (true) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexSlice(this, start, end)\n\t\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Slice(this, start, end)\n\t\n\t      case 'ascii':\n\t        return asciiSlice(this, start, end)\n\t\n\t      case 'latin1':\n\t      case 'binary':\n\t        return latin1Slice(this, start, end)\n\t\n\t      case 'base64':\n\t        return base64Slice(this, start, end)\n\t\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return utf16leSlice(this, start, end)\n\t\n\t      default:\n\t        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n\t        encoding = (encoding + '').toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\t\n\t// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n\t// Buffer instances.\n\tBuffer.prototype._isBuffer = true\n\t\n\tfunction swap (b, n, m) {\n\t  var i = b[n]\n\t  b[n] = b[m]\n\t  b[m] = i\n\t}\n\t\n\tBuffer.prototype.swap16 = function swap16 () {\n\t  var len = this.length\n\t  if (len % 2 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 16-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 2) {\n\t    swap(this, i, i + 1)\n\t  }\n\t  return this\n\t}\n\t\n\tBuffer.prototype.swap32 = function swap32 () {\n\t  var len = this.length\n\t  if (len % 4 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 32-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 4) {\n\t    swap(this, i, i + 3)\n\t    swap(this, i + 1, i + 2)\n\t  }\n\t  return this\n\t}\n\t\n\tBuffer.prototype.swap64 = function swap64 () {\n\t  var len = this.length\n\t  if (len % 8 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 64-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 8) {\n\t    swap(this, i, i + 7)\n\t    swap(this, i + 1, i + 6)\n\t    swap(this, i + 2, i + 5)\n\t    swap(this, i + 3, i + 4)\n\t  }\n\t  return this\n\t}\n\t\n\tBuffer.prototype.toString = function toString () {\n\t  var length = this.length | 0\n\t  if (length === 0) return ''\n\t  if (arguments.length === 0) return utf8Slice(this, 0, length)\n\t  return slowToString.apply(this, arguments)\n\t}\n\t\n\tBuffer.prototype.equals = function equals (b) {\n\t  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n\t  if (this === b) return true\n\t  return Buffer.compare(this, b) === 0\n\t}\n\t\n\tBuffer.prototype.inspect = function inspect () {\n\t  var str = ''\n\t  var max = exports.INSPECT_MAX_BYTES\n\t  if (this.length > 0) {\n\t    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n\t    if (this.length > max) str += ' ... '\n\t  }\n\t  return '<Buffer ' + str + '>'\n\t}\n\t\n\tBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n\t  if (!Buffer.isBuffer(target)) {\n\t    throw new TypeError('Argument must be a Buffer')\n\t  }\n\t\n\t  if (start === undefined) {\n\t    start = 0\n\t  }\n\t  if (end === undefined) {\n\t    end = target ? target.length : 0\n\t  }\n\t  if (thisStart === undefined) {\n\t    thisStart = 0\n\t  }\n\t  if (thisEnd === undefined) {\n\t    thisEnd = this.length\n\t  }\n\t\n\t  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n\t    throw new RangeError('out of range index')\n\t  }\n\t\n\t  if (thisStart >= thisEnd && start >= end) {\n\t    return 0\n\t  }\n\t  if (thisStart >= thisEnd) {\n\t    return -1\n\t  }\n\t  if (start >= end) {\n\t    return 1\n\t  }\n\t\n\t  start >>>= 0\n\t  end >>>= 0\n\t  thisStart >>>= 0\n\t  thisEnd >>>= 0\n\t\n\t  if (this === target) return 0\n\t\n\t  var x = thisEnd - thisStart\n\t  var y = end - start\n\t  var len = Math.min(x, y)\n\t\n\t  var thisCopy = this.slice(thisStart, thisEnd)\n\t  var targetCopy = target.slice(start, end)\n\t\n\t  for (var i = 0; i < len; ++i) {\n\t    if (thisCopy[i] !== targetCopy[i]) {\n\t      x = thisCopy[i]\n\t      y = targetCopy[i]\n\t      break\n\t    }\n\t  }\n\t\n\t  if (x < y) return -1\n\t  if (y < x) return 1\n\t  return 0\n\t}\n\t\n\t// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n\t// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n\t//\n\t// Arguments:\n\t// - buffer - a Buffer to search\n\t// - val - a string, Buffer, or number\n\t// - byteOffset - an index into `buffer`; will be clamped to an int32\n\t// - encoding - an optional encoding, relevant is val is a string\n\t// - dir - true for indexOf, false for lastIndexOf\n\tfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n\t  // Empty buffer means no match\n\t  if (buffer.length === 0) return -1\n\t\n\t  // Normalize byteOffset\n\t  if (typeof byteOffset === 'string') {\n\t    encoding = byteOffset\n\t    byteOffset = 0\n\t  } else if (byteOffset > 0x7fffffff) {\n\t    byteOffset = 0x7fffffff\n\t  } else if (byteOffset < -0x80000000) {\n\t    byteOffset = -0x80000000\n\t  }\n\t  byteOffset = +byteOffset  // Coerce to Number.\n\t  if (isNaN(byteOffset)) {\n\t    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n\t    byteOffset = dir ? 0 : (buffer.length - 1)\n\t  }\n\t\n\t  // Normalize byteOffset: negative offsets start from the end of the buffer\n\t  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n\t  if (byteOffset >= buffer.length) {\n\t    if (dir) return -1\n\t    else byteOffset = buffer.length - 1\n\t  } else if (byteOffset < 0) {\n\t    if (dir) byteOffset = 0\n\t    else return -1\n\t  }\n\t\n\t  // Normalize val\n\t  if (typeof val === 'string') {\n\t    val = Buffer.from(val, encoding)\n\t  }\n\t\n\t  // Finally, search either indexOf (if dir is true) or lastIndexOf\n\t  if (Buffer.isBuffer(val)) {\n\t    // Special case: looking for empty string/buffer always fails\n\t    if (val.length === 0) {\n\t      return -1\n\t    }\n\t    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n\t  } else if (typeof val === 'number') {\n\t    val = val & 0xFF // Search for a byte value [0-255]\n\t    if (Buffer.TYPED_ARRAY_SUPPORT &&\n\t        typeof Uint8Array.prototype.indexOf === 'function') {\n\t      if (dir) {\n\t        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n\t      } else {\n\t        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n\t      }\n\t    }\n\t    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n\t  }\n\t\n\t  throw new TypeError('val must be string, number or Buffer')\n\t}\n\t\n\tfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n\t  var indexSize = 1\n\t  var arrLength = arr.length\n\t  var valLength = val.length\n\t\n\t  if (encoding !== undefined) {\n\t    encoding = String(encoding).toLowerCase()\n\t    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n\t        encoding === 'utf16le' || encoding === 'utf-16le') {\n\t      if (arr.length < 2 || val.length < 2) {\n\t        return -1\n\t      }\n\t      indexSize = 2\n\t      arrLength /= 2\n\t      valLength /= 2\n\t      byteOffset /= 2\n\t    }\n\t  }\n\t\n\t  function read (buf, i) {\n\t    if (indexSize === 1) {\n\t      return buf[i]\n\t    } else {\n\t      return buf.readUInt16BE(i * indexSize)\n\t    }\n\t  }\n\t\n\t  var i\n\t  if (dir) {\n\t    var foundIndex = -1\n\t    for (i = byteOffset; i < arrLength; i++) {\n\t      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n\t        if (foundIndex === -1) foundIndex = i\n\t        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n\t      } else {\n\t        if (foundIndex !== -1) i -= i - foundIndex\n\t        foundIndex = -1\n\t      }\n\t    }\n\t  } else {\n\t    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n\t    for (i = byteOffset; i >= 0; i--) {\n\t      var found = true\n\t      for (var j = 0; j < valLength; j++) {\n\t        if (read(arr, i + j) !== read(val, j)) {\n\t          found = false\n\t          break\n\t        }\n\t      }\n\t      if (found) return i\n\t    }\n\t  }\n\t\n\t  return -1\n\t}\n\t\n\tBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n\t  return this.indexOf(val, byteOffset, encoding) !== -1\n\t}\n\t\n\tBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n\t  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n\t}\n\t\n\tBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n\t  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n\t}\n\t\n\tfunction hexWrite (buf, string, offset, length) {\n\t  offset = Number(offset) || 0\n\t  var remaining = buf.length - offset\n\t  if (!length) {\n\t    length = remaining\n\t  } else {\n\t    length = Number(length)\n\t    if (length > remaining) {\n\t      length = remaining\n\t    }\n\t  }\n\t\n\t  // must be an even number of digits\n\t  var strLen = string.length\n\t  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\t\n\t  if (length > strLen / 2) {\n\t    length = strLen / 2\n\t  }\n\t  for (var i = 0; i < length; ++i) {\n\t    var parsed = parseInt(string.substr(i * 2, 2), 16)\n\t    if (isNaN(parsed)) return i\n\t    buf[offset + i] = parsed\n\t  }\n\t  return i\n\t}\n\t\n\tfunction utf8Write (buf, string, offset, length) {\n\t  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n\t}\n\t\n\tfunction asciiWrite (buf, string, offset, length) {\n\t  return blitBuffer(asciiToBytes(string), buf, offset, length)\n\t}\n\t\n\tfunction latin1Write (buf, string, offset, length) {\n\t  return asciiWrite(buf, string, offset, length)\n\t}\n\t\n\tfunction base64Write (buf, string, offset, length) {\n\t  return blitBuffer(base64ToBytes(string), buf, offset, length)\n\t}\n\t\n\tfunction ucs2Write (buf, string, offset, length) {\n\t  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n\t}\n\t\n\tBuffer.prototype.write = function write (string, offset, length, encoding) {\n\t  // Buffer#write(string)\n\t  if (offset === undefined) {\n\t    encoding = 'utf8'\n\t    length = this.length\n\t    offset = 0\n\t  // Buffer#write(string, encoding)\n\t  } else if (length === undefined && typeof offset === 'string') {\n\t    encoding = offset\n\t    length = this.length\n\t    offset = 0\n\t  // Buffer#write(string, offset[, length][, encoding])\n\t  } else if (isFinite(offset)) {\n\t    offset = offset | 0\n\t    if (isFinite(length)) {\n\t      length = length | 0\n\t      if (encoding === undefined) encoding = 'utf8'\n\t    } else {\n\t      encoding = length\n\t      length = undefined\n\t    }\n\t  // legacy write(string, encoding, offset, length) - remove in v0.13\n\t  } else {\n\t    throw new Error(\n\t      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n\t    )\n\t  }\n\t\n\t  var remaining = this.length - offset\n\t  if (length === undefined || length > remaining) length = remaining\n\t\n\t  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n\t    throw new RangeError('Attempt to write outside buffer bounds')\n\t  }\n\t\n\t  if (!encoding) encoding = 'utf8'\n\t\n\t  var loweredCase = false\n\t  for (;;) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexWrite(this, string, offset, length)\n\t\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Write(this, string, offset, length)\n\t\n\t      case 'ascii':\n\t        return asciiWrite(this, string, offset, length)\n\t\n\t      case 'latin1':\n\t      case 'binary':\n\t        return latin1Write(this, string, offset, length)\n\t\n\t      case 'base64':\n\t        // Warning: maxLength not taken into account in base64Write\n\t        return base64Write(this, string, offset, length)\n\t\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return ucs2Write(this, string, offset, length)\n\t\n\t      default:\n\t        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n\t        encoding = ('' + encoding).toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\t\n\tBuffer.prototype.toJSON = function toJSON () {\n\t  return {\n\t    type: 'Buffer',\n\t    data: Array.prototype.slice.call(this._arr || this, 0)\n\t  }\n\t}\n\t\n\tfunction base64Slice (buf, start, end) {\n\t  if (start === 0 && end === buf.length) {\n\t    return base64.fromByteArray(buf)\n\t  } else {\n\t    return base64.fromByteArray(buf.slice(start, end))\n\t  }\n\t}\n\t\n\tfunction utf8Slice (buf, start, end) {\n\t  end = Math.min(buf.length, end)\n\t  var res = []\n\t\n\t  var i = start\n\t  while (i < end) {\n\t    var firstByte = buf[i]\n\t    var codePoint = null\n\t    var bytesPerSequence = (firstByte > 0xEF) ? 4\n\t      : (firstByte > 0xDF) ? 3\n\t      : (firstByte > 0xBF) ? 2\n\t      : 1\n\t\n\t    if (i + bytesPerSequence <= end) {\n\t      var secondByte, thirdByte, fourthByte, tempCodePoint\n\t\n\t      switch (bytesPerSequence) {\n\t        case 1:\n\t          if (firstByte < 0x80) {\n\t            codePoint = firstByte\n\t          }\n\t          break\n\t        case 2:\n\t          secondByte = buf[i + 1]\n\t          if ((secondByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n\t            if (tempCodePoint > 0x7F) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t          break\n\t        case 3:\n\t          secondByte = buf[i + 1]\n\t          thirdByte = buf[i + 2]\n\t          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n\t            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t          break\n\t        case 4:\n\t          secondByte = buf[i + 1]\n\t          thirdByte = buf[i + 2]\n\t          fourthByte = buf[i + 3]\n\t          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n\t            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t      }\n\t    }\n\t\n\t    if (codePoint === null) {\n\t      // we did not generate a valid codePoint so insert a\n\t      // replacement char (U+FFFD) and advance only 1 byte\n\t      codePoint = 0xFFFD\n\t      bytesPerSequence = 1\n\t    } else if (codePoint > 0xFFFF) {\n\t      // encode to utf16 (surrogate pair dance)\n\t      codePoint -= 0x10000\n\t      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n\t      codePoint = 0xDC00 | codePoint & 0x3FF\n\t    }\n\t\n\t    res.push(codePoint)\n\t    i += bytesPerSequence\n\t  }\n\t\n\t  return decodeCodePointsArray(res)\n\t}\n\t\n\t// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n\t// the lowest limit is Chrome, with 0x10000 args.\n\t// We go 1 magnitude less, for safety\n\tvar MAX_ARGUMENTS_LENGTH = 0x1000\n\t\n\tfunction decodeCodePointsArray (codePoints) {\n\t  var len = codePoints.length\n\t  if (len <= MAX_ARGUMENTS_LENGTH) {\n\t    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n\t  }\n\t\n\t  // Decode in chunks to avoid \"call stack size exceeded\".\n\t  var res = ''\n\t  var i = 0\n\t  while (i < len) {\n\t    res += String.fromCharCode.apply(\n\t      String,\n\t      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n\t    )\n\t  }\n\t  return res\n\t}\n\t\n\tfunction asciiSlice (buf, start, end) {\n\t  var ret = ''\n\t  end = Math.min(buf.length, end)\n\t\n\t  for (var i = start; i < end; ++i) {\n\t    ret += String.fromCharCode(buf[i] & 0x7F)\n\t  }\n\t  return ret\n\t}\n\t\n\tfunction latin1Slice (buf, start, end) {\n\t  var ret = ''\n\t  end = Math.min(buf.length, end)\n\t\n\t  for (var i = start; i < end; ++i) {\n\t    ret += String.fromCharCode(buf[i])\n\t  }\n\t  return ret\n\t}\n\t\n\tfunction hexSlice (buf, start, end) {\n\t  var len = buf.length\n\t\n\t  if (!start || start < 0) start = 0\n\t  if (!end || end < 0 || end > len) end = len\n\t\n\t  var out = ''\n\t  for (var i = start; i < end; ++i) {\n\t    out += toHex(buf[i])\n\t  }\n\t  return out\n\t}\n\t\n\tfunction utf16leSlice (buf, start, end) {\n\t  var bytes = buf.slice(start, end)\n\t  var res = ''\n\t  for (var i = 0; i < bytes.length; i += 2) {\n\t    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n\t  }\n\t  return res\n\t}\n\t\n\tBuffer.prototype.slice = function slice (start, end) {\n\t  var len = this.length\n\t  start = ~~start\n\t  end = end === undefined ? len : ~~end\n\t\n\t  if (start < 0) {\n\t    start += len\n\t    if (start < 0) start = 0\n\t  } else if (start > len) {\n\t    start = len\n\t  }\n\t\n\t  if (end < 0) {\n\t    end += len\n\t    if (end < 0) end = 0\n\t  } else if (end > len) {\n\t    end = len\n\t  }\n\t\n\t  if (end < start) end = start\n\t\n\t  var newBuf\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    newBuf = this.subarray(start, end)\n\t    newBuf.__proto__ = Buffer.prototype\n\t  } else {\n\t    var sliceLen = end - start\n\t    newBuf = new Buffer(sliceLen, undefined)\n\t    for (var i = 0; i < sliceLen; ++i) {\n\t      newBuf[i] = this[i + start]\n\t    }\n\t  }\n\t\n\t  return newBuf\n\t}\n\t\n\t/*\n\t * Need to make sure that buffer isn't trying to write out of bounds.\n\t */\n\tfunction checkOffset (offset, ext, length) {\n\t  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n\t  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n\t}\n\t\n\tBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var val = this[offset]\n\t  var mul = 1\n\t  var i = 0\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    val += this[offset + i] * mul\n\t  }\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    checkOffset(offset, byteLength, this.length)\n\t  }\n\t\n\t  var val = this[offset + --byteLength]\n\t  var mul = 1\n\t  while (byteLength > 0 && (mul *= 0x100)) {\n\t    val += this[offset + --byteLength] * mul\n\t  }\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 1, this.length)\n\t  return this[offset]\n\t}\n\t\n\tBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  return this[offset] | (this[offset + 1] << 8)\n\t}\n\t\n\tBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  return (this[offset] << 8) | this[offset + 1]\n\t}\n\t\n\tBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return ((this[offset]) |\n\t      (this[offset + 1] << 8) |\n\t      (this[offset + 2] << 16)) +\n\t      (this[offset + 3] * 0x1000000)\n\t}\n\t\n\tBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset] * 0x1000000) +\n\t    ((this[offset + 1] << 16) |\n\t    (this[offset + 2] << 8) |\n\t    this[offset + 3])\n\t}\n\t\n\tBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var val = this[offset]\n\t  var mul = 1\n\t  var i = 0\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    val += this[offset + i] * mul\n\t  }\n\t  mul *= 0x80\n\t\n\t  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var i = byteLength\n\t  var mul = 1\n\t  var val = this[offset + --i]\n\t  while (i > 0 && (mul *= 0x100)) {\n\t    val += this[offset + --i] * mul\n\t  }\n\t  mul *= 0x80\n\t\n\t  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 1, this.length)\n\t  if (!(this[offset] & 0x80)) return (this[offset])\n\t  return ((0xff - this[offset] + 1) * -1)\n\t}\n\t\n\tBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  var val = this[offset] | (this[offset + 1] << 8)\n\t  return (val & 0x8000) ? val | 0xFFFF0000 : val\n\t}\n\t\n\tBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  var val = this[offset + 1] | (this[offset] << 8)\n\t  return (val & 0x8000) ? val | 0xFFFF0000 : val\n\t}\n\t\n\tBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset]) |\n\t    (this[offset + 1] << 8) |\n\t    (this[offset + 2] << 16) |\n\t    (this[offset + 3] << 24)\n\t}\n\t\n\tBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset] << 24) |\n\t    (this[offset + 1] << 16) |\n\t    (this[offset + 2] << 8) |\n\t    (this[offset + 3])\n\t}\n\t\n\tBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t  return ieee754.read(this, offset, true, 23, 4)\n\t}\n\t\n\tBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t  return ieee754.read(this, offset, false, 23, 4)\n\t}\n\t\n\tBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 8, this.length)\n\t  return ieee754.read(this, offset, true, 52, 8)\n\t}\n\t\n\tBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 8, this.length)\n\t  return ieee754.read(this, offset, false, 52, 8)\n\t}\n\t\n\tfunction checkInt (buf, value, offset, ext, max, min) {\n\t  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n\t  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n\t  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n\t}\n\t\n\tBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n\t    checkInt(this, value, offset, byteLength, maxBytes, 0)\n\t  }\n\t\n\t  var mul = 1\n\t  var i = 0\n\t  this[offset] = value & 0xFF\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    this[offset + i] = (value / mul) & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n\t    checkInt(this, value, offset, byteLength, maxBytes, 0)\n\t  }\n\t\n\t  var i = byteLength - 1\n\t  var mul = 1\n\t  this[offset + i] = value & 0xFF\n\t  while (--i >= 0 && (mul *= 0x100)) {\n\t    this[offset + i] = (value / mul) & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n\t  this[offset] = (value & 0xff)\n\t  return offset + 1\n\t}\n\t\n\tfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n\t  if (value < 0) value = 0xffff + value + 1\n\t  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n\t    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n\t      (littleEndian ? i : 1 - i) * 8\n\t  }\n\t}\n\t\n\tBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, true)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 8)\n\t    this[offset + 1] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, false)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n\t  if (value < 0) value = 0xffffffff + value + 1\n\t  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n\t    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n\t  }\n\t}\n\t\n\tBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset + 3] = (value >>> 24)\n\t    this[offset + 2] = (value >>> 16)\n\t    this[offset + 1] = (value >>> 8)\n\t    this[offset] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, true)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 24)\n\t    this[offset + 1] = (value >>> 16)\n\t    this[offset + 2] = (value >>> 8)\n\t    this[offset + 3] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, false)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) {\n\t    var limit = Math.pow(2, 8 * byteLength - 1)\n\t\n\t    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n\t  }\n\t\n\t  var i = 0\n\t  var mul = 1\n\t  var sub = 0\n\t  this[offset] = value & 0xFF\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n\t      sub = 1\n\t    }\n\t    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) {\n\t    var limit = Math.pow(2, 8 * byteLength - 1)\n\t\n\t    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n\t  }\n\t\n\t  var i = byteLength - 1\n\t  var mul = 1\n\t  var sub = 0\n\t  this[offset + i] = value & 0xFF\n\t  while (--i >= 0 && (mul *= 0x100)) {\n\t    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n\t      sub = 1\n\t    }\n\t    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n\t  if (value < 0) value = 0xff + value + 1\n\t  this[offset] = (value & 0xff)\n\t  return offset + 1\n\t}\n\t\n\tBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, true)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 8)\n\t    this[offset + 1] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, false)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t    this[offset + 2] = (value >>> 16)\n\t    this[offset + 3] = (value >>> 24)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, true)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n\t  if (value < 0) value = 0xffffffff + value + 1\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 24)\n\t    this[offset + 1] = (value >>> 16)\n\t    this[offset + 2] = (value >>> 8)\n\t    this[offset + 3] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, false)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n\t  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n\t  if (offset < 0) throw new RangeError('Index out of range')\n\t}\n\t\n\tfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n\t  if (!noAssert) {\n\t    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n\t  }\n\t  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, true, noAssert)\n\t}\n\t\n\tBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, false, noAssert)\n\t}\n\t\n\tfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n\t  if (!noAssert) {\n\t    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n\t  }\n\t  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n\t  return offset + 8\n\t}\n\t\n\tBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, true, noAssert)\n\t}\n\t\n\tBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, false, noAssert)\n\t}\n\t\n\t// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\tBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n\t  if (!start) start = 0\n\t  if (!end && end !== 0) end = this.length\n\t  if (targetStart >= target.length) targetStart = target.length\n\t  if (!targetStart) targetStart = 0\n\t  if (end > 0 && end < start) end = start\n\t\n\t  // Copy 0 bytes; we're done\n\t  if (end === start) return 0\n\t  if (target.length === 0 || this.length === 0) return 0\n\t\n\t  // Fatal error conditions\n\t  if (targetStart < 0) {\n\t    throw new RangeError('targetStart out of bounds')\n\t  }\n\t  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n\t  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\t\n\t  // Are we oob?\n\t  if (end > this.length) end = this.length\n\t  if (target.length - targetStart < end - start) {\n\t    end = target.length - targetStart + start\n\t  }\n\t\n\t  var len = end - start\n\t  var i\n\t\n\t  if (this === target && start < targetStart && targetStart < end) {\n\t    // descending copy from end\n\t    for (i = len - 1; i >= 0; --i) {\n\t      target[i + targetStart] = this[i + start]\n\t    }\n\t  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // ascending copy from start\n\t    for (i = 0; i < len; ++i) {\n\t      target[i + targetStart] = this[i + start]\n\t    }\n\t  } else {\n\t    Uint8Array.prototype.set.call(\n\t      target,\n\t      this.subarray(start, start + len),\n\t      targetStart\n\t    )\n\t  }\n\t\n\t  return len\n\t}\n\t\n\t// Usage:\n\t//    buffer.fill(number[, offset[, end]])\n\t//    buffer.fill(buffer[, offset[, end]])\n\t//    buffer.fill(string[, offset[, end]][, encoding])\n\tBuffer.prototype.fill = function fill (val, start, end, encoding) {\n\t  // Handle string cases:\n\t  if (typeof val === 'string') {\n\t    if (typeof start === 'string') {\n\t      encoding = start\n\t      start = 0\n\t      end = this.length\n\t    } else if (typeof end === 'string') {\n\t      encoding = end\n\t      end = this.length\n\t    }\n\t    if (val.length === 1) {\n\t      var code = val.charCodeAt(0)\n\t      if (code < 256) {\n\t        val = code\n\t      }\n\t    }\n\t    if (encoding !== undefined && typeof encoding !== 'string') {\n\t      throw new TypeError('encoding must be a string')\n\t    }\n\t    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n\t      throw new TypeError('Unknown encoding: ' + encoding)\n\t    }\n\t  } else if (typeof val === 'number') {\n\t    val = val & 255\n\t  }\n\t\n\t  // Invalid ranges are not set to a default, so can range check early.\n\t  if (start < 0 || this.length < start || this.length < end) {\n\t    throw new RangeError('Out of range index')\n\t  }\n\t\n\t  if (end <= start) {\n\t    return this\n\t  }\n\t\n\t  start = start >>> 0\n\t  end = end === undefined ? this.length : end >>> 0\n\t\n\t  if (!val) val = 0\n\t\n\t  var i\n\t  if (typeof val === 'number') {\n\t    for (i = start; i < end; ++i) {\n\t      this[i] = val\n\t    }\n\t  } else {\n\t    var bytes = Buffer.isBuffer(val)\n\t      ? val\n\t      : utf8ToBytes(new Buffer(val, encoding).toString())\n\t    var len = bytes.length\n\t    for (i = 0; i < end - start; ++i) {\n\t      this[i + start] = bytes[i % len]\n\t    }\n\t  }\n\t\n\t  return this\n\t}\n\t\n\t// HELPER FUNCTIONS\n\t// ================\n\t\n\tvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\t\n\tfunction base64clean (str) {\n\t  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n\t  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n\t  // Node converts strings with length < 2 to ''\n\t  if (str.length < 2) return ''\n\t  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\t  while (str.length % 4 !== 0) {\n\t    str = str + '='\n\t  }\n\t  return str\n\t}\n\t\n\tfunction stringtrim (str) {\n\t  if (str.trim) return str.trim()\n\t  return str.replace(/^\\s+|\\s+$/g, '')\n\t}\n\t\n\tfunction toHex (n) {\n\t  if (n < 16) return '0' + n.toString(16)\n\t  return n.toString(16)\n\t}\n\t\n\tfunction utf8ToBytes (string, units) {\n\t  units = units || Infinity\n\t  var codePoint\n\t  var length = string.length\n\t  var leadSurrogate = null\n\t  var bytes = []\n\t\n\t  for (var i = 0; i < length; ++i) {\n\t    codePoint = string.charCodeAt(i)\n\t\n\t    // is surrogate component\n\t    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n\t      // last char was a lead\n\t      if (!leadSurrogate) {\n\t        // no lead yet\n\t        if (codePoint > 0xDBFF) {\n\t          // unexpected trail\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t          continue\n\t        } else if (i + 1 === length) {\n\t          // unpaired lead\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t          continue\n\t        }\n\t\n\t        // valid lead\n\t        leadSurrogate = codePoint\n\t\n\t        continue\n\t      }\n\t\n\t      // 2 leads in a row\n\t      if (codePoint < 0xDC00) {\n\t        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t        leadSurrogate = codePoint\n\t        continue\n\t      }\n\t\n\t      // valid surrogate pair\n\t      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n\t    } else if (leadSurrogate) {\n\t      // valid bmp char, but last char was a lead\n\t      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t    }\n\t\n\t    leadSurrogate = null\n\t\n\t    // encode utf8\n\t    if (codePoint < 0x80) {\n\t      if ((units -= 1) < 0) break\n\t      bytes.push(codePoint)\n\t    } else if (codePoint < 0x800) {\n\t      if ((units -= 2) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0x6 | 0xC0,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else if (codePoint < 0x10000) {\n\t      if ((units -= 3) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0xC | 0xE0,\n\t        codePoint >> 0x6 & 0x3F | 0x80,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else if (codePoint < 0x110000) {\n\t      if ((units -= 4) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0x12 | 0xF0,\n\t        codePoint >> 0xC & 0x3F | 0x80,\n\t        codePoint >> 0x6 & 0x3F | 0x80,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else {\n\t      throw new Error('Invalid code point')\n\t    }\n\t  }\n\t\n\t  return bytes\n\t}\n\t\n\tfunction asciiToBytes (str) {\n\t  var byteArray = []\n\t  for (var i = 0; i < str.length; ++i) {\n\t    // Node's code seems to be doing this and not & 0x7F..\n\t    byteArray.push(str.charCodeAt(i) & 0xFF)\n\t  }\n\t  return byteArray\n\t}\n\t\n\tfunction utf16leToBytes (str, units) {\n\t  var c, hi, lo\n\t  var byteArray = []\n\t  for (var i = 0; i < str.length; ++i) {\n\t    if ((units -= 2) < 0) break\n\t\n\t    c = str.charCodeAt(i)\n\t    hi = c >> 8\n\t    lo = c % 256\n\t    byteArray.push(lo)\n\t    byteArray.push(hi)\n\t  }\n\t\n\t  return byteArray\n\t}\n\t\n\tfunction base64ToBytes (str) {\n\t  return base64.toByteArray(base64clean(str))\n\t}\n\t\n\tfunction blitBuffer (src, dst, offset, length) {\n\t  for (var i = 0; i < length; ++i) {\n\t    if ((i + offset >= dst.length) || (i >= src.length)) break\n\t    dst[i + offset] = src[i]\n\t  }\n\t  return i\n\t}\n\t\n\tfunction isnan (val) {\n\t  return val !== val // eslint-disable-line no-self-compare\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports) {\n\n\t'use strict'\n\t\n\texports.byteLength = byteLength\n\texports.toByteArray = toByteArray\n\texports.fromByteArray = fromByteArray\n\t\n\tvar lookup = []\n\tvar revLookup = []\n\tvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\t\n\tvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n\tfor (var i = 0, len = code.length; i < len; ++i) {\n\t  lookup[i] = code[i]\n\t  revLookup[code.charCodeAt(i)] = i\n\t}\n\t\n\t// Support decoding URL-safe base64 strings, as Node.js does.\n\t// See: https://en.wikipedia.org/wiki/Base64#URL_applications\n\trevLookup['-'.charCodeAt(0)] = 62\n\trevLookup['_'.charCodeAt(0)] = 63\n\t\n\tfunction getLens (b64) {\n\t  var len = b64.length\n\t\n\t  if (len % 4 > 0) {\n\t    throw new Error('Invalid string. Length must be a multiple of 4')\n\t  }\n\t\n\t  // Trim off extra bytes after placeholder bytes are found\n\t  // See: https://github.com/beatgammit/base64-js/issues/42\n\t  var validLen = b64.indexOf('=')\n\t  if (validLen === -1) validLen = len\n\t\n\t  var placeHoldersLen = validLen === len\n\t    ? 0\n\t    : 4 - (validLen % 4)\n\t\n\t  return [validLen, placeHoldersLen]\n\t}\n\t\n\t// base64 is 4/3 + up to two characters of the original data\n\tfunction byteLength (b64) {\n\t  var lens = getLens(b64)\n\t  var validLen = lens[0]\n\t  var placeHoldersLen = lens[1]\n\t  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n\t}\n\t\n\tfunction _byteLength (b64, validLen, placeHoldersLen) {\n\t  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n\t}\n\t\n\tfunction toByteArray (b64) {\n\t  var tmp\n\t  var lens = getLens(b64)\n\t  var validLen = lens[0]\n\t  var placeHoldersLen = lens[1]\n\t\n\t  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\t\n\t  var curByte = 0\n\t\n\t  // if there are placeholders, only get up to the last complete 4 chars\n\t  var len = placeHoldersLen > 0\n\t    ? validLen - 4\n\t    : validLen\n\t\n\t  var i\n\t  for (i = 0; i < len; i += 4) {\n\t    tmp =\n\t      (revLookup[b64.charCodeAt(i)] << 18) |\n\t      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n\t      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n\t      revLookup[b64.charCodeAt(i + 3)]\n\t    arr[curByte++] = (tmp >> 16) & 0xFF\n\t    arr[curByte++] = (tmp >> 8) & 0xFF\n\t    arr[curByte++] = tmp & 0xFF\n\t  }\n\t\n\t  if (placeHoldersLen === 2) {\n\t    tmp =\n\t      (revLookup[b64.charCodeAt(i)] << 2) |\n\t      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n\t    arr[curByte++] = tmp & 0xFF\n\t  }\n\t\n\t  if (placeHoldersLen === 1) {\n\t    tmp =\n\t      (revLookup[b64.charCodeAt(i)] << 10) |\n\t      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n\t      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n\t    arr[curByte++] = (tmp >> 8) & 0xFF\n\t    arr[curByte++] = tmp & 0xFF\n\t  }\n\t\n\t  return arr\n\t}\n\t\n\tfunction tripletToBase64 (num) {\n\t  return lookup[num >> 18 & 0x3F] +\n\t    lookup[num >> 12 & 0x3F] +\n\t    lookup[num >> 6 & 0x3F] +\n\t    lookup[num & 0x3F]\n\t}\n\t\n\tfunction encodeChunk (uint8, start, end) {\n\t  var tmp\n\t  var output = []\n\t  for (var i = start; i < end; i += 3) {\n\t    tmp =\n\t      ((uint8[i] << 16) & 0xFF0000) +\n\t      ((uint8[i + 1] << 8) & 0xFF00) +\n\t      (uint8[i + 2] & 0xFF)\n\t    output.push(tripletToBase64(tmp))\n\t  }\n\t  return output.join('')\n\t}\n\t\n\tfunction fromByteArray (uint8) {\n\t  var tmp\n\t  var len = uint8.length\n\t  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n\t  var parts = []\n\t  var maxChunkLength = 16383 // must be multiple of 3\n\t\n\t  // go through the array every three bytes, we'll deal with trailing stuff later\n\t  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n\t    parts.push(encodeChunk(\n\t      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n\t    ))\n\t  }\n\t\n\t  // pad the end with zeros, but make sure to not forget the extra bytes\n\t  if (extraBytes === 1) {\n\t    tmp = uint8[len - 1]\n\t    parts.push(\n\t      lookup[tmp >> 2] +\n\t      lookup[(tmp << 4) & 0x3F] +\n\t      '=='\n\t    )\n\t  } else if (extraBytes === 2) {\n\t    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n\t    parts.push(\n\t      lookup[tmp >> 10] +\n\t      lookup[(tmp >> 4) & 0x3F] +\n\t      lookup[(tmp << 2) & 0x3F] +\n\t      '='\n\t    )\n\t  }\n\t\n\t  return parts.join('')\n\t}\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports) {\n\n\texports.read = function (buffer, offset, isLE, mLen, nBytes) {\n\t  var e, m\n\t  var eLen = (nBytes * 8) - mLen - 1\n\t  var eMax = (1 << eLen) - 1\n\t  var eBias = eMax >> 1\n\t  var nBits = -7\n\t  var i = isLE ? (nBytes - 1) : 0\n\t  var d = isLE ? -1 : 1\n\t  var s = buffer[offset + i]\n\t\n\t  i += d\n\t\n\t  e = s & ((1 << (-nBits)) - 1)\n\t  s >>= (-nBits)\n\t  nBits += eLen\n\t  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\t\n\t  m = e & ((1 << (-nBits)) - 1)\n\t  e >>= (-nBits)\n\t  nBits += mLen\n\t  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\t\n\t  if (e === 0) {\n\t    e = 1 - eBias\n\t  } else if (e === eMax) {\n\t    return m ? NaN : ((s ? -1 : 1) * Infinity)\n\t  } else {\n\t    m = m + Math.pow(2, mLen)\n\t    e = e - eBias\n\t  }\n\t  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n\t}\n\t\n\texports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n\t  var e, m, c\n\t  var eLen = (nBytes * 8) - mLen - 1\n\t  var eMax = (1 << eLen) - 1\n\t  var eBias = eMax >> 1\n\t  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n\t  var i = isLE ? 0 : (nBytes - 1)\n\t  var d = isLE ? 1 : -1\n\t  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\t\n\t  value = Math.abs(value)\n\t\n\t  if (isNaN(value) || value === Infinity) {\n\t    m = isNaN(value) ? 1 : 0\n\t    e = eMax\n\t  } else {\n\t    e = Math.floor(Math.log(value) / Math.LN2)\n\t    if (value * (c = Math.pow(2, -e)) < 1) {\n\t      e--\n\t      c *= 2\n\t    }\n\t    if (e + eBias >= 1) {\n\t      value += rt / c\n\t    } else {\n\t      value += rt * Math.pow(2, 1 - eBias)\n\t    }\n\t    if (value * c >= 2) {\n\t      e++\n\t      c /= 2\n\t    }\n\t\n\t    if (e + eBias >= eMax) {\n\t      m = 0\n\t      e = eMax\n\t    } else if (e + eBias >= 1) {\n\t      m = ((value * c) - 1) * Math.pow(2, mLen)\n\t      e = e + eBias\n\t    } else {\n\t      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n\t      e = 0\n\t    }\n\t  }\n\t\n\t  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\t\n\t  e = (e << mLen) | m\n\t  eLen += mLen\n\t  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\t\n\t  buffer[offset + i - d] |= s * 128\n\t}\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports) {\n\n\tvar toString = {}.toString;\n\t\n\tmodule.exports = Array.isArray || function (arr) {\n\t  return toString.call(arr) == '[object Array]';\n\t};\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * An abstraction for slicing an arraybuffer even when\n\t * ArrayBuffer.prototype.slice is not supported\n\t *\n\t * @api public\n\t */\n\t\n\tmodule.exports = function(arraybuffer, start, end) {\n\t  var bytes = arraybuffer.byteLength;\n\t  start = start || 0;\n\t  end = end || bytes;\n\t\n\t  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\n\t\n\t  if (start < 0) { start += bytes; }\n\t  if (end < 0) { end += bytes; }\n\t  if (end > bytes) { end = bytes; }\n\t\n\t  if (start >= bytes || start >= end || bytes === 0) {\n\t    return new ArrayBuffer(0);\n\t  }\n\t\n\t  var abv = new Uint8Array(arraybuffer);\n\t  var result = new Uint8Array(end - start);\n\t  for (var i = start, ii = 0; i < end; i++, ii++) {\n\t    result[ii] = abv[i];\n\t  }\n\t  return result.buffer;\n\t};\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = after\n\t\n\tfunction after(count, callback, err_cb) {\n\t    var bail = false\n\t    err_cb = err_cb || noop\n\t    proxy.count = count\n\t\n\t    return (count === 0) ? callback() : proxy\n\t\n\t    function proxy(err, result) {\n\t        if (proxy.count <= 0) {\n\t            throw new Error('after called too many times')\n\t        }\n\t        --proxy.count\n\t\n\t        // after first error, rest are passed to err_cb\n\t        if (err) {\n\t            bail = true\n\t            callback(err)\n\t            // future error callbacks will go to error handler\n\t            callback = err_cb\n\t        } else if (proxy.count === 0 && !bail) {\n\t            callback(null, result)\n\t        }\n\t    }\n\t}\n\t\n\tfunction noop() {}\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports) {\n\n\t/*! https://mths.be/utf8js v2.1.2 by @mathias */\n\t\n\tvar stringFromCharCode = String.fromCharCode;\n\t\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\t\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\t\n\tfunction checkScalarValue(codePoint, strict) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tif (strict) {\n\t\t\t\tthrow Error(\n\t\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t\t' is not a scalar value'\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\t/*--------------------------------------------------------------------------*/\n\t\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\t\n\tfunction encodeCodePoint(codePoint, strict) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tif (!checkScalarValue(codePoint, strict)) {\n\t\t\t\tcodePoint = 0xFFFD;\n\t\t\t}\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\t\n\tfunction utf8encode(string, opts) {\n\t\topts = opts || {};\n\t\tvar strict = false !== opts.strict;\n\t\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint, strict);\n\t\t}\n\t\treturn byteString;\n\t}\n\t\n\t/*--------------------------------------------------------------------------*/\n\t\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\t\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\t\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\t\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\t\n\tfunction decodeSymbol(strict) {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\t\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\t\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\t\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\t\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\t\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\t\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\treturn checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\t\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\t\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\t\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString, opts) {\n\t\topts = opts || {};\n\t\tvar strict = false !== opts.strict;\n\t\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol(strict)) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\t\n\tmodule.exports = {\n\t\tversion: '2.1.2',\n\t\tencode: utf8encode,\n\t\tdecode: utf8decode\n\t};\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports) {\n\n\t/*\n\t * base64-arraybuffer\n\t * https://github.com/niklasvh/base64-arraybuffer\n\t *\n\t * Copyright (c) 2012 Niklas von Hertzen\n\t * Licensed under the MIT license.\n\t */\n\t(function(){\n\t  \"use strict\";\n\t\n\t  var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\t\n\t  // Use a lookup table to find the index.\n\t  var lookup = new Uint8Array(256);\n\t  for (var i = 0; i < chars.length; i++) {\n\t    lookup[chars.charCodeAt(i)] = i;\n\t  }\n\t\n\t  exports.encode = function(arraybuffer) {\n\t    var bytes = new Uint8Array(arraybuffer),\n\t    i, len = bytes.length, base64 = \"\";\n\t\n\t    for (i = 0; i < len; i+=3) {\n\t      base64 += chars[bytes[i] >> 2];\n\t      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n\t      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n\t      base64 += chars[bytes[i + 2] & 63];\n\t    }\n\t\n\t    if ((len % 3) === 2) {\n\t      base64 = base64.substring(0, base64.length - 1) + \"=\";\n\t    } else if (len % 3 === 1) {\n\t      base64 = base64.substring(0, base64.length - 2) + \"==\";\n\t    }\n\t\n\t    return base64;\n\t  };\n\t\n\t  exports.decode =  function(base64) {\n\t    var bufferLength = base64.length * 0.75,\n\t    len = base64.length, i, p = 0,\n\t    encoded1, encoded2, encoded3, encoded4;\n\t\n\t    if (base64[base64.length - 1] === \"=\") {\n\t      bufferLength--;\n\t      if (base64[base64.length - 2] === \"=\") {\n\t        bufferLength--;\n\t      }\n\t    }\n\t\n\t    var arraybuffer = new ArrayBuffer(bufferLength),\n\t    bytes = new Uint8Array(arraybuffer);\n\t\n\t    for (i = 0; i < len; i+=4) {\n\t      encoded1 = lookup[base64.charCodeAt(i)];\n\t      encoded2 = lookup[base64.charCodeAt(i+1)];\n\t      encoded3 = lookup[base64.charCodeAt(i+2)];\n\t      encoded4 = lookup[base64.charCodeAt(i+3)];\n\t\n\t      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n\t      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n\t      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n\t    }\n\t\n\t    return arraybuffer;\n\t  };\n\t})();\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports) {\n\n\t/**\r\n\t * Create a blob builder even when vendor prefixes exist\r\n\t */\r\n\t\r\n\tvar BlobBuilder = typeof BlobBuilder !== 'undefined' ? BlobBuilder :\r\n\t  typeof WebKitBlobBuilder !== 'undefined' ? WebKitBlobBuilder :\r\n\t  typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder :\r\n\t  typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : \r\n\t  false;\r\n\t\r\n\t/**\r\n\t * Check if Blob constructor is supported\r\n\t */\r\n\t\r\n\tvar blobSupported = (function() {\r\n\t  try {\r\n\t    var a = new Blob(['hi']);\r\n\t    return a.size === 2;\r\n\t  } catch(e) {\r\n\t    return false;\r\n\t  }\r\n\t})();\r\n\t\r\n\t/**\r\n\t * Check if Blob constructor supports ArrayBufferViews\r\n\t * Fails in Safari 6, so we need to map to ArrayBuffers there.\r\n\t */\r\n\t\r\n\tvar blobSupportsArrayBufferView = blobSupported && (function() {\r\n\t  try {\r\n\t    var b = new Blob([new Uint8Array([1,2])]);\r\n\t    return b.size === 2;\r\n\t  } catch(e) {\r\n\t    return false;\r\n\t  }\r\n\t})();\r\n\t\r\n\t/**\r\n\t * Check if BlobBuilder is supported\r\n\t */\r\n\t\r\n\tvar blobBuilderSupported = BlobBuilder\r\n\t  && BlobBuilder.prototype.append\r\n\t  && BlobBuilder.prototype.getBlob;\r\n\t\r\n\t/**\r\n\t * Helper function that maps ArrayBufferViews to ArrayBuffers\r\n\t * Used by BlobBuilder constructor and old browsers that didn't\r\n\t * support it in the Blob constructor.\r\n\t */\r\n\t\r\n\tfunction mapArrayBufferViews(ary) {\r\n\t  return ary.map(function(chunk) {\r\n\t    if (chunk.buffer instanceof ArrayBuffer) {\r\n\t      var buf = chunk.buffer;\r\n\t\r\n\t      // if this is a subarray, make a copy so we only\r\n\t      // include the subarray region from the underlying buffer\r\n\t      if (chunk.byteLength !== buf.byteLength) {\r\n\t        var copy = new Uint8Array(chunk.byteLength);\r\n\t        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\r\n\t        buf = copy.buffer;\r\n\t      }\r\n\t\r\n\t      return buf;\r\n\t    }\r\n\t\r\n\t    return chunk;\r\n\t  });\r\n\t}\r\n\t\r\n\tfunction BlobBuilderConstructor(ary, options) {\r\n\t  options = options || {};\r\n\t\r\n\t  var bb = new BlobBuilder();\r\n\t  mapArrayBufferViews(ary).forEach(function(part) {\r\n\t    bb.append(part);\r\n\t  });\r\n\t\r\n\t  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();\r\n\t};\r\n\t\r\n\tfunction BlobConstructor(ary, options) {\r\n\t  return new Blob(mapArrayBufferViews(ary), options || {});\r\n\t};\r\n\t\r\n\tif (typeof Blob !== 'undefined') {\r\n\t  BlobBuilderConstructor.prototype = Blob.prototype;\r\n\t  BlobConstructor.prototype = Blob.prototype;\r\n\t}\r\n\t\r\n\tmodule.exports = (function() {\r\n\t  if (blobSupported) {\r\n\t    return blobSupportsArrayBufferView ? Blob : BlobConstructor;\r\n\t  } else if (blobBuilderSupported) {\r\n\t    return BlobBuilderConstructor;\r\n\t  } else {\r\n\t    return undefined;\r\n\t  }\r\n\t})();\r\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports) {\n\n\t/**\r\n\t * Compiles a querystring\r\n\t * Returns string representation of the object\r\n\t *\r\n\t * @param {Object}\r\n\t * @api private\r\n\t */\r\n\t\r\n\texports.encode = function (obj) {\r\n\t  var str = '';\r\n\t\r\n\t  for (var i in obj) {\r\n\t    if (obj.hasOwnProperty(i)) {\r\n\t      if (str.length) str += '&';\r\n\t      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\r\n\t    }\r\n\t  }\r\n\t\r\n\t  return str;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Parses a simple querystring into an object\r\n\t *\r\n\t * @param {String} qs\r\n\t * @api private\r\n\t */\r\n\t\r\n\texports.decode = function(qs){\r\n\t  var qry = {};\r\n\t  var pairs = qs.split('&');\r\n\t  for (var i = 0, l = pairs.length; i < l; i++) {\r\n\t    var pair = pairs[i].split('=');\r\n\t    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\r\n\t  }\r\n\t  return qry;\r\n\t};\r\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports) {\n\n\t\n\tmodule.exports = function(a, b){\n\t  var fn = function(){};\n\t  fn.prototype = b.prototype;\n\t  a.prototype = new fn;\n\t  a.prototype.constructor = a;\n\t};\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n\t  , length = 64\n\t  , map = {}\n\t  , seed = 0\n\t  , i = 0\n\t  , prev;\n\t\n\t/**\n\t * Return a string representing the specified number.\n\t *\n\t * @param {Number} num The number to convert.\n\t * @returns {String} The string representation of the number.\n\t * @api public\n\t */\n\tfunction encode(num) {\n\t  var encoded = '';\n\t\n\t  do {\n\t    encoded = alphabet[num % length] + encoded;\n\t    num = Math.floor(num / length);\n\t  } while (num > 0);\n\t\n\t  return encoded;\n\t}\n\t\n\t/**\n\t * Return the integer value specified by the given string.\n\t *\n\t * @param {String} str The string to convert.\n\t * @returns {Number} The integer value represented by the string.\n\t * @api public\n\t */\n\tfunction decode(str) {\n\t  var decoded = 0;\n\t\n\t  for (i = 0; i < str.length; i++) {\n\t    decoded = decoded * length + map[str.charAt(i)];\n\t  }\n\t\n\t  return decoded;\n\t}\n\t\n\t/**\n\t * Yeast: A tiny growing id generator.\n\t *\n\t * @returns {String} A unique id.\n\t * @api public\n\t */\n\tfunction yeast() {\n\t  var now = encode(+new Date());\n\t\n\t  if (now !== prev) return seed = 0, prev = now;\n\t  return now +'.'+ encode(seed++);\n\t}\n\t\n\t//\n\t// Map each character to its index.\n\t//\n\tfor (; i < length; i++) map[alphabet[i]] = i;\n\t\n\t//\n\t// Expose the `yeast`, `encode` and `decode` functions.\n\t//\n\tyeast.encode = encode;\n\tyeast.decode = decode;\n\tmodule.exports = yeast;\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\r\n\t/**\r\n\t * Module requirements.\r\n\t */\r\n\t\r\n\tvar Polling = __webpack_require__(16);\r\n\tvar inherit = __webpack_require__(31);\r\n\t\r\n\t/**\r\n\t * Module exports.\r\n\t */\r\n\t\r\n\tmodule.exports = JSONPPolling;\r\n\t\r\n\t/**\r\n\t * Cached regular expressions.\r\n\t */\r\n\t\r\n\tvar rNewline = /\\n/g;\r\n\tvar rEscapedNewline = /\\\\n/g;\r\n\t\r\n\t/**\r\n\t * Global JSONP callbacks.\r\n\t */\r\n\t\r\n\tvar callbacks;\r\n\t\r\n\t/**\r\n\t * Noop.\r\n\t */\r\n\t\r\n\tfunction empty () { }\r\n\t\r\n\t/**\r\n\t * JSONP Polling constructor.\r\n\t *\r\n\t * @param {Object} opts.\r\n\t * @api public\r\n\t */\r\n\t\r\n\tfunction JSONPPolling (opts) {\r\n\t  Polling.call(this, opts);\r\n\t\r\n\t  this.query = this.query || {};\r\n\t\r\n\t  // define global callbacks array if not present\r\n\t  // we do this here (lazily) to avoid unneeded global pollution\r\n\t  if (!callbacks) {\r\n\t    // we need to consider multiple engines in the same page\r\n\t    if (!global.___eio) global.___eio = [];\r\n\t    callbacks = global.___eio;\r\n\t  }\r\n\t\r\n\t  // callback identifier\r\n\t  this.index = callbacks.length;\r\n\t\r\n\t  // add callback to jsonp global\r\n\t  var self = this;\r\n\t  callbacks.push(function (msg) {\r\n\t    self.onData(msg);\r\n\t  });\r\n\t\r\n\t  // append to query string\r\n\t  this.query.j = this.index;\r\n\t\r\n\t  // prevent spurious errors from being emitted when the window is unloaded\r\n\t  if (global.document && global.addEventListener) {\r\n\t    global.addEventListener('beforeunload', function () {\r\n\t      if (self.script) self.script.onerror = empty;\r\n\t    }, false);\r\n\t  }\r\n\t}\r\n\t\r\n\t/**\r\n\t * Inherits from Polling.\r\n\t */\r\n\t\r\n\tinherit(JSONPPolling, Polling);\r\n\t\r\n\t/*\r\n\t * JSONP only supports binary as base64 encoded strings\r\n\t */\r\n\t\r\n\tJSONPPolling.prototype.supportsBinary = false;\r\n\t\r\n\t/**\r\n\t * Closes the socket.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tJSONPPolling.prototype.doClose = function () {\r\n\t  if (this.script) {\r\n\t    this.script.parentNode.removeChild(this.script);\r\n\t    this.script = null;\r\n\t  }\r\n\t\r\n\t  if (this.form) {\r\n\t    this.form.parentNode.removeChild(this.form);\r\n\t    this.form = null;\r\n\t    this.iframe = null;\r\n\t  }\r\n\t\r\n\t  Polling.prototype.doClose.call(this);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Starts a poll cycle.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tJSONPPolling.prototype.doPoll = function () {\r\n\t  var self = this;\r\n\t  var script = document.createElement('script');\r\n\t\r\n\t  if (this.script) {\r\n\t    this.script.parentNode.removeChild(this.script);\r\n\t    this.script = null;\r\n\t  }\r\n\t\r\n\t  script.async = true;\r\n\t  script.src = this.uri();\r\n\t  script.onerror = function (e) {\r\n\t    self.onError('jsonp poll error', e);\r\n\t  };\r\n\t\r\n\t  var insertAt = document.getElementsByTagName('script')[0];\r\n\t  if (insertAt) {\r\n\t    insertAt.parentNode.insertBefore(script, insertAt);\r\n\t  } else {\r\n\t    (document.head || document.body).appendChild(script);\r\n\t  }\r\n\t  this.script = script;\r\n\t\r\n\t  var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);\r\n\t\r\n\t  if (isUAgecko) {\r\n\t    setTimeout(function () {\r\n\t      var iframe = document.createElement('iframe');\r\n\t      document.body.appendChild(iframe);\r\n\t      document.body.removeChild(iframe);\r\n\t    }, 100);\r\n\t  }\r\n\t};\r\n\t\r\n\t/**\r\n\t * Writes with a hidden iframe.\r\n\t *\r\n\t * @param {String} data to send\r\n\t * @param {Function} called upon flush.\r\n\t * @api private\r\n\t */\r\n\t\r\n\tJSONPPolling.prototype.doWrite = function (data, fn) {\r\n\t  var self = this;\r\n\t\r\n\t  if (!this.form) {\r\n\t    var form = document.createElement('form');\r\n\t    var area = document.createElement('textarea');\r\n\t    var id = this.iframeId = 'eio_iframe_' + this.index;\r\n\t    var iframe;\r\n\t\r\n\t    form.className = 'socketio';\r\n\t    form.style.position = 'absolute';\r\n\t    form.style.top = '-1000px';\r\n\t    form.style.left = '-1000px';\r\n\t    form.target = id;\r\n\t    form.method = 'POST';\r\n\t    form.setAttribute('accept-charset', 'utf-8');\r\n\t    area.name = 'd';\r\n\t    form.appendChild(area);\r\n\t    document.body.appendChild(form);\r\n\t\r\n\t    this.form = form;\r\n\t    this.area = area;\r\n\t  }\r\n\t\r\n\t  this.form.action = this.uri();\r\n\t\r\n\t  function complete () {\r\n\t    initIframe();\r\n\t    fn();\r\n\t  }\r\n\t\r\n\t  function initIframe () {\r\n\t    if (self.iframe) {\r\n\t      try {\r\n\t        self.form.removeChild(self.iframe);\r\n\t      } catch (e) {\r\n\t        self.onError('jsonp polling iframe removal error', e);\r\n\t      }\r\n\t    }\r\n\t\r\n\t    try {\r\n\t      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\r\n\t      var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\r\n\t      iframe = document.createElement(html);\r\n\t    } catch (e) {\r\n\t      iframe = document.createElement('iframe');\r\n\t      iframe.name = self.iframeId;\r\n\t      iframe.src = 'javascript:0';\r\n\t    }\r\n\t\r\n\t    iframe.id = self.iframeId;\r\n\t\r\n\t    self.form.appendChild(iframe);\r\n\t    self.iframe = iframe;\r\n\t  }\r\n\t\r\n\t  initIframe();\r\n\t\r\n\t  // escape \\n to prevent it from being converted into \\r\\n by some UAs\r\n\t  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\r\n\t  data = data.replace(rEscapedNewline, '\\\\\\n');\r\n\t  this.area.value = data.replace(rNewline, '\\\\n');\r\n\t\r\n\t  try {\r\n\t    this.form.submit();\r\n\t  } catch (e) {}\r\n\t\r\n\t  if (this.iframe.attachEvent) {\r\n\t    this.iframe.onreadystatechange = function () {\r\n\t      if (self.iframe.readyState === 'complete') {\r\n\t        complete();\r\n\t      }\r\n\t    };\r\n\t  } else {\r\n\t    this.iframe.onload = complete;\r\n\t  }\r\n\t};\r\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\r\n\t * Module dependencies.\r\n\t */\r\n\t\r\n\tvar Transport = __webpack_require__(17);\r\n\tvar parser = __webpack_require__(18);\r\n\tvar parseqs = __webpack_require__(30);\r\n\tvar inherit = __webpack_require__(31);\r\n\tvar yeast = __webpack_require__(32);\r\n\tvar debug = __webpack_require__(3)('engine.io-client:websocket');\r\n\tvar BrowserWebSocket = global.WebSocket || global.MozWebSocket;\r\n\tvar NodeWebSocket;\r\n\tif (typeof window === 'undefined') {\r\n\t  try {\r\n\t    NodeWebSocket = __webpack_require__(35);\r\n\t  } catch (e) { }\r\n\t}\r\n\t\r\n\t/**\r\n\t * Get either the `WebSocket` or `MozWebSocket` globals\r\n\t * in the browser or try to resolve WebSocket-compatible\r\n\t * interface exposed by `ws` for Node-like environment.\r\n\t */\r\n\t\r\n\tvar WebSocket = BrowserWebSocket;\r\n\tif (!WebSocket && typeof window === 'undefined') {\r\n\t  WebSocket = NodeWebSocket;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Module exports.\r\n\t */\r\n\t\r\n\tmodule.exports = WS;\r\n\t\r\n\t/**\r\n\t * WebSocket transport constructor.\r\n\t *\r\n\t * @api {Object} connection options\r\n\t * @api public\r\n\t */\r\n\t\r\n\tfunction WS (opts) {\r\n\t  var forceBase64 = (opts && opts.forceBase64);\r\n\t  if (forceBase64) {\r\n\t    this.supportsBinary = false;\r\n\t  }\r\n\t  this.perMessageDeflate = opts.perMessageDeflate;\r\n\t  this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;\r\n\t  this.protocols = opts.protocols;\r\n\t  if (!this.usingBrowserWebSocket) {\r\n\t    WebSocket = NodeWebSocket;\r\n\t  }\r\n\t  Transport.call(this, opts);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Inherits from Transport.\r\n\t */\r\n\t\r\n\tinherit(WS, Transport);\r\n\t\r\n\t/**\r\n\t * Transport name.\r\n\t *\r\n\t * @api public\r\n\t */\r\n\t\r\n\tWS.prototype.name = 'websocket';\r\n\t\r\n\t/*\r\n\t * WebSockets support binary\r\n\t */\r\n\t\r\n\tWS.prototype.supportsBinary = true;\r\n\t\r\n\t/**\r\n\t * Opens socket.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tWS.prototype.doOpen = function () {\r\n\t  if (!this.check()) {\r\n\t    // let probe timeout\r\n\t    return;\r\n\t  }\r\n\t\r\n\t  var uri = this.uri();\r\n\t  var protocols = this.protocols;\r\n\t  var opts = {\r\n\t    agent: this.agent,\r\n\t    perMessageDeflate: this.perMessageDeflate\r\n\t  };\r\n\t\r\n\t  // SSL options for Node.js client\r\n\t  opts.pfx = this.pfx;\r\n\t  opts.key = this.key;\r\n\t  opts.passphrase = this.passphrase;\r\n\t  opts.cert = this.cert;\r\n\t  opts.ca = this.ca;\r\n\t  opts.ciphers = this.ciphers;\r\n\t  opts.rejectUnauthorized = this.rejectUnauthorized;\r\n\t  if (this.extraHeaders) {\r\n\t    opts.headers = this.extraHeaders;\r\n\t  }\r\n\t  if (this.localAddress) {\r\n\t    opts.localAddress = this.localAddress;\r\n\t  }\r\n\t\r\n\t  try {\r\n\t    this.ws = this.usingBrowserWebSocket ? (protocols ? new WebSocket(uri, protocols) : new WebSocket(uri)) : new WebSocket(uri, protocols, opts);\r\n\t  } catch (err) {\r\n\t    return this.emit('error', err);\r\n\t  }\r\n\t\r\n\t  if (this.ws.binaryType === undefined) {\r\n\t    this.supportsBinary = false;\r\n\t  }\r\n\t\r\n\t  if (this.ws.supports && this.ws.supports.binary) {\r\n\t    this.supportsBinary = true;\r\n\t    this.ws.binaryType = 'nodebuffer';\r\n\t  } else {\r\n\t    this.ws.binaryType = 'arraybuffer';\r\n\t  }\r\n\t\r\n\t  this.addEventListeners();\r\n\t};\r\n\t\r\n\t/**\r\n\t * Adds event listeners to the socket\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tWS.prototype.addEventListeners = function () {\r\n\t  var self = this;\r\n\t\r\n\t  this.ws.onopen = function () {\r\n\t    self.onOpen();\r\n\t  };\r\n\t  this.ws.onclose = function () {\r\n\t    self.onClose();\r\n\t  };\r\n\t  this.ws.onmessage = function (ev) {\r\n\t    self.onData(ev.data);\r\n\t  };\r\n\t  this.ws.onerror = function (e) {\r\n\t    self.onError('websocket error', e);\r\n\t  };\r\n\t};\r\n\t\r\n\t/**\r\n\t * Writes data to socket.\r\n\t *\r\n\t * @param {Array} array of packets.\r\n\t * @api private\r\n\t */\r\n\t\r\n\tWS.prototype.write = function (packets) {\r\n\t  var self = this;\r\n\t  this.writable = false;\r\n\t\r\n\t  // encodePacket efficient as it uses WS framing\r\n\t  // no need for encodePayload\r\n\t  var total = packets.length;\r\n\t  for (var i = 0, l = total; i < l; i++) {\r\n\t    (function (packet) {\r\n\t      parser.encodePacket(packet, self.supportsBinary, function (data) {\r\n\t        if (!self.usingBrowserWebSocket) {\r\n\t          // always create a new object (GH-437)\r\n\t          var opts = {};\r\n\t          if (packet.options) {\r\n\t            opts.compress = packet.options.compress;\r\n\t          }\r\n\t\r\n\t          if (self.perMessageDeflate) {\r\n\t            var len = 'string' === typeof data ? global.Buffer.byteLength(data) : data.length;\r\n\t            if (len < self.perMessageDeflate.threshold) {\r\n\t              opts.compress = false;\r\n\t            }\r\n\t          }\r\n\t        }\r\n\t\r\n\t        // Sometimes the websocket has already been closed but the browser didn't\r\n\t        // have a chance of informing us about it yet, in that case send will\r\n\t        // throw an error\r\n\t        try {\r\n\t          if (self.usingBrowserWebSocket) {\r\n\t            // TypeError is thrown when passing the second argument on Safari\r\n\t            self.ws.send(data);\r\n\t          } else {\r\n\t            self.ws.send(data, opts);\r\n\t          }\r\n\t        } catch (e) {\r\n\t\r\n\t        }\r\n\t\r\n\t        --total || done();\r\n\t      });\r\n\t    })(packets[i]);\r\n\t  }\r\n\t\r\n\t  function done () {\r\n\t    self.emit('flush');\r\n\t\r\n\t    // fake drain\r\n\t    // defer to next tick to allow Socket to clear writeBuffer\r\n\t    setTimeout(function () {\r\n\t      self.writable = true;\r\n\t      self.emit('drain');\r\n\t    }, 0);\r\n\t  }\r\n\t};\r\n\t\r\n\t/**\r\n\t * Called upon close\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tWS.prototype.onClose = function () {\r\n\t  Transport.prototype.onClose.call(this);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Closes socket.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tWS.prototype.doClose = function () {\r\n\t  if (typeof this.ws !== 'undefined') {\r\n\t    this.ws.close();\r\n\t  }\r\n\t};\r\n\t\r\n\t/**\r\n\t * Generates uri for connection.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tWS.prototype.uri = function () {\r\n\t  var query = this.query || {};\r\n\t  var schema = this.secure ? 'wss' : 'ws';\r\n\t  var port = '';\r\n\t\r\n\t  // avoid port if default for schema\r\n\t  if (this.port && (('wss' === schema && Number(this.port) !== 443) ||\r\n\t    ('ws' === schema && Number(this.port) !== 80))) {\r\n\t    port = ':' + this.port;\r\n\t  }\r\n\t\r\n\t  // append timestamp to URI\r\n\t  if (this.timestampRequests) {\r\n\t    query[this.timestampParam] = yeast();\r\n\t  }\r\n\t\r\n\t  // communicate binary support capabilities\r\n\t  if (!this.supportsBinary) {\r\n\t    query.b64 = 1;\r\n\t  }\r\n\t\r\n\t  query = parseqs.encode(query);\r\n\t\r\n\t  // prepend ? to query\r\n\t  if (query.length) {\r\n\t    query = '?' + query;\r\n\t  }\r\n\t\r\n\t  var ipv6 = this.hostname.indexOf(':') !== -1;\r\n\t  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Feature detection for WebSocket.\r\n\t *\r\n\t * @return {Boolean} whether this transport is available.\r\n\t * @api public\r\n\t */\r\n\t\r\n\tWS.prototype.check = function () {\r\n\t  return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);\r\n\t};\r\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports) {\n\n\t/* (ignored) */\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports) {\n\n\t\n\tvar indexOf = [].indexOf;\n\t\n\tmodule.exports = function(arr, obj){\n\t  if (indexOf) return arr.indexOf(obj);\n\t  for (var i = 0; i < arr.length; ++i) {\n\t    if (arr[i] === obj) return i;\n\t  }\n\t  return -1;\n\t};\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\t/**\r\n\t * Module dependencies.\r\n\t */\n\t\n\tvar parser = __webpack_require__(4);\n\tvar Emitter = __webpack_require__(5);\n\tvar toArray = __webpack_require__(38);\n\tvar on = __webpack_require__(39);\n\tvar bind = __webpack_require__(40);\n\tvar debug = __webpack_require__(3)('socket.io-client:socket');\n\tvar parseqs = __webpack_require__(30);\n\tvar hasBin = __webpack_require__(20);\n\t\n\t/**\r\n\t * Module exports.\r\n\t */\n\t\n\tmodule.exports = exports = Socket;\n\t\n\t/**\r\n\t * Internal events (blacklisted).\r\n\t * These events can't be emitted by the user.\r\n\t *\r\n\t * @api private\r\n\t */\n\t\n\tvar events = {\n\t  connect: 1,\n\t  connect_error: 1,\n\t  connect_timeout: 1,\n\t  connecting: 1,\n\t  disconnect: 1,\n\t  error: 1,\n\t  reconnect: 1,\n\t  reconnect_attempt: 1,\n\t  reconnect_failed: 1,\n\t  reconnect_error: 1,\n\t  reconnecting: 1,\n\t  ping: 1,\n\t  pong: 1\n\t};\n\t\n\t/**\r\n\t * Shortcut to `Emitter#emit`.\r\n\t */\n\t\n\tvar emit = Emitter.prototype.emit;\n\t\n\t/**\r\n\t * `Socket` constructor.\r\n\t *\r\n\t * @api public\r\n\t */\n\t\n\tfunction Socket(io, nsp, opts) {\n\t  this.io = io;\n\t  this.nsp = nsp;\n\t  this.json = this; // compat\n\t  this.ids = 0;\n\t  this.acks = {};\n\t  this.receiveBuffer = [];\n\t  this.sendBuffer = [];\n\t  this.connected = false;\n\t  this.disconnected = true;\n\t  this.flags = {};\n\t  if (opts && opts.query) {\n\t    this.query = opts.query;\n\t  }\n\t  if (this.io.autoConnect) this.open();\n\t}\n\t\n\t/**\r\n\t * Mix in `Emitter`.\r\n\t */\n\t\n\tEmitter(Socket.prototype);\n\t\n\t/**\r\n\t * Subscribe to open, close and packet events\r\n\t *\r\n\t * @api private\r\n\t */\n\t\n\tSocket.prototype.subEvents = function () {\n\t  if (this.subs) return;\n\t\n\t  var io = this.io;\n\t  this.subs = [on(io, 'open', bind(this, 'onopen')), on(io, 'packet', bind(this, 'onpacket')), on(io, 'close', bind(this, 'onclose'))];\n\t};\n\t\n\t/**\r\n\t * \"Opens\" the socket.\r\n\t *\r\n\t * @api public\r\n\t */\n\t\n\tSocket.prototype.open = Socket.prototype.connect = function () {\n\t  if (this.connected) return this;\n\t\n\t  this.subEvents();\n\t  this.io.open(); // ensure open\n\t  if ('open' === this.io.readyState) this.onopen();\n\t  this.emit('connecting');\n\t  return this;\n\t};\n\t\n\t/**\r\n\t * Sends a `message` event.\r\n\t *\r\n\t * @return {Socket} self\r\n\t * @api public\r\n\t */\n\t\n\tSocket.prototype.send = function () {\n\t  var args = toArray(arguments);\n\t  args.unshift('message');\n\t  this.emit.apply(this, args);\n\t  return this;\n\t};\n\t\n\t/**\r\n\t * Override `emit`.\r\n\t * If the event is in `events`, it's emitted normally.\r\n\t *\r\n\t * @param {String} event name\r\n\t * @return {Socket} self\r\n\t * @api public\r\n\t */\n\t\n\tSocket.prototype.emit = function (ev) {\n\t  if (events.hasOwnProperty(ev)) {\n\t    emit.apply(this, arguments);\n\t    return this;\n\t  }\n\t\n\t  var args = toArray(arguments);\n\t  var packet = {\n\t    type: (this.flags.binary !== undefined ? this.flags.binary : hasBin(args)) ? parser.BINARY_EVENT : parser.EVENT,\n\t    data: args\n\t  };\n\t\n\t  packet.options = {};\n\t  packet.options.compress = !this.flags || false !== this.flags.compress;\n\t\n\t  // event ack callback\n\t  if ('function' === typeof args[args.length - 1]) {\n\t\n\t    this.acks[this.ids] = args.pop();\n\t    packet.id = this.ids++;\n\t  }\n\t\n\t  if (this.connected) {\n\t    this.packet(packet);\n\t  } else {\n\t    this.sendBuffer.push(packet);\n\t  }\n\t\n\t  this.flags = {};\n\t\n\t  return this;\n\t};\n\t\n\t/**\r\n\t * Sends a packet.\r\n\t *\r\n\t * @param {Object} packet\r\n\t * @api private\r\n\t */\n\t\n\tSocket.prototype.packet = function (packet) {\n\t  packet.nsp = this.nsp;\n\t  this.io.packet(packet);\n\t};\n\t\n\t/**\r\n\t * Called upon engine `open`.\r\n\t *\r\n\t * @api private\r\n\t */\n\t\n\tSocket.prototype.onopen = function () {\n\t\n\t  // write connect packet if necessary\n\t  if ('/' !== this.nsp) {\n\t    if (this.query) {\n\t      var query = _typeof(this.query) === 'object' ? parseqs.encode(this.query) : this.query;\n\t\n\t      this.packet({ type: parser.CONNECT, query: query });\n\t    } else {\n\t      this.packet({ type: parser.CONNECT });\n\t    }\n\t  }\n\t};\n\t\n\t/**\r\n\t * Called upon engine `close`.\r\n\t *\r\n\t * @param {String} reason\r\n\t * @api private\r\n\t */\n\t\n\tSocket.prototype.onclose = function (reason) {\n\t\n\t  this.connected = false;\n\t  this.disconnected = true;\n\t  delete this.id;\n\t  this.emit('disconnect', reason);\n\t};\n\t\n\t/**\r\n\t * Called with socket packet.\r\n\t *\r\n\t * @param {Object} packet\r\n\t * @api private\r\n\t */\n\t\n\tSocket.prototype.onpacket = function (packet) {\n\t  var sameNamespace = packet.nsp === this.nsp;\n\t  var rootNamespaceError = packet.type === parser.ERROR && packet.nsp === '/';\n\t\n\t  if (!sameNamespace && !rootNamespaceError) return;\n\t\n\t  switch (packet.type) {\n\t    case parser.CONNECT:\n\t      this.onconnect();\n\t      break;\n\t\n\t    case parser.EVENT:\n\t      this.onevent(packet);\n\t      break;\n\t\n\t    case parser.BINARY_EVENT:\n\t      this.onevent(packet);\n\t      break;\n\t\n\t    case parser.ACK:\n\t      this.onack(packet);\n\t      break;\n\t\n\t    case parser.BINARY_ACK:\n\t      this.onack(packet);\n\t      break;\n\t\n\t    case parser.DISCONNECT:\n\t      this.ondisconnect();\n\t      break;\n\t\n\t    case parser.ERROR:\n\t      this.emit('error', packet.data);\n\t      break;\n\t  }\n\t};\n\t\n\t/**\r\n\t * Called upon a server event.\r\n\t *\r\n\t * @param {Object} packet\r\n\t * @api private\r\n\t */\n\t\n\tSocket.prototype.onevent = function (packet) {\n\t  var args = packet.data || [];\n\t\n\t  if (null != packet.id) {\n\t\n\t    args.push(this.ack(packet.id));\n\t  }\n\t\n\t  if (this.connected) {\n\t    emit.apply(this, args);\n\t  } else {\n\t    this.receiveBuffer.push(args);\n\t  }\n\t};\n\t\n\t/**\r\n\t * Produces an ack callback to emit with an event.\r\n\t *\r\n\t * @api private\r\n\t */\n\t\n\tSocket.prototype.ack = function (id) {\n\t  var self = this;\n\t  var sent = false;\n\t  return function () {\n\t    // prevent double callbacks\n\t    if (sent) return;\n\t    sent = true;\n\t    var args = toArray(arguments);\n\t\n\t    self.packet({\n\t      type: hasBin(args) ? parser.BINARY_ACK : parser.ACK,\n\t      id: id,\n\t      data: args\n\t    });\n\t  };\n\t};\n\t\n\t/**\r\n\t * Called upon a server acknowlegement.\r\n\t *\r\n\t * @param {Object} packet\r\n\t * @api private\r\n\t */\n\t\n\tSocket.prototype.onack = function (packet) {\n\t  var ack = this.acks[packet.id];\n\t  if ('function' === typeof ack) {\n\t\n\t    ack.apply(this, packet.data);\n\t    delete this.acks[packet.id];\n\t  } else {}\n\t};\n\t\n\t/**\r\n\t * Called upon server connect.\r\n\t *\r\n\t * @api private\r\n\t */\n\t\n\tSocket.prototype.onconnect = function () {\n\t  this.connected = true;\n\t  this.disconnected = false;\n\t  this.emit('connect');\n\t  this.emitBuffered();\n\t};\n\t\n\t/**\r\n\t * Emit buffered events (received and emitted).\r\n\t *\r\n\t * @api private\r\n\t */\n\t\n\tSocket.prototype.emitBuffered = function () {\n\t  var i;\n\t  for (i = 0; i < this.receiveBuffer.length; i++) {\n\t    emit.apply(this, this.receiveBuffer[i]);\n\t  }\n\t  this.receiveBuffer = [];\n\t\n\t  for (i = 0; i < this.sendBuffer.length; i++) {\n\t    this.packet(this.sendBuffer[i]);\n\t  }\n\t  this.sendBuffer = [];\n\t};\n\t\n\t/**\r\n\t * Called upon server disconnect.\r\n\t *\r\n\t * @api private\r\n\t */\n\t\n\tSocket.prototype.ondisconnect = function () {\n\t\n\t  this.destroy();\n\t  this.onclose('io server disconnect');\n\t};\n\t\n\t/**\r\n\t * Called upon forced client/server side disconnections,\r\n\t * this method ensures the manager stops tracking us and\r\n\t * that reconnections don't get triggered for this.\r\n\t *\r\n\t * @api private.\r\n\t */\n\t\n\tSocket.prototype.destroy = function () {\n\t  if (this.subs) {\n\t    // clean subscriptions to avoid reconnections\n\t    for (var i = 0; i < this.subs.length; i++) {\n\t      this.subs[i].destroy();\n\t    }\n\t    this.subs = null;\n\t  }\n\t\n\t  this.io.destroy(this);\n\t};\n\t\n\t/**\r\n\t * Disconnects the socket manually.\r\n\t *\r\n\t * @return {Socket} self\r\n\t * @api public\r\n\t */\n\t\n\tSocket.prototype.close = Socket.prototype.disconnect = function () {\n\t  if (this.connected) {\n\t\n\t    this.packet({ type: parser.DISCONNECT });\n\t  }\n\t\n\t  // remove socket from pool\n\t  this.destroy();\n\t\n\t  if (this.connected) {\n\t    // fire events\n\t    this.onclose('io client disconnect');\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\r\n\t * Sets the compress flag.\r\n\t *\r\n\t * @param {Boolean} if `true`, compresses the sending data\r\n\t * @return {Socket} self\r\n\t * @api public\r\n\t */\n\t\n\tSocket.prototype.compress = function (compress) {\n\t  this.flags.compress = compress;\n\t  return this;\n\t};\n\t\n\t/**\r\n\t * Sets the binary flag\r\n\t *\r\n\t * @param {Boolean} whether the emitted data contains binary\r\n\t * @return {Socket} self\r\n\t * @api public\r\n\t */\n\t\n\tSocket.prototype.binary = function (binary) {\n\t  this.flags.binary = binary;\n\t  return this;\n\t};\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = toArray\n\t\n\tfunction toArray(list, index) {\n\t    var array = []\n\t\n\t    index = index || 0\n\t\n\t    for (var i = index || 0; i < list.length; i++) {\n\t        array[i - index] = list[i]\n\t    }\n\t\n\t    return array\n\t}\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\t/**\r\n\t * Module exports.\r\n\t */\n\t\n\tmodule.exports = on;\n\t\n\t/**\r\n\t * Helper for subscriptions.\r\n\t *\r\n\t * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\r\n\t * @param {String} event name\r\n\t * @param {Function} callback\r\n\t * @api public\r\n\t */\n\t\n\tfunction on(obj, ev, fn) {\n\t  obj.on(ev, fn);\n\t  return {\n\t    destroy: function destroy() {\n\t      obj.removeListener(ev, fn);\n\t    }\n\t  };\n\t}\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Slice reference.\n\t */\n\t\n\tvar slice = [].slice;\n\t\n\t/**\n\t * Bind `obj` to `fn`.\n\t *\n\t * @param {Object} obj\n\t * @param {Function|String} fn or string\n\t * @return {Function}\n\t * @api public\n\t */\n\t\n\tmodule.exports = function(obj, fn){\n\t  if ('string' == typeof fn) fn = obj[fn];\n\t  if ('function' != typeof fn) throw new Error('bind() requires a function');\n\t  var args = slice.call(arguments, 2);\n\t  return function(){\n\t    return fn.apply(obj, args.concat(slice.call(arguments)));\n\t  }\n\t};\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports) {\n\n\t\n\t/**\n\t * Expose `Backoff`.\n\t */\n\t\n\tmodule.exports = Backoff;\n\t\n\t/**\n\t * Initialize backoff timer with `opts`.\n\t *\n\t * - `min` initial timeout in milliseconds [100]\n\t * - `max` max timeout [10000]\n\t * - `jitter` [0]\n\t * - `factor` [2]\n\t *\n\t * @param {Object} opts\n\t * @api public\n\t */\n\t\n\tfunction Backoff(opts) {\n\t  opts = opts || {};\n\t  this.ms = opts.min || 100;\n\t  this.max = opts.max || 10000;\n\t  this.factor = opts.factor || 2;\n\t  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n\t  this.attempts = 0;\n\t}\n\t\n\t/**\n\t * Return the backoff duration.\n\t *\n\t * @return {Number}\n\t * @api public\n\t */\n\t\n\tBackoff.prototype.duration = function(){\n\t  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n\t  if (this.jitter) {\n\t    var rand =  Math.random();\n\t    var deviation = Math.floor(rand * this.jitter * ms);\n\t    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n\t  }\n\t  return Math.min(ms, this.max) | 0;\n\t};\n\t\n\t/**\n\t * Reset the number of attempts.\n\t *\n\t * @api public\n\t */\n\t\n\tBackoff.prototype.reset = function(){\n\t  this.attempts = 0;\n\t};\n\t\n\t/**\n\t * Set the minimum duration\n\t *\n\t * @api public\n\t */\n\t\n\tBackoff.prototype.setMin = function(min){\n\t  this.ms = min;\n\t};\n\t\n\t/**\n\t * Set the maximum duration\n\t *\n\t * @api public\n\t */\n\t\n\tBackoff.prototype.setMax = function(max){\n\t  this.max = max;\n\t};\n\t\n\t/**\n\t * Set the jitter\n\t *\n\t * @api public\n\t */\n\t\n\tBackoff.prototype.setJitter = function(jitter){\n\t  this.jitter = jitter;\n\t};\n\t\n\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// socket.io.slim.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c15c5bdd1eceed135081","\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar url = require('./url');\r\nvar parser = require('socket.io-parser');\r\nvar Manager = require('./manager');\r\nvar debug = require('debug')('socket.io-client');\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = exports = lookup;\r\n\r\n/**\r\n * Managers cache.\r\n */\r\n\r\nvar cache = exports.managers = {};\r\n\r\n/**\r\n * Looks up an existing `Manager` for multiplexing.\r\n * If the user summons:\r\n *\r\n *   `io('http://localhost/a');`\r\n *   `io('http://localhost/b');`\r\n *\r\n * We reuse the existing instance based on same scheme/port/host,\r\n * and we initialize sockets for each namespace.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction lookup (uri, opts) {\r\n  if (typeof uri === 'object') {\r\n    opts = uri;\r\n    uri = undefined;\r\n  }\r\n\r\n  opts = opts || {};\r\n\r\n  var parsed = url(uri);\r\n  var source = parsed.source;\r\n  var id = parsed.id;\r\n  var path = parsed.path;\r\n  var sameNamespace = cache[id] && path in cache[id].nsps;\r\n  var newConnection = opts.forceNew || opts['force new connection'] ||\r\n                      false === opts.multiplex || sameNamespace;\r\n\r\n  var io;\r\n\r\n  if (newConnection) {\r\n\r\n    io = Manager(source, opts);\r\n  } else {\r\n    if (!cache[id]) {\r\n\r\n      cache[id] = Manager(source, opts);\r\n    }\r\n    io = cache[id];\r\n  }\r\n  if (parsed.query && !opts.query) {\r\n    opts.query = parsed.query;\r\n  }\r\n  return io.socket(parsed.path, opts);\r\n}\r\n\r\n/**\r\n * Protocol version.\r\n *\r\n * @api public\r\n */\r\n\r\nexports.protocol = parser.protocol;\r\n\r\n/**\r\n * `connect`.\r\n *\r\n * @param {String} uri\r\n * @api public\r\n */\r\n\r\nexports.connect = lookup;\r\n\r\n/**\r\n * Expose constructors for standalone build.\r\n *\r\n * @api public\r\n */\r\n\r\nexports.Manager = require('./manager');\r\nexports.Socket = require('./socket');\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib/index.js","\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar parseuri = require('parseuri');\r\nvar debug = require('debug')('socket.io-client:url');\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = url;\r\n\r\n/**\r\n * URL parser.\r\n *\r\n * @param {String} url\r\n * @param {Object} An object meant to mimic window.location.\r\n *                 Defaults to window.location.\r\n * @api public\r\n */\r\n\r\nfunction url (uri, loc) {\r\n  var obj = uri;\r\n\r\n  // default to window.location\r\n  loc = loc || global.location;\r\n  if (null == uri) uri = loc.protocol + '//' + loc.host;\r\n\r\n  // relative path support\r\n  if ('string' === typeof uri) {\r\n    if ('/' === uri.charAt(0)) {\r\n      if ('/' === uri.charAt(1)) {\r\n        uri = loc.protocol + uri;\r\n      } else {\r\n        uri = loc.host + uri;\r\n      }\r\n    }\r\n\r\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\r\n\r\n      if ('undefined' !== typeof loc) {\r\n        uri = loc.protocol + '//' + uri;\r\n      } else {\r\n        uri = 'https://' + uri;\r\n      }\r\n    }\r\n\r\n    // parse\r\n\r\n    obj = parseuri(uri);\r\n  }\r\n\r\n  // make sure we treat `localhost:80` and `localhost` equally\r\n  if (!obj.port) {\r\n    if (/^(http|ws)$/.test(obj.protocol)) {\r\n      obj.port = '80';\r\n    } else if (/^(http|ws)s$/.test(obj.protocol)) {\r\n      obj.port = '443';\r\n    }\r\n  }\r\n\r\n  obj.path = obj.path || '/';\r\n\r\n  var ipv6 = obj.host.indexOf(':') !== -1;\r\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\r\n\r\n  // define unique id\r\n  obj.id = obj.protocol + '://' + host + ':' + obj.port;\r\n  // define href\r\n  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : (':' + obj.port));\r\n\r\n  return obj;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib/url.js","/**\r\n * Parses an URI\r\n *\r\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\r\n * @api private\r\n */\r\n\r\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\r\n\r\nvar parts = [\r\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\r\n];\r\n\r\nmodule.exports = function parseuri(str) {\r\n    var src = str,\r\n        b = str.indexOf('['),\r\n        e = str.indexOf(']');\r\n\r\n    if (b != -1 && e != -1) {\r\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\r\n    }\r\n\r\n    var m = re.exec(str || ''),\r\n        uri = {},\r\n        i = 14;\r\n\r\n    while (i--) {\r\n        uri[parts[i]] = m[i] || '';\r\n    }\r\n\r\n    if (b != -1 && e != -1) {\r\n        uri.source = src;\r\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\r\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\r\n        uri.ipv6uri = true;\r\n    }\r\n\r\n    return uri;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/parseuri/index.js\n// module id = 2\n// module chunks = 0","\r\nmodule.exports = function () { return function () {}; };\r\n\n\n\n// WEBPACK FOOTER //\n// ./support/noop.js","\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar binary = require('./binary');\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = 4;\n\n/**\n * Packet types.\n *\n * @api public\n */\n\nexports.types = [\n  'CONNECT',\n  'DISCONNECT',\n  'EVENT',\n  'ACK',\n  'ERROR',\n  'BINARY_EVENT',\n  'BINARY_ACK'\n];\n\n/**\n * Packet type `connect`.\n *\n * @api public\n */\n\nexports.CONNECT = 0;\n\n/**\n * Packet type `disconnect`.\n *\n * @api public\n */\n\nexports.DISCONNECT = 1;\n\n/**\n * Packet type `event`.\n *\n * @api public\n */\n\nexports.EVENT = 2;\n\n/**\n * Packet type `ack`.\n *\n * @api public\n */\n\nexports.ACK = 3;\n\n/**\n * Packet type `error`.\n *\n * @api public\n */\n\nexports.ERROR = 4;\n\n/**\n * Packet type 'binary event'\n *\n * @api public\n */\n\nexports.BINARY_EVENT = 5;\n\n/**\n * Packet type `binary ack`. For acks with binary arguments.\n *\n * @api public\n */\n\nexports.BINARY_ACK = 6;\n\n/**\n * Encoder constructor.\n *\n * @api public\n */\n\nexports.Encoder = Encoder;\n\n/**\n * Decoder constructor.\n *\n * @api public\n */\n\nexports.Decoder = Decoder;\n\n/**\n * A socket.io Encoder instance\n *\n * @api public\n */\n\nfunction Encoder() {}\n\nvar ERROR_PACKET = exports.ERROR + '\"encode error\"';\n\n/**\n * Encode a packet as a single string if non-binary, or as a\n * buffer sequence, depending on packet type.\n *\n * @param {Object} obj - packet object\n * @param {Function} callback - function to handle encodings (likely engine.write)\n * @return Calls callback with Array of encodings\n * @api public\n */\n\nEncoder.prototype.encode = function(obj, callback){\n\n\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    encodeAsBinary(obj, callback);\n  } else {\n    var encoding = encodeAsString(obj);\n    callback([encoding]);\n  }\n};\n\n/**\n * Encode packet as string.\n *\n * @param {Object} packet\n * @return {String} encoded\n * @api private\n */\n\nfunction encodeAsString(obj) {\n\n  // first is type\n  var str = '' + obj.type;\n\n  // attachments if we have them\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    str += obj.attachments + '-';\n  }\n\n  // if we have a namespace other than `/`\n  // we append it followed by a comma `,`\n  if (obj.nsp && '/' !== obj.nsp) {\n    str += obj.nsp + ',';\n  }\n\n  // immediately followed by the id\n  if (null != obj.id) {\n    str += obj.id;\n  }\n\n  // json data\n  if (null != obj.data) {\n    var payload = tryStringify(obj.data);\n    if (payload !== false) {\n      str += payload;\n    } else {\n      return ERROR_PACKET;\n    }\n  }\n\n\n  return str;\n}\n\nfunction tryStringify(str) {\n  try {\n    return JSON.stringify(str);\n  } catch(e){\n    return false;\n  }\n}\n\n/**\n * Encode packet as 'buffer sequence' by removing blobs, and\n * deconstructing packet into object with placeholders and\n * a list of buffers.\n *\n * @param {Object} packet\n * @return {Buffer} encoded\n * @api private\n */\n\nfunction encodeAsBinary(obj, callback) {\n\n  function writeEncoding(bloblessData) {\n    var deconstruction = binary.deconstructPacket(bloblessData);\n    var pack = encodeAsString(deconstruction.packet);\n    var buffers = deconstruction.buffers;\n\n    buffers.unshift(pack); // add packet info to beginning of data list\n    callback(buffers); // write all the buffers\n  }\n\n  binary.removeBlobs(obj, writeEncoding);\n}\n\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n * @api public\n */\n\nfunction Decoder() {\n  this.reconstructor = null;\n}\n\n/**\n * Mix in `Emitter` with Decoder.\n */\n\nEmitter(Decoder.prototype);\n\n/**\n * Decodes an ecoded packet string into packet JSON.\n *\n * @param {String} obj - encoded packet\n * @return {Object} packet\n * @api public\n */\n\nDecoder.prototype.add = function(obj) {\n  var packet;\n  if (typeof obj === 'string') {\n    packet = decodeString(obj);\n    if (exports.BINARY_EVENT === packet.type || exports.BINARY_ACK === packet.type) { // binary packet's json\n      this.reconstructor = new BinaryReconstructor(packet);\n\n      // no attachments, labeled binary but no binary data to follow\n      if (this.reconstructor.reconPack.attachments === 0) {\n        this.emit('decoded', packet);\n      }\n    } else { // non-binary full packet\n      this.emit('decoded', packet);\n    }\n  }\n  else if (isBuf(obj) || obj.base64) { // raw binary data\n    if (!this.reconstructor) {\n      throw new Error('got binary data when not reconstructing a packet');\n    } else {\n      packet = this.reconstructor.takeBinaryData(obj);\n      if (packet) { // received final buffer\n        this.reconstructor = null;\n        this.emit('decoded', packet);\n      }\n    }\n  }\n  else {\n    throw new Error('Unknown type: ' + obj);\n  }\n};\n\n/**\n * Decode a packet String (JSON data)\n *\n * @param {String} str\n * @return {Object} packet\n * @api private\n */\n\nfunction decodeString(str) {\n  var i = 0;\n  // look up type\n  var p = {\n    type: Number(str.charAt(0))\n  };\n\n  if (null == exports.types[p.type]) {\n    return error('unknown packet type ' + p.type);\n  }\n\n  // look up attachments if type binary\n  if (exports.BINARY_EVENT === p.type || exports.BINARY_ACK === p.type) {\n    var buf = '';\n    while (str.charAt(++i) !== '-') {\n      buf += str.charAt(i);\n      if (i == str.length) break;\n    }\n    if (buf != Number(buf) || str.charAt(i) !== '-') {\n      throw new Error('Illegal attachments');\n    }\n    p.attachments = Number(buf);\n  }\n\n  // look up namespace (if any)\n  if ('/' === str.charAt(i + 1)) {\n    p.nsp = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (',' === c) break;\n      p.nsp += c;\n      if (i === str.length) break;\n    }\n  } else {\n    p.nsp = '/';\n  }\n\n  // look up id\n  var next = str.charAt(i + 1);\n  if ('' !== next && Number(next) == next) {\n    p.id = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (null == c || Number(c) != c) {\n        --i;\n        break;\n      }\n      p.id += str.charAt(i);\n      if (i === str.length) break;\n    }\n    p.id = Number(p.id);\n  }\n\n  // look up json data\n  if (str.charAt(++i)) {\n    var payload = tryParse(str.substr(i));\n    var isPayloadValid = payload !== false && (p.type === exports.ERROR || isArray(payload));\n    if (isPayloadValid) {\n      p.data = payload;\n    } else {\n      return error('invalid payload');\n    }\n  }\n\n\n  return p;\n}\n\nfunction tryParse(str) {\n  try {\n    return JSON.parse(str);\n  } catch(e){\n    return false;\n  }\n}\n\n/**\n * Deallocates a parser's resources\n *\n * @api public\n */\n\nDecoder.prototype.destroy = function() {\n  if (this.reconstructor) {\n    this.reconstructor.finishedReconstruction();\n  }\n};\n\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n * @api private\n */\n\nfunction BinaryReconstructor(packet) {\n  this.reconPack = packet;\n  this.buffers = [];\n}\n\n/**\n * Method to be called when binary data received from connection\n * after a BINARY_EVENT packet.\n *\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n * @return {null | Object} returns null if more binary data is expected or\n *   a reconstructed packet object if all buffers have been received.\n * @api private\n */\n\nBinaryReconstructor.prototype.takeBinaryData = function(binData) {\n  this.buffers.push(binData);\n  if (this.buffers.length === this.reconPack.attachments) { // done with buffer list\n    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n    this.finishedReconstruction();\n    return packet;\n  }\n  return null;\n};\n\n/**\n * Cleans up binary packet reconstruction variables.\n *\n * @api private\n */\n\nBinaryReconstructor.prototype.finishedReconstruction = function() {\n  this.reconPack = null;\n  this.buffers = [];\n};\n\nfunction error(msg) {\n  return {\n    type: exports.ERROR,\n    data: 'parser error: ' + msg\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/socket.io-parser/index.js\n// module id = 4\n// module chunks = 0","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/component-emitter/index.js\n// module id = 5\n// module chunks = 0","/*global Blob,File*/\n\n/**\n * Module requirements\n */\n\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof global.Blob === 'function' || toString.call(global.Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof global.File === 'function' || toString.call(global.File) === '[object FileConstructor]';\n\n/**\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n * Anything with blobs or files should be fed through removeBlobs before coming\n * here.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @api public\n */\n\nexports.deconstructPacket = function(packet) {\n  var buffers = [];\n  var packetData = packet.data;\n  var pack = packet;\n  pack.data = _deconstructPacket(packetData, buffers);\n  pack.attachments = buffers.length; // number of binary 'attachments'\n  return {packet: pack, buffers: buffers};\n};\n\nfunction _deconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (isBuf(data)) {\n    var placeholder = { _placeholder: true, num: buffers.length };\n    buffers.push(data);\n    return placeholder;\n  } else if (isArray(data)) {\n    var newData = new Array(data.length);\n    for (var i = 0; i < data.length; i++) {\n      newData[i] = _deconstructPacket(data[i], buffers);\n    }\n    return newData;\n  } else if (typeof data === 'object' && !(data instanceof Date)) {\n    var newData = {};\n    for (var key in data) {\n      newData[key] = _deconstructPacket(data[key], buffers);\n    }\n    return newData;\n  }\n  return data;\n}\n\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @api public\n */\n\nexports.reconstructPacket = function(packet, buffers) {\n  packet.data = _reconstructPacket(packet.data, buffers);\n  packet.attachments = undefined; // no longer useful\n  return packet;\n};\n\nfunction _reconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (data && data._placeholder) {\n    return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n  } else if (isArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      data[i] = _reconstructPacket(data[i], buffers);\n    }\n  } else if (typeof data === 'object') {\n    for (var key in data) {\n      data[key] = _reconstructPacket(data[key], buffers);\n    }\n  }\n\n  return data;\n}\n\n/**\n * Asynchronously removes Blobs or Files from data via\n * FileReader's readAsArrayBuffer method. Used before encoding\n * data as msgpack. Calls callback with the blobless data.\n *\n * @param {Object} data\n * @param {Function} callback\n * @api private\n */\n\nexports.removeBlobs = function(data, callback) {\n  function _removeBlobs(obj, curKey, containingObject) {\n    if (!obj) return obj;\n\n    // convert any blob\n    if ((withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File)) {\n      pendingBlobs++;\n\n      // async filereader\n      var fileReader = new FileReader();\n      fileReader.onload = function() { // this.result == arraybuffer\n        if (containingObject) {\n          containingObject[curKey] = this.result;\n        }\n        else {\n          bloblessData = this.result;\n        }\n\n        // if nothing pending its callback time\n        if(! --pendingBlobs) {\n          callback(bloblessData);\n        }\n      };\n\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n    } else if (isArray(obj)) { // handle array\n      for (var i = 0; i < obj.length; i++) {\n        _removeBlobs(obj[i], i, obj);\n      }\n    } else if (typeof obj === 'object' && !isBuf(obj)) { // and object\n      for (var key in obj) {\n        _removeBlobs(obj[key], key, obj);\n      }\n    }\n  }\n\n  var pendingBlobs = 0;\n  var bloblessData = data;\n  _removeBlobs(bloblessData);\n  if (!pendingBlobs) {\n    callback(bloblessData);\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/socket.io-parser/binary.js\n// module id = 6\n// module chunks = 0","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/isarray/index.js\n// module id = 7\n// module chunks = 0","\nmodule.exports = isBuf;\n\nvar withNativeBuffer = typeof global.Buffer === 'function' && typeof global.Buffer.isBuffer === 'function';\nvar withNativeArrayBuffer = typeof global.ArrayBuffer === 'function';\n\nvar isView = (function () {\n  if (withNativeArrayBuffer && typeof global.ArrayBuffer.isView === 'function') {\n    return global.ArrayBuffer.isView;\n  } else {\n    return function (obj) { return obj.buffer instanceof global.ArrayBuffer; };\n  }\n})();\n\n/**\n * Returns true if obj is a buffer or an arraybuffer.\n *\n * @api private\n */\n\nfunction isBuf(obj) {\n  return (withNativeBuffer && global.Buffer.isBuffer(obj)) ||\n          (withNativeArrayBuffer && (obj instanceof global.ArrayBuffer || isView(obj)));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/socket.io-parser/is-buffer.js\n// module id = 8\n// module chunks = 0","\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar eio = require('engine.io-client');\r\nvar Socket = require('./socket');\r\nvar Emitter = require('component-emitter');\r\nvar parser = require('socket.io-parser');\r\nvar on = require('./on');\r\nvar bind = require('component-bind');\r\nvar debug = require('debug')('socket.io-client:manager');\r\nvar indexOf = require('indexof');\r\nvar Backoff = require('backo2');\r\n\r\n/**\r\n * IE6+ hasOwnProperty\r\n */\r\n\r\nvar has = Object.prototype.hasOwnProperty;\r\n\r\n/**\r\n * Module exports\r\n */\r\n\r\nmodule.exports = Manager;\r\n\r\n/**\r\n * `Manager` constructor.\r\n *\r\n * @param {String} engine instance or engine uri/opts\r\n * @param {Object} options\r\n * @api public\r\n */\r\n\r\nfunction Manager (uri, opts) {\r\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\r\n  if (uri && ('object' === typeof uri)) {\r\n    opts = uri;\r\n    uri = undefined;\r\n  }\r\n  opts = opts || {};\r\n\r\n  opts.path = opts.path || '/socket.io';\r\n  this.nsps = {};\r\n  this.subs = [];\r\n  this.opts = opts;\r\n  this.reconnection(opts.reconnection !== false);\r\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\r\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\r\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\r\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\r\n  this.backoff = new Backoff({\r\n    min: this.reconnectionDelay(),\r\n    max: this.reconnectionDelayMax(),\r\n    jitter: this.randomizationFactor()\r\n  });\r\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\r\n  this.readyState = 'closed';\r\n  this.uri = uri;\r\n  this.connecting = [];\r\n  this.lastPing = null;\r\n  this.encoding = false;\r\n  this.packetBuffer = [];\r\n  var _parser = opts.parser || parser;\r\n  this.encoder = new _parser.Encoder();\r\n  this.decoder = new _parser.Decoder();\r\n  this.autoConnect = opts.autoConnect !== false;\r\n  if (this.autoConnect) this.open();\r\n}\r\n\r\n/**\r\n * Propagate given event to sockets and emit on `this`\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.emitAll = function () {\r\n  this.emit.apply(this, arguments);\r\n  for (var nsp in this.nsps) {\r\n    if (has.call(this.nsps, nsp)) {\r\n      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Update `socket.id` of all sockets\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.updateSocketIds = function () {\r\n  for (var nsp in this.nsps) {\r\n    if (has.call(this.nsps, nsp)) {\r\n      this.nsps[nsp].id = this.generateId(nsp);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * generate `socket.id` for the given `nsp`\r\n *\r\n * @param {String} nsp\r\n * @return {String}\r\n * @api private\r\n */\r\n\r\nManager.prototype.generateId = function (nsp) {\r\n  return (nsp === '/' ? '' : (nsp + '#')) + this.engine.id;\r\n};\r\n\r\n/**\r\n * Mix in `Emitter`.\r\n */\r\n\r\nEmitter(Manager.prototype);\r\n\r\n/**\r\n * Sets the `reconnection` config.\r\n *\r\n * @param {Boolean} true/false if it should automatically reconnect\r\n * @return {Manager} self or value\r\n * @api public\r\n */\r\n\r\nManager.prototype.reconnection = function (v) {\r\n  if (!arguments.length) return this._reconnection;\r\n  this._reconnection = !!v;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sets the reconnection attempts config.\r\n *\r\n * @param {Number} max reconnection attempts before giving up\r\n * @return {Manager} self or value\r\n * @api public\r\n */\r\n\r\nManager.prototype.reconnectionAttempts = function (v) {\r\n  if (!arguments.length) return this._reconnectionAttempts;\r\n  this._reconnectionAttempts = v;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sets the delay between reconnections.\r\n *\r\n * @param {Number} delay\r\n * @return {Manager} self or value\r\n * @api public\r\n */\r\n\r\nManager.prototype.reconnectionDelay = function (v) {\r\n  if (!arguments.length) return this._reconnectionDelay;\r\n  this._reconnectionDelay = v;\r\n  this.backoff && this.backoff.setMin(v);\r\n  return this;\r\n};\r\n\r\nManager.prototype.randomizationFactor = function (v) {\r\n  if (!arguments.length) return this._randomizationFactor;\r\n  this._randomizationFactor = v;\r\n  this.backoff && this.backoff.setJitter(v);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sets the maximum delay between reconnections.\r\n *\r\n * @param {Number} delay\r\n * @return {Manager} self or value\r\n * @api public\r\n */\r\n\r\nManager.prototype.reconnectionDelayMax = function (v) {\r\n  if (!arguments.length) return this._reconnectionDelayMax;\r\n  this._reconnectionDelayMax = v;\r\n  this.backoff && this.backoff.setMax(v);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sets the connection timeout. `false` to disable\r\n *\r\n * @return {Manager} self or value\r\n * @api public\r\n */\r\n\r\nManager.prototype.timeout = function (v) {\r\n  if (!arguments.length) return this._timeout;\r\n  this._timeout = v;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Starts trying to reconnect if reconnection is enabled and we have not\r\n * started reconnecting yet\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.maybeReconnectOnOpen = function () {\r\n  // Only try to reconnect if it's the first time we're connecting\r\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\r\n    // keeps reconnection from firing twice for the same reconnection loop\r\n    this.reconnect();\r\n  }\r\n};\r\n\r\n/**\r\n * Sets the current transport `socket`.\r\n *\r\n * @param {Function} optional, callback\r\n * @return {Manager} self\r\n * @api public\r\n */\r\n\r\nManager.prototype.open =\r\nManager.prototype.connect = function (fn, opts) {\r\n\r\n  if (~this.readyState.indexOf('open')) return this;\r\n\r\n\r\n  this.engine = eio(this.uri, this.opts);\r\n  var socket = this.engine;\r\n  var self = this;\r\n  this.readyState = 'opening';\r\n  this.skipReconnect = false;\r\n\r\n  // emit `open`\r\n  var openSub = on(socket, 'open', function () {\r\n    self.onopen();\r\n    fn && fn();\r\n  });\r\n\r\n  // emit `connect_error`\r\n  var errorSub = on(socket, 'error', function (data) {\r\n\r\n    self.cleanup();\r\n    self.readyState = 'closed';\r\n    self.emitAll('connect_error', data);\r\n    if (fn) {\r\n      var err = new Error('Connection error');\r\n      err.data = data;\r\n      fn(err);\r\n    } else {\r\n      // Only do this if there is no fn to handle the error\r\n      self.maybeReconnectOnOpen();\r\n    }\r\n  });\r\n\r\n  // emit `connect_timeout`\r\n  if (false !== this._timeout) {\r\n    var timeout = this._timeout;\r\n\r\n\r\n    // set timer\r\n    var timer = setTimeout(function () {\r\n\r\n      openSub.destroy();\r\n      socket.close();\r\n      socket.emit('error', 'timeout');\r\n      self.emitAll('connect_timeout', timeout);\r\n    }, timeout);\r\n\r\n    this.subs.push({\r\n      destroy: function () {\r\n        clearTimeout(timer);\r\n      }\r\n    });\r\n  }\r\n\r\n  this.subs.push(openSub);\r\n  this.subs.push(errorSub);\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Called upon transport open.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.onopen = function () {\r\n\r\n\r\n  // clear old subs\r\n  this.cleanup();\r\n\r\n  // mark as open\r\n  this.readyState = 'open';\r\n  this.emit('open');\r\n\r\n  // add new subs\r\n  var socket = this.engine;\r\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\r\n  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\r\n  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\r\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\r\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\r\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\r\n};\r\n\r\n/**\r\n * Called upon a ping.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.onping = function () {\r\n  this.lastPing = new Date();\r\n  this.emitAll('ping');\r\n};\r\n\r\n/**\r\n * Called upon a packet.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.onpong = function () {\r\n  this.emitAll('pong', new Date() - this.lastPing);\r\n};\r\n\r\n/**\r\n * Called with data.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.ondata = function (data) {\r\n  this.decoder.add(data);\r\n};\r\n\r\n/**\r\n * Called when parser fully decodes a packet.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.ondecoded = function (packet) {\r\n  this.emit('packet', packet);\r\n};\r\n\r\n/**\r\n * Called upon socket error.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.onerror = function (err) {\r\n\r\n  this.emitAll('error', err);\r\n};\r\n\r\n/**\r\n * Creates a new socket for the given `nsp`.\r\n *\r\n * @return {Socket}\r\n * @api public\r\n */\r\n\r\nManager.prototype.socket = function (nsp, opts) {\r\n  var socket = this.nsps[nsp];\r\n  if (!socket) {\r\n    socket = new Socket(this, nsp, opts);\r\n    this.nsps[nsp] = socket;\r\n    var self = this;\r\n    socket.on('connecting', onConnecting);\r\n    socket.on('connect', function () {\r\n      socket.id = self.generateId(nsp);\r\n    });\r\n\r\n    if (this.autoConnect) {\r\n      // manually call here since connecting event is fired before listening\r\n      onConnecting();\r\n    }\r\n  }\r\n\r\n  function onConnecting () {\r\n    if (!~indexOf(self.connecting, socket)) {\r\n      self.connecting.push(socket);\r\n    }\r\n  }\r\n\r\n  return socket;\r\n};\r\n\r\n/**\r\n * Called upon a socket close.\r\n *\r\n * @param {Socket} socket\r\n */\r\n\r\nManager.prototype.destroy = function (socket) {\r\n  var index = indexOf(this.connecting, socket);\r\n  if (~index) this.connecting.splice(index, 1);\r\n  if (this.connecting.length) return;\r\n\r\n  this.close();\r\n};\r\n\r\n/**\r\n * Writes a packet.\r\n *\r\n * @param {Object} packet\r\n * @api private\r\n */\r\n\r\nManager.prototype.packet = function (packet) {\r\n\r\n  var self = this;\r\n  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;\r\n\r\n  if (!self.encoding) {\r\n    // encode, then write to engine with result\r\n    self.encoding = true;\r\n    this.encoder.encode(packet, function (encodedPackets) {\r\n      for (var i = 0; i < encodedPackets.length; i++) {\r\n        self.engine.write(encodedPackets[i], packet.options);\r\n      }\r\n      self.encoding = false;\r\n      self.processPacketQueue();\r\n    });\r\n  } else { // add packet to the queue\r\n    self.packetBuffer.push(packet);\r\n  }\r\n};\r\n\r\n/**\r\n * If packet buffer is non-empty, begins encoding the\r\n * next packet in line.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.processPacketQueue = function () {\r\n  if (this.packetBuffer.length > 0 && !this.encoding) {\r\n    var pack = this.packetBuffer.shift();\r\n    this.packet(pack);\r\n  }\r\n};\r\n\r\n/**\r\n * Clean up transport subscriptions and packet buffer.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.cleanup = function () {\r\n\r\n\r\n  var subsLength = this.subs.length;\r\n  for (var i = 0; i < subsLength; i++) {\r\n    var sub = this.subs.shift();\r\n    sub.destroy();\r\n  }\r\n\r\n  this.packetBuffer = [];\r\n  this.encoding = false;\r\n  this.lastPing = null;\r\n\r\n  this.decoder.destroy();\r\n};\r\n\r\n/**\r\n * Close the current socket.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.close =\r\nManager.prototype.disconnect = function () {\r\n\r\n  this.skipReconnect = true;\r\n  this.reconnecting = false;\r\n  if ('opening' === this.readyState) {\r\n    // `onclose` will not fire because\r\n    // an open event never happened\r\n    this.cleanup();\r\n  }\r\n  this.backoff.reset();\r\n  this.readyState = 'closed';\r\n  if (this.engine) this.engine.close();\r\n};\r\n\r\n/**\r\n * Called upon engine close.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.onclose = function (reason) {\r\n\r\n\r\n  this.cleanup();\r\n  this.backoff.reset();\r\n  this.readyState = 'closed';\r\n  this.emit('close', reason);\r\n\r\n  if (this._reconnection && !this.skipReconnect) {\r\n    this.reconnect();\r\n  }\r\n};\r\n\r\n/**\r\n * Attempt a reconnection.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.reconnect = function () {\r\n  if (this.reconnecting || this.skipReconnect) return this;\r\n\r\n  var self = this;\r\n\r\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\r\n\r\n    this.backoff.reset();\r\n    this.emitAll('reconnect_failed');\r\n    this.reconnecting = false;\r\n  } else {\r\n    var delay = this.backoff.duration();\r\n\r\n\r\n    this.reconnecting = true;\r\n    var timer = setTimeout(function () {\r\n      if (self.skipReconnect) return;\r\n\r\n\r\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\r\n      self.emitAll('reconnecting', self.backoff.attempts);\r\n\r\n      // check again for the case socket closed in above events\r\n      if (self.skipReconnect) return;\r\n\r\n      self.open(function (err) {\r\n        if (err) {\r\n\r\n          self.reconnecting = false;\r\n          self.reconnect();\r\n          self.emitAll('reconnect_error', err.data);\r\n        } else {\r\n\r\n          self.onreconnect();\r\n        }\r\n      });\r\n    }, delay);\r\n\r\n    this.subs.push({\r\n      destroy: function () {\r\n        clearTimeout(timer);\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\n/**\r\n * Called upon successful reconnect.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.onreconnect = function () {\r\n  var attempt = this.backoff.attempts;\r\n  this.reconnecting = false;\r\n  this.backoff.reset();\r\n  this.updateSocketIds();\r\n  this.emitAll('reconnect', attempt);\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib/manager.js","\r\nmodule.exports = require('./socket');\r\n\r\n/**\r\n * Exports parser\r\n *\r\n * @api public\r\n *\r\n */\r\nmodule.exports.parser = require('engine.io-parser');\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/lib/index.js\n// module id = 10\n// module chunks = 0","/**\r\n * Module dependencies.\r\n */\r\n\r\nvar transports = require('./transports/index');\r\nvar Emitter = require('component-emitter');\r\nvar debug = require('debug')('engine.io-client:socket');\r\nvar index = require('indexof');\r\nvar parser = require('engine.io-parser');\r\nvar parseuri = require('parseuri');\r\nvar parseqs = require('parseqs');\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = Socket;\r\n\r\n/**\r\n * Socket constructor.\r\n *\r\n * @param {String|Object} uri or options\r\n * @param {Object} options\r\n * @api public\r\n */\r\n\r\nfunction Socket (uri, opts) {\r\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\r\n\r\n  opts = opts || {};\r\n\r\n  if (uri && 'object' === typeof uri) {\r\n    opts = uri;\r\n    uri = null;\r\n  }\r\n\r\n  if (uri) {\r\n    uri = parseuri(uri);\r\n    opts.hostname = uri.host;\r\n    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\r\n    opts.port = uri.port;\r\n    if (uri.query) opts.query = uri.query;\r\n  } else if (opts.host) {\r\n    opts.hostname = parseuri(opts.host).host;\r\n  }\r\n\r\n  this.secure = null != opts.secure ? opts.secure\r\n    : (global.location && 'https:' === location.protocol);\r\n\r\n  if (opts.hostname && !opts.port) {\r\n    // if no port is specified manually, use the protocol default\r\n    opts.port = this.secure ? '443' : '80';\r\n  }\r\n\r\n  this.agent = opts.agent || false;\r\n  this.hostname = opts.hostname ||\r\n    (global.location ? location.hostname : 'localhost');\r\n  this.port = opts.port || (global.location && location.port\r\n      ? location.port\r\n      : (this.secure ? 443 : 80));\r\n  this.query = opts.query || {};\r\n  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);\r\n  this.upgrade = false !== opts.upgrade;\r\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\r\n  this.forceJSONP = !!opts.forceJSONP;\r\n  this.jsonp = false !== opts.jsonp;\r\n  this.forceBase64 = !!opts.forceBase64;\r\n  this.enablesXDR = !!opts.enablesXDR;\r\n  this.timestampParam = opts.timestampParam || 't';\r\n  this.timestampRequests = opts.timestampRequests;\r\n  this.transports = opts.transports || ['polling', 'websocket'];\r\n  this.transportOptions = opts.transportOptions || {};\r\n  this.readyState = '';\r\n  this.writeBuffer = [];\r\n  this.prevBufferLen = 0;\r\n  this.policyPort = opts.policyPort || 843;\r\n  this.rememberUpgrade = opts.rememberUpgrade || false;\r\n  this.binaryType = null;\r\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\r\n  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;\r\n\r\n  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\r\n  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\r\n    this.perMessageDeflate.threshold = 1024;\r\n  }\r\n\r\n  // SSL options for Node.js client\r\n  this.pfx = opts.pfx || null;\r\n  this.key = opts.key || null;\r\n  this.passphrase = opts.passphrase || null;\r\n  this.cert = opts.cert || null;\r\n  this.ca = opts.ca || null;\r\n  this.ciphers = opts.ciphers || null;\r\n  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;\r\n  this.forceNode = !!opts.forceNode;\r\n\r\n  // other options for Node.js client\r\n  var freeGlobal = typeof global === 'object' && global;\r\n  if (freeGlobal.global === freeGlobal) {\r\n    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\r\n      this.extraHeaders = opts.extraHeaders;\r\n    }\r\n\r\n    if (opts.localAddress) {\r\n      this.localAddress = opts.localAddress;\r\n    }\r\n  }\r\n\r\n  // set on handshake\r\n  this.id = null;\r\n  this.upgrades = null;\r\n  this.pingInterval = null;\r\n  this.pingTimeout = null;\r\n\r\n  // set on heartbeat\r\n  this.pingIntervalTimer = null;\r\n  this.pingTimeoutTimer = null;\r\n\r\n  this.open();\r\n}\r\n\r\nSocket.priorWebsocketSuccess = false;\r\n\r\n/**\r\n * Mix in `Emitter`.\r\n */\r\n\r\nEmitter(Socket.prototype);\r\n\r\n/**\r\n * Protocol version.\r\n *\r\n * @api public\r\n */\r\n\r\nSocket.protocol = parser.protocol; // this is an int\r\n\r\n/**\r\n * Expose deps for legacy compatibility\r\n * and standalone browser access.\r\n */\r\n\r\nSocket.Socket = Socket;\r\nSocket.Transport = require('./transport');\r\nSocket.transports = require('./transports/index');\r\nSocket.parser = require('engine.io-parser');\r\n\r\n/**\r\n * Creates transport of the given type.\r\n *\r\n * @param {String} transport name\r\n * @return {Transport}\r\n * @api private\r\n */\r\n\r\nSocket.prototype.createTransport = function (name) {\r\n\r\n  var query = clone(this.query);\r\n\r\n  // append engine.io protocol identifier\r\n  query.EIO = parser.protocol;\r\n\r\n  // transport name\r\n  query.transport = name;\r\n\r\n  // per-transport options\r\n  var options = this.transportOptions[name] || {};\r\n\r\n  // session id if we already have one\r\n  if (this.id) query.sid = this.id;\r\n\r\n  var transport = new transports[name]({\r\n    query: query,\r\n    socket: this,\r\n    agent: options.agent || this.agent,\r\n    hostname: options.hostname || this.hostname,\r\n    port: options.port || this.port,\r\n    secure: options.secure || this.secure,\r\n    path: options.path || this.path,\r\n    forceJSONP: options.forceJSONP || this.forceJSONP,\r\n    jsonp: options.jsonp || this.jsonp,\r\n    forceBase64: options.forceBase64 || this.forceBase64,\r\n    enablesXDR: options.enablesXDR || this.enablesXDR,\r\n    timestampRequests: options.timestampRequests || this.timestampRequests,\r\n    timestampParam: options.timestampParam || this.timestampParam,\r\n    policyPort: options.policyPort || this.policyPort,\r\n    pfx: options.pfx || this.pfx,\r\n    key: options.key || this.key,\r\n    passphrase: options.passphrase || this.passphrase,\r\n    cert: options.cert || this.cert,\r\n    ca: options.ca || this.ca,\r\n    ciphers: options.ciphers || this.ciphers,\r\n    rejectUnauthorized: options.rejectUnauthorized || this.rejectUnauthorized,\r\n    perMessageDeflate: options.perMessageDeflate || this.perMessageDeflate,\r\n    extraHeaders: options.extraHeaders || this.extraHeaders,\r\n    forceNode: options.forceNode || this.forceNode,\r\n    localAddress: options.localAddress || this.localAddress,\r\n    requestTimeout: options.requestTimeout || this.requestTimeout,\r\n    protocols: options.protocols || void (0)\r\n  });\r\n\r\n  return transport;\r\n};\r\n\r\nfunction clone (obj) {\r\n  var o = {};\r\n  for (var i in obj) {\r\n    if (obj.hasOwnProperty(i)) {\r\n      o[i] = obj[i];\r\n    }\r\n  }\r\n  return o;\r\n}\r\n\r\n/**\r\n * Initializes transport to use and starts probe.\r\n *\r\n * @api private\r\n */\r\nSocket.prototype.open = function () {\r\n  var transport;\r\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {\r\n    transport = 'websocket';\r\n  } else if (0 === this.transports.length) {\r\n    // Emit error on next tick so it can be listened to\r\n    var self = this;\r\n    setTimeout(function () {\r\n      self.emit('error', 'No transports available');\r\n    }, 0);\r\n    return;\r\n  } else {\r\n    transport = this.transports[0];\r\n  }\r\n  this.readyState = 'opening';\r\n\r\n  // Retry with the next transport if the transport is disabled (jsonp: false)\r\n  try {\r\n    transport = this.createTransport(transport);\r\n  } catch (e) {\r\n    this.transports.shift();\r\n    this.open();\r\n    return;\r\n  }\r\n\r\n  transport.open();\r\n  this.setTransport(transport);\r\n};\r\n\r\n/**\r\n * Sets the current transport. Disables the existing one (if any).\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.setTransport = function (transport) {\r\n\r\n  var self = this;\r\n\r\n  if (this.transport) {\r\n\r\n    this.transport.removeAllListeners();\r\n  }\r\n\r\n  // set up transport\r\n  this.transport = transport;\r\n\r\n  // set up transport listeners\r\n  transport\r\n  .on('drain', function () {\r\n    self.onDrain();\r\n  })\r\n  .on('packet', function (packet) {\r\n    self.onPacket(packet);\r\n  })\r\n  .on('error', function (e) {\r\n    self.onError(e);\r\n  })\r\n  .on('close', function () {\r\n    self.onClose('transport close');\r\n  });\r\n};\r\n\r\n/**\r\n * Probes a transport.\r\n *\r\n * @param {String} transport name\r\n * @api private\r\n */\r\n\r\nSocket.prototype.probe = function (name) {\r\n\r\n  var transport = this.createTransport(name, { probe: 1 });\r\n  var failed = false;\r\n  var self = this;\r\n\r\n  Socket.priorWebsocketSuccess = false;\r\n\r\n  function onTransportOpen () {\r\n    if (self.onlyBinaryUpgrades) {\r\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\r\n      failed = failed || upgradeLosesBinary;\r\n    }\r\n    if (failed) return;\r\n\r\n\r\n    transport.send([{ type: 'ping', data: 'probe' }]);\r\n    transport.once('packet', function (msg) {\r\n      if (failed) return;\r\n      if ('pong' === msg.type && 'probe' === msg.data) {\r\n\r\n        self.upgrading = true;\r\n        self.emit('upgrading', transport);\r\n        if (!transport) return;\r\n        Socket.priorWebsocketSuccess = 'websocket' === transport.name;\r\n\r\n\r\n        self.transport.pause(function () {\r\n          if (failed) return;\r\n          if ('closed' === self.readyState) return;\r\n\r\n\r\n          cleanup();\r\n\r\n          self.setTransport(transport);\r\n          transport.send([{ type: 'upgrade' }]);\r\n          self.emit('upgrade', transport);\r\n          transport = null;\r\n          self.upgrading = false;\r\n          self.flush();\r\n        });\r\n      } else {\r\n\r\n        var err = new Error('probe error');\r\n        err.transport = transport.name;\r\n        self.emit('upgradeError', err);\r\n      }\r\n    });\r\n  }\r\n\r\n  function freezeTransport () {\r\n    if (failed) return;\r\n\r\n    // Any callback called by transport should be ignored since now\r\n    failed = true;\r\n\r\n    cleanup();\r\n\r\n    transport.close();\r\n    transport = null;\r\n  }\r\n\r\n  // Handle any error that happens while probing\r\n  function onerror (err) {\r\n    var error = new Error('probe error: ' + err);\r\n    error.transport = transport.name;\r\n\r\n    freezeTransport();\r\n\r\n\r\n\r\n    self.emit('upgradeError', error);\r\n  }\r\n\r\n  function onTransportClose () {\r\n    onerror('transport closed');\r\n  }\r\n\r\n  // When the socket is closed while we're probing\r\n  function onclose () {\r\n    onerror('socket closed');\r\n  }\r\n\r\n  // When the socket is upgraded while we're probing\r\n  function onupgrade (to) {\r\n    if (transport && to.name !== transport.name) {\r\n\r\n      freezeTransport();\r\n    }\r\n  }\r\n\r\n  // Remove all listeners on the transport and on self\r\n  function cleanup () {\r\n    transport.removeListener('open', onTransportOpen);\r\n    transport.removeListener('error', onerror);\r\n    transport.removeListener('close', onTransportClose);\r\n    self.removeListener('close', onclose);\r\n    self.removeListener('upgrading', onupgrade);\r\n  }\r\n\r\n  transport.once('open', onTransportOpen);\r\n  transport.once('error', onerror);\r\n  transport.once('close', onTransportClose);\r\n\r\n  this.once('close', onclose);\r\n  this.once('upgrading', onupgrade);\r\n\r\n  transport.open();\r\n};\r\n\r\n/**\r\n * Called when connection is deemed open.\r\n *\r\n * @api public\r\n */\r\n\r\nSocket.prototype.onOpen = function () {\r\n\r\n  this.readyState = 'open';\r\n  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\r\n  this.emit('open');\r\n  this.flush();\r\n\r\n  // we check for `readyState` in case an `open`\r\n  // listener already closed the socket\r\n  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\r\n\r\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\r\n      this.probe(this.upgrades[i]);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Handles a packet.\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onPacket = function (packet) {\r\n  if ('opening' === this.readyState || 'open' === this.readyState ||\r\n      'closing' === this.readyState) {\r\n\r\n\r\n    this.emit('packet', packet);\r\n\r\n    // Socket is live - any packet counts\r\n    this.emit('heartbeat');\r\n\r\n    switch (packet.type) {\r\n      case 'open':\r\n        this.onHandshake(JSON.parse(packet.data));\r\n        break;\r\n\r\n      case 'pong':\r\n        this.setPing();\r\n        this.emit('pong');\r\n        break;\r\n\r\n      case 'error':\r\n        var err = new Error('server error');\r\n        err.code = packet.data;\r\n        this.onError(err);\r\n        break;\r\n\r\n      case 'message':\r\n        this.emit('data', packet.data);\r\n        this.emit('message', packet.data);\r\n        break;\r\n    }\r\n  } else {\r\n\r\n  }\r\n};\r\n\r\n/**\r\n * Called upon handshake completion.\r\n *\r\n * @param {Object} handshake obj\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onHandshake = function (data) {\r\n  this.emit('handshake', data);\r\n  this.id = data.sid;\r\n  this.transport.query.sid = data.sid;\r\n  this.upgrades = this.filterUpgrades(data.upgrades);\r\n  this.pingInterval = data.pingInterval;\r\n  this.pingTimeout = data.pingTimeout;\r\n  this.onOpen();\r\n  // In case open handler closes socket\r\n  if ('closed' === this.readyState) return;\r\n  this.setPing();\r\n\r\n  // Prolong liveness of socket on heartbeat\r\n  this.removeListener('heartbeat', this.onHeartbeat);\r\n  this.on('heartbeat', this.onHeartbeat);\r\n};\r\n\r\n/**\r\n * Resets ping timeout.\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onHeartbeat = function (timeout) {\r\n  clearTimeout(this.pingTimeoutTimer);\r\n  var self = this;\r\n  self.pingTimeoutTimer = setTimeout(function () {\r\n    if ('closed' === self.readyState) return;\r\n    self.onClose('ping timeout');\r\n  }, timeout || (self.pingInterval + self.pingTimeout));\r\n};\r\n\r\n/**\r\n * Pings server every `this.pingInterval` and expects response\r\n * within `this.pingTimeout` or closes connection.\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.setPing = function () {\r\n  var self = this;\r\n  clearTimeout(self.pingIntervalTimer);\r\n  self.pingIntervalTimer = setTimeout(function () {\r\n\r\n    self.ping();\r\n    self.onHeartbeat(self.pingTimeout);\r\n  }, self.pingInterval);\r\n};\r\n\r\n/**\r\n* Sends a ping packet.\r\n*\r\n* @api private\r\n*/\r\n\r\nSocket.prototype.ping = function () {\r\n  var self = this;\r\n  this.sendPacket('ping', function () {\r\n    self.emit('ping');\r\n  });\r\n};\r\n\r\n/**\r\n * Called on `drain` event\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onDrain = function () {\r\n  this.writeBuffer.splice(0, this.prevBufferLen);\r\n\r\n  // setting prevBufferLen = 0 is very important\r\n  // for example, when upgrading, upgrade packet is sent over,\r\n  // and a nonzero prevBufferLen could cause problems on `drain`\r\n  this.prevBufferLen = 0;\r\n\r\n  if (0 === this.writeBuffer.length) {\r\n    this.emit('drain');\r\n  } else {\r\n    this.flush();\r\n  }\r\n};\r\n\r\n/**\r\n * Flush write buffers.\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.flush = function () {\r\n  if ('closed' !== this.readyState && this.transport.writable &&\r\n    !this.upgrading && this.writeBuffer.length) {\r\n\r\n    this.transport.send(this.writeBuffer);\r\n    // keep track of current length of writeBuffer\r\n    // splice writeBuffer and callbackBuffer on `drain`\r\n    this.prevBufferLen = this.writeBuffer.length;\r\n    this.emit('flush');\r\n  }\r\n};\r\n\r\n/**\r\n * Sends a message.\r\n *\r\n * @param {String} message.\r\n * @param {Function} callback function.\r\n * @param {Object} options.\r\n * @return {Socket} for chaining.\r\n * @api public\r\n */\r\n\r\nSocket.prototype.write =\r\nSocket.prototype.send = function (msg, options, fn) {\r\n  this.sendPacket('message', msg, options, fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sends a packet.\r\n *\r\n * @param {String} packet type.\r\n * @param {String} data.\r\n * @param {Object} options.\r\n * @param {Function} callback function.\r\n * @api private\r\n */\r\n\r\nSocket.prototype.sendPacket = function (type, data, options, fn) {\r\n  if ('function' === typeof data) {\r\n    fn = data;\r\n    data = undefined;\r\n  }\r\n\r\n  if ('function' === typeof options) {\r\n    fn = options;\r\n    options = null;\r\n  }\r\n\r\n  if ('closing' === this.readyState || 'closed' === this.readyState) {\r\n    return;\r\n  }\r\n\r\n  options = options || {};\r\n  options.compress = false !== options.compress;\r\n\r\n  var packet = {\r\n    type: type,\r\n    data: data,\r\n    options: options\r\n  };\r\n  this.emit('packetCreate', packet);\r\n  this.writeBuffer.push(packet);\r\n  if (fn) this.once('flush', fn);\r\n  this.flush();\r\n};\r\n\r\n/**\r\n * Closes the connection.\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.close = function () {\r\n  if ('opening' === this.readyState || 'open' === this.readyState) {\r\n    this.readyState = 'closing';\r\n\r\n    var self = this;\r\n\r\n    if (this.writeBuffer.length) {\r\n      this.once('drain', function () {\r\n        if (this.upgrading) {\r\n          waitForUpgrade();\r\n        } else {\r\n          close();\r\n        }\r\n      });\r\n    } else if (this.upgrading) {\r\n      waitForUpgrade();\r\n    } else {\r\n      close();\r\n    }\r\n  }\r\n\r\n  function close () {\r\n    self.onClose('forced close');\r\n\r\n    self.transport.close();\r\n  }\r\n\r\n  function cleanupAndClose () {\r\n    self.removeListener('upgrade', cleanupAndClose);\r\n    self.removeListener('upgradeError', cleanupAndClose);\r\n    close();\r\n  }\r\n\r\n  function waitForUpgrade () {\r\n    // wait for upgrade to finish since we can't send packets while pausing a transport\r\n    self.once('upgrade', cleanupAndClose);\r\n    self.once('upgradeError', cleanupAndClose);\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Called upon transport error\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onError = function (err) {\r\n\r\n  Socket.priorWebsocketSuccess = false;\r\n  this.emit('error', err);\r\n  this.onClose('transport error', err);\r\n};\r\n\r\n/**\r\n * Called upon transport close.\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onClose = function (reason, desc) {\r\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\r\n\r\n    var self = this;\r\n\r\n    // clear timers\r\n    clearTimeout(this.pingIntervalTimer);\r\n    clearTimeout(this.pingTimeoutTimer);\r\n\r\n    // stop event from firing again for transport\r\n    this.transport.removeAllListeners('close');\r\n\r\n    // ensure transport won't stay open\r\n    this.transport.close();\r\n\r\n    // ignore further transport communication\r\n    this.transport.removeAllListeners();\r\n\r\n    // set ready state\r\n    this.readyState = 'closed';\r\n\r\n    // clear session id\r\n    this.id = null;\r\n\r\n    // emit close event\r\n    this.emit('close', reason, desc);\r\n\r\n    // clean buffers after, so users can still\r\n    // grab the buffers on `close` event\r\n    self.writeBuffer = [];\r\n    self.prevBufferLen = 0;\r\n  }\r\n};\r\n\r\n/**\r\n * Filters upgrades, returning only those matching client transports.\r\n *\r\n * @param {Array} server upgrades\r\n * @api private\r\n *\r\n */\r\n\r\nSocket.prototype.filterUpgrades = function (upgrades) {\r\n  var filteredUpgrades = [];\r\n  for (var i = 0, j = upgrades.length; i < j; i++) {\r\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\r\n  }\r\n  return filteredUpgrades;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/lib/socket.js\n// module id = 11\n// module chunks = 0","/**\r\n * Module dependencies\r\n */\r\n\r\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\r\nvar XHR = require('./polling-xhr');\r\nvar JSONP = require('./polling-jsonp');\r\nvar websocket = require('./websocket');\r\n\r\n/**\r\n * Export transports.\r\n */\r\n\r\nexports.polling = polling;\r\nexports.websocket = websocket;\r\n\r\n/**\r\n * Polling transport polymorphic constructor.\r\n * Decides on xhr vs jsonp based on feature detection.\r\n *\r\n * @api private\r\n */\r\n\r\nfunction polling (opts) {\r\n  var xhr;\r\n  var xd = false;\r\n  var xs = false;\r\n  var jsonp = false !== opts.jsonp;\r\n\r\n  if (global.location) {\r\n    var isSSL = 'https:' === location.protocol;\r\n    var port = location.port;\r\n\r\n    // some user agents have empty `location.port`\r\n    if (!port) {\r\n      port = isSSL ? 443 : 80;\r\n    }\r\n\r\n    xd = opts.hostname !== location.hostname || port !== opts.port;\r\n    xs = opts.secure !== isSSL;\r\n  }\r\n\r\n  opts.xdomain = xd;\r\n  opts.xscheme = xs;\r\n  xhr = new XMLHttpRequest(opts);\r\n\r\n  if ('open' in xhr && !opts.forceJSONP) {\r\n    return new XHR(opts);\r\n  } else {\r\n    if (!jsonp) throw new Error('JSONP disabled');\r\n    return new JSONP(opts);\r\n  }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/lib/transports/index.js\n// module id = 12\n// module chunks = 0","// browser shim for xmlhttprequest module\r\n\r\nvar hasCORS = require('has-cors');\r\n\r\nmodule.exports = function (opts) {\r\n  var xdomain = opts.xdomain;\r\n\r\n  // scheme must be same when usign XDomainRequest\r\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\r\n  var xscheme = opts.xscheme;\r\n\r\n  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\r\n  // https://github.com/Automattic/engine.io-client/pull/217\r\n  var enablesXDR = opts.enablesXDR;\r\n\r\n  // XMLHttpRequest can be disabled on IE\r\n  try {\r\n    if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\r\n      return new XMLHttpRequest();\r\n    }\r\n  } catch (e) { }\r\n\r\n  // Use XDomainRequest for IE8 if enablesXDR is true\r\n  // because loading bar keeps flashing when using jsonp-polling\r\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\r\n  try {\r\n    if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {\r\n      return new XDomainRequest();\r\n    }\r\n  } catch (e) { }\r\n\r\n  if (!xdomain) {\r\n    try {\r\n      return new global[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');\r\n    } catch (e) { }\r\n  }\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/lib/xmlhttprequest.js\n// module id = 13\n// module chunks = 0","\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/has-cors/index.js\n// module id = 14\n// module chunks = 0","/**\r\n * Module requirements.\r\n */\r\n\r\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\r\nvar Polling = require('./polling');\r\nvar Emitter = require('component-emitter');\r\nvar inherit = require('component-inherit');\r\nvar debug = require('debug')('engine.io-client:polling-xhr');\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = XHR;\r\nmodule.exports.Request = Request;\r\n\r\n/**\r\n * Empty function\r\n */\r\n\r\nfunction empty () {}\r\n\r\n/**\r\n * XHR Polling constructor.\r\n *\r\n * @param {Object} opts\r\n * @api public\r\n */\r\n\r\nfunction XHR (opts) {\r\n  Polling.call(this, opts);\r\n  this.requestTimeout = opts.requestTimeout;\r\n  this.extraHeaders = opts.extraHeaders;\r\n\r\n  if (global.location) {\r\n    var isSSL = 'https:' === location.protocol;\r\n    var port = location.port;\r\n\r\n    // some user agents have empty `location.port`\r\n    if (!port) {\r\n      port = isSSL ? 443 : 80;\r\n    }\r\n\r\n    this.xd = opts.hostname !== global.location.hostname ||\r\n      port !== opts.port;\r\n    this.xs = opts.secure !== isSSL;\r\n  }\r\n}\r\n\r\n/**\r\n * Inherits from Polling.\r\n */\r\n\r\ninherit(XHR, Polling);\r\n\r\n/**\r\n * XHR supports binary\r\n */\r\n\r\nXHR.prototype.supportsBinary = true;\r\n\r\n/**\r\n * Creates a request.\r\n *\r\n * @param {String} method\r\n * @api private\r\n */\r\n\r\nXHR.prototype.request = function (opts) {\r\n  opts = opts || {};\r\n  opts.uri = this.uri();\r\n  opts.xd = this.xd;\r\n  opts.xs = this.xs;\r\n  opts.agent = this.agent || false;\r\n  opts.supportsBinary = this.supportsBinary;\r\n  opts.enablesXDR = this.enablesXDR;\r\n\r\n  // SSL options for Node.js client\r\n  opts.pfx = this.pfx;\r\n  opts.key = this.key;\r\n  opts.passphrase = this.passphrase;\r\n  opts.cert = this.cert;\r\n  opts.ca = this.ca;\r\n  opts.ciphers = this.ciphers;\r\n  opts.rejectUnauthorized = this.rejectUnauthorized;\r\n  opts.requestTimeout = this.requestTimeout;\r\n\r\n  // other options for Node.js client\r\n  opts.extraHeaders = this.extraHeaders;\r\n\r\n  return new Request(opts);\r\n};\r\n\r\n/**\r\n * Sends data.\r\n *\r\n * @param {String} data to send.\r\n * @param {Function} called upon flush.\r\n * @api private\r\n */\r\n\r\nXHR.prototype.doWrite = function (data, fn) {\r\n  var isBinary = typeof data !== 'string' && data !== undefined;\r\n  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\r\n  var self = this;\r\n  req.on('success', fn);\r\n  req.on('error', function (err) {\r\n    self.onError('xhr post error', err);\r\n  });\r\n  this.sendXhr = req;\r\n};\r\n\r\n/**\r\n * Starts a poll cycle.\r\n *\r\n * @api private\r\n */\r\n\r\nXHR.prototype.doPoll = function () {\r\n\r\n  var req = this.request();\r\n  var self = this;\r\n  req.on('data', function (data) {\r\n    self.onData(data);\r\n  });\r\n  req.on('error', function (err) {\r\n    self.onError('xhr poll error', err);\r\n  });\r\n  this.pollXhr = req;\r\n};\r\n\r\n/**\r\n * Request constructor\r\n *\r\n * @param {Object} options\r\n * @api public\r\n */\r\n\r\nfunction Request (opts) {\r\n  this.method = opts.method || 'GET';\r\n  this.uri = opts.uri;\r\n  this.xd = !!opts.xd;\r\n  this.xs = !!opts.xs;\r\n  this.async = false !== opts.async;\r\n  this.data = undefined !== opts.data ? opts.data : null;\r\n  this.agent = opts.agent;\r\n  this.isBinary = opts.isBinary;\r\n  this.supportsBinary = opts.supportsBinary;\r\n  this.enablesXDR = opts.enablesXDR;\r\n  this.requestTimeout = opts.requestTimeout;\r\n\r\n  // SSL options for Node.js client\r\n  this.pfx = opts.pfx;\r\n  this.key = opts.key;\r\n  this.passphrase = opts.passphrase;\r\n  this.cert = opts.cert;\r\n  this.ca = opts.ca;\r\n  this.ciphers = opts.ciphers;\r\n  this.rejectUnauthorized = opts.rejectUnauthorized;\r\n\r\n  // other options for Node.js client\r\n  this.extraHeaders = opts.extraHeaders;\r\n\r\n  this.create();\r\n}\r\n\r\n/**\r\n * Mix in `Emitter`.\r\n */\r\n\r\nEmitter(Request.prototype);\r\n\r\n/**\r\n * Creates the XHR object and sends the request.\r\n *\r\n * @api private\r\n */\r\n\r\nRequest.prototype.create = function () {\r\n  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\r\n\r\n  // SSL options for Node.js client\r\n  opts.pfx = this.pfx;\r\n  opts.key = this.key;\r\n  opts.passphrase = this.passphrase;\r\n  opts.cert = this.cert;\r\n  opts.ca = this.ca;\r\n  opts.ciphers = this.ciphers;\r\n  opts.rejectUnauthorized = this.rejectUnauthorized;\r\n\r\n  var xhr = this.xhr = new XMLHttpRequest(opts);\r\n  var self = this;\r\n\r\n  try {\r\n\r\n    xhr.open(this.method, this.uri, this.async);\r\n    try {\r\n      if (this.extraHeaders) {\r\n        xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\r\n        for (var i in this.extraHeaders) {\r\n          if (this.extraHeaders.hasOwnProperty(i)) {\r\n            xhr.setRequestHeader(i, this.extraHeaders[i]);\r\n          }\r\n        }\r\n      }\r\n    } catch (e) {}\r\n\r\n    if ('POST' === this.method) {\r\n      try {\r\n        if (this.isBinary) {\r\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\r\n        } else {\r\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\r\n        }\r\n      } catch (e) {}\r\n    }\r\n\r\n    try {\r\n      xhr.setRequestHeader('Accept', '*/*');\r\n    } catch (e) {}\r\n\r\n    if (this.supportsBinary) {\r\n      xhr.responseType = 'arraybuffer';\r\n    }\r\n\r\n    // ie6 check\r\n    if ('withCredentials' in xhr) {\r\n      xhr.withCredentials = true;\r\n    }\r\n\r\n    if (this.requestTimeout) {\r\n      xhr.timeout = this.requestTimeout;\r\n    }\r\n\r\n    if (this.hasXDR()) {\r\n      xhr.onload = function () {\r\n        self.onLoad();\r\n      };\r\n      xhr.onerror = function () {\r\n        self.onError(xhr.responseText);\r\n      };\r\n    } else {\r\n      xhr.onreadystatechange = function () {\r\n        if (xhr.readyState === 2) {\r\n          try {\r\n            var contentType = xhr.getResponseHeader('Content-Type');\r\n            if (contentType !== 'application/octet-stream') {\r\n              xhr.responseType = 'text';\r\n            }\r\n          } catch (e) {}\r\n        }\r\n        if (4 !== xhr.readyState) return;\r\n        if (200 === xhr.status || 1223 === xhr.status) {\r\n          self.onLoad();\r\n        } else {\r\n          // make sure the `error` event handler that's user-set\r\n          // does not throw in the same tick and gets caught here\r\n          setTimeout(function () {\r\n            self.onError(xhr.status);\r\n          }, 0);\r\n        }\r\n      };\r\n    }\r\n\r\n\r\n    xhr.send(this.data);\r\n  } catch (e) {\r\n    // Need to defer since .create() is called directly fhrom the constructor\r\n    // and thus the 'error' event can only be only bound *after* this exception\r\n    // occurs.  Therefore, also, we cannot throw here at all.\r\n    setTimeout(function () {\r\n      self.onError(e);\r\n    }, 0);\r\n    return;\r\n  }\r\n\r\n  if (global.document) {\r\n    this.index = Request.requestsCount++;\r\n    Request.requests[this.index] = this;\r\n  }\r\n};\r\n\r\n/**\r\n * Called upon successful response.\r\n *\r\n * @api private\r\n */\r\n\r\nRequest.prototype.onSuccess = function () {\r\n  this.emit('success');\r\n  this.cleanup();\r\n};\r\n\r\n/**\r\n * Called if we have data.\r\n *\r\n * @api private\r\n */\r\n\r\nRequest.prototype.onData = function (data) {\r\n  this.emit('data', data);\r\n  this.onSuccess();\r\n};\r\n\r\n/**\r\n * Called upon error.\r\n *\r\n * @api private\r\n */\r\n\r\nRequest.prototype.onError = function (err) {\r\n  this.emit('error', err);\r\n  this.cleanup(true);\r\n};\r\n\r\n/**\r\n * Cleans up house.\r\n *\r\n * @api private\r\n */\r\n\r\nRequest.prototype.cleanup = function (fromError) {\r\n  if ('undefined' === typeof this.xhr || null === this.xhr) {\r\n    return;\r\n  }\r\n  // xmlhttprequest\r\n  if (this.hasXDR()) {\r\n    this.xhr.onload = this.xhr.onerror = empty;\r\n  } else {\r\n    this.xhr.onreadystatechange = empty;\r\n  }\r\n\r\n  if (fromError) {\r\n    try {\r\n      this.xhr.abort();\r\n    } catch (e) {}\r\n  }\r\n\r\n  if (global.document) {\r\n    delete Request.requests[this.index];\r\n  }\r\n\r\n  this.xhr = null;\r\n};\r\n\r\n/**\r\n * Called upon load.\r\n *\r\n * @api private\r\n */\r\n\r\nRequest.prototype.onLoad = function () {\r\n  var data;\r\n  try {\r\n    var contentType;\r\n    try {\r\n      contentType = this.xhr.getResponseHeader('Content-Type');\r\n    } catch (e) {}\r\n    if (contentType === 'application/octet-stream') {\r\n      data = this.xhr.response || this.xhr.responseText;\r\n    } else if (this.xhr.responseType === 'arraybuffer') {\r\n      data = String.fromCharCode.apply(null, new Uint8Array(this.xhr.response));\r\n    } else {\r\n      data = this.xhr.responseText;\r\n    }\r\n  } catch (e) {\r\n    this.onError(e);\r\n  }\r\n  if (null != data) {\r\n    this.onData(data);\r\n  }\r\n};\r\n\r\n/**\r\n * Check if it has XDomainRequest.\r\n *\r\n * @api private\r\n */\r\n\r\nRequest.prototype.hasXDR = function () {\r\n  return 'undefined' !== typeof global.XDomainRequest && !this.xs && this.enablesXDR;\r\n};\r\n\r\n/**\r\n * Aborts the request.\r\n *\r\n * @api public\r\n */\r\n\r\nRequest.prototype.abort = function () {\r\n  this.cleanup();\r\n};\r\n\r\n/**\r\n * Aborts pending requests when unloading the window. This is needed to prevent\r\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\r\n * emitted.\r\n */\r\n\r\nRequest.requestsCount = 0;\r\nRequest.requests = {};\r\n\r\nif (global.document) {\r\n  if (global.attachEvent) {\r\n    global.attachEvent('onunload', unloadHandler);\r\n  } else if (global.addEventListener) {\r\n    global.addEventListener('beforeunload', unloadHandler, false);\r\n  }\r\n}\r\n\r\nfunction unloadHandler () {\r\n  for (var i in Request.requests) {\r\n    if (Request.requests.hasOwnProperty(i)) {\r\n      Request.requests[i].abort();\r\n    }\r\n  }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/lib/transports/polling-xhr.js\n// module id = 15\n// module chunks = 0","/**\r\n * Module dependencies.\r\n */\r\n\r\nvar Transport = require('../transport');\r\nvar parseqs = require('parseqs');\r\nvar parser = require('engine.io-parser');\r\nvar inherit = require('component-inherit');\r\nvar yeast = require('yeast');\r\nvar debug = require('debug')('engine.io-client:polling');\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = Polling;\r\n\r\n/**\r\n * Is XHR2 supported?\r\n */\r\n\r\nvar hasXHR2 = (function () {\r\n  var XMLHttpRequest = require('xmlhttprequest-ssl');\r\n  var xhr = new XMLHttpRequest({ xdomain: false });\r\n  return null != xhr.responseType;\r\n})();\r\n\r\n/**\r\n * Polling interface.\r\n *\r\n * @param {Object} opts\r\n * @api private\r\n */\r\n\r\nfunction Polling (opts) {\r\n  var forceBase64 = (opts && opts.forceBase64);\r\n  if (!hasXHR2 || forceBase64) {\r\n    this.supportsBinary = false;\r\n  }\r\n  Transport.call(this, opts);\r\n}\r\n\r\n/**\r\n * Inherits from Transport.\r\n */\r\n\r\ninherit(Polling, Transport);\r\n\r\n/**\r\n * Transport name.\r\n */\r\n\r\nPolling.prototype.name = 'polling';\r\n\r\n/**\r\n * Opens the socket (triggers polling). We write a PING message to determine\r\n * when the transport is open.\r\n *\r\n * @api private\r\n */\r\n\r\nPolling.prototype.doOpen = function () {\r\n  this.poll();\r\n};\r\n\r\n/**\r\n * Pauses polling.\r\n *\r\n * @param {Function} callback upon buffers are flushed and transport is paused\r\n * @api private\r\n */\r\n\r\nPolling.prototype.pause = function (onPause) {\r\n  var self = this;\r\n\r\n  this.readyState = 'pausing';\r\n\r\n  function pause () {\r\n\r\n    self.readyState = 'paused';\r\n    onPause();\r\n  }\r\n\r\n  if (this.polling || !this.writable) {\r\n    var total = 0;\r\n\r\n    if (this.polling) {\r\n\r\n      total++;\r\n      this.once('pollComplete', function () {\r\n\r\n        --total || pause();\r\n      });\r\n    }\r\n\r\n    if (!this.writable) {\r\n\r\n      total++;\r\n      this.once('drain', function () {\r\n\r\n        --total || pause();\r\n      });\r\n    }\r\n  } else {\r\n    pause();\r\n  }\r\n};\r\n\r\n/**\r\n * Starts polling cycle.\r\n *\r\n * @api public\r\n */\r\n\r\nPolling.prototype.poll = function () {\r\n\r\n  this.polling = true;\r\n  this.doPoll();\r\n  this.emit('poll');\r\n};\r\n\r\n/**\r\n * Overloads onData to detect payloads.\r\n *\r\n * @api private\r\n */\r\n\r\nPolling.prototype.onData = function (data) {\r\n  var self = this;\r\n\r\n  var callback = function (packet, index, total) {\r\n    // if its the first message we consider the transport open\r\n    if ('opening' === self.readyState) {\r\n      self.onOpen();\r\n    }\r\n\r\n    // if its a close packet, we close the ongoing requests\r\n    if ('close' === packet.type) {\r\n      self.onClose();\r\n      return false;\r\n    }\r\n\r\n    // otherwise bypass onData and handle the message\r\n    self.onPacket(packet);\r\n  };\r\n\r\n  // decode payload\r\n  parser.decodePayload(data, this.socket.binaryType, callback);\r\n\r\n  // if an event did not trigger closing\r\n  if ('closed' !== this.readyState) {\r\n    // if we got data we're not polling\r\n    this.polling = false;\r\n    this.emit('pollComplete');\r\n\r\n    if ('open' === this.readyState) {\r\n      this.poll();\r\n    } else {\r\n\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * For polling, send a close packet.\r\n *\r\n * @api private\r\n */\r\n\r\nPolling.prototype.doClose = function () {\r\n  var self = this;\r\n\r\n  function close () {\r\n\r\n    self.write([{ type: 'close' }]);\r\n  }\r\n\r\n  if ('open' === this.readyState) {\r\n\r\n    close();\r\n  } else {\r\n    // in case we're trying to close while\r\n    // handshaking is in progress (GH-164)\r\n\r\n    this.once('open', close);\r\n  }\r\n};\r\n\r\n/**\r\n * Writes a packets payload.\r\n *\r\n * @param {Array} data packets\r\n * @param {Function} drain callback\r\n * @api private\r\n */\r\n\r\nPolling.prototype.write = function (packets) {\r\n  var self = this;\r\n  this.writable = false;\r\n  var callbackfn = function () {\r\n    self.writable = true;\r\n    self.emit('drain');\r\n  };\r\n\r\n  parser.encodePayload(packets, this.supportsBinary, function (data) {\r\n    self.doWrite(data, callbackfn);\r\n  });\r\n};\r\n\r\n/**\r\n * Generates uri for connection.\r\n *\r\n * @api private\r\n */\r\n\r\nPolling.prototype.uri = function () {\r\n  var query = this.query || {};\r\n  var schema = this.secure ? 'https' : 'http';\r\n  var port = '';\r\n\r\n  // cache busting is forced\r\n  if (false !== this.timestampRequests) {\r\n    query[this.timestampParam] = yeast();\r\n  }\r\n\r\n  if (!this.supportsBinary && !query.sid) {\r\n    query.b64 = 1;\r\n  }\r\n\r\n  query = parseqs.encode(query);\r\n\r\n  // avoid port if default for schema\r\n  if (this.port && (('https' === schema && Number(this.port) !== 443) ||\r\n     ('http' === schema && Number(this.port) !== 80))) {\r\n    port = ':' + this.port;\r\n  }\r\n\r\n  // prepend ? to query\r\n  if (query.length) {\r\n    query = '?' + query;\r\n  }\r\n\r\n  var ipv6 = this.hostname.indexOf(':') !== -1;\r\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/lib/transports/polling.js\n// module id = 16\n// module chunks = 0","/**\r\n * Module dependencies.\r\n */\r\n\r\nvar parser = require('engine.io-parser');\r\nvar Emitter = require('component-emitter');\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = Transport;\r\n\r\n/**\r\n * Transport abstract constructor.\r\n *\r\n * @param {Object} options.\r\n * @api private\r\n */\r\n\r\nfunction Transport (opts) {\r\n  this.path = opts.path;\r\n  this.hostname = opts.hostname;\r\n  this.port = opts.port;\r\n  this.secure = opts.secure;\r\n  this.query = opts.query;\r\n  this.timestampParam = opts.timestampParam;\r\n  this.timestampRequests = opts.timestampRequests;\r\n  this.readyState = '';\r\n  this.agent = opts.agent || false;\r\n  this.socket = opts.socket;\r\n  this.enablesXDR = opts.enablesXDR;\r\n\r\n  // SSL options for Node.js client\r\n  this.pfx = opts.pfx;\r\n  this.key = opts.key;\r\n  this.passphrase = opts.passphrase;\r\n  this.cert = opts.cert;\r\n  this.ca = opts.ca;\r\n  this.ciphers = opts.ciphers;\r\n  this.rejectUnauthorized = opts.rejectUnauthorized;\r\n  this.forceNode = opts.forceNode;\r\n\r\n  // other options for Node.js client\r\n  this.extraHeaders = opts.extraHeaders;\r\n  this.localAddress = opts.localAddress;\r\n}\r\n\r\n/**\r\n * Mix in `Emitter`.\r\n */\r\n\r\nEmitter(Transport.prototype);\r\n\r\n/**\r\n * Emits an error.\r\n *\r\n * @param {String} str\r\n * @return {Transport} for chaining\r\n * @api public\r\n */\r\n\r\nTransport.prototype.onError = function (msg, desc) {\r\n  var err = {};\r\n  err.type = 'TransportError';\r\n  err.description = desc;\r\n  this.emit('error', err);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Opens the transport.\r\n *\r\n * @api public\r\n */\r\n\r\nTransport.prototype.open = function () {\r\n  if ('closed' === this.readyState || '' === this.readyState) {\r\n    this.readyState = 'opening';\r\n    this.doOpen();\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Closes the transport.\r\n *\r\n * @api private\r\n */\r\n\r\nTransport.prototype.close = function () {\r\n  if ('opening' === this.readyState || 'open' === this.readyState) {\r\n    this.doClose();\r\n    this.onClose();\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sends multiple packets.\r\n *\r\n * @param {Array} packets\r\n * @api private\r\n */\r\n\r\nTransport.prototype.send = function (packets) {\r\n  if ('open' === this.readyState) {\r\n    this.write(packets);\r\n  } else {\r\n    throw new Error('Transport not open');\r\n  }\r\n};\r\n\r\n/**\r\n * Called upon open\r\n *\r\n * @api private\r\n */\r\n\r\nTransport.prototype.onOpen = function () {\r\n  this.readyState = 'open';\r\n  this.writable = true;\r\n  this.emit('open');\r\n};\r\n\r\n/**\r\n * Called with data.\r\n *\r\n * @param {String} data\r\n * @api private\r\n */\r\n\r\nTransport.prototype.onData = function (data) {\r\n  var packet = parser.decodePacket(data, this.socket.binaryType);\r\n  this.onPacket(packet);\r\n};\r\n\r\n/**\r\n * Called with a decoded packet.\r\n */\r\n\r\nTransport.prototype.onPacket = function (packet) {\r\n  this.emit('packet', packet);\r\n};\r\n\r\n/**\r\n * Called upon close.\r\n *\r\n * @api private\r\n */\r\n\r\nTransport.prototype.onClose = function () {\r\n  this.readyState = 'closed';\r\n  this.emit('close');\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/lib/transport.js\n// module id = 17\n// module chunks = 0","/**\n * Module dependencies.\n */\n\nvar keys = require('./keys');\nvar hasBinary = require('has-binary2');\nvar sliceBuffer = require('arraybuffer.slice');\nvar after = require('after');\nvar utf8 = require('./utf8');\n\nvar base64encoder;\nif (typeof ArrayBuffer !== 'undefined') {\n  base64encoder = require('base64-arraybuffer');\n}\n\n/**\n * Check if we are running an android browser. That requires us to use\n * ArrayBuffer with polling transports...\n *\n * http://ghinda.net/jpeg-blob-ajax-android/\n */\n\nvar isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);\n\n/**\n * Check if we are running in PhantomJS.\n * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n * https://github.com/ariya/phantomjs/issues/11395\n * @type boolean\n */\nvar isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);\n\n/**\n * When true, avoids using Blobs to encode payloads.\n * @type boolean\n */\nvar dontSendBlobs = isAndroid || isPhantomJS;\n\n/**\n * Current protocol version.\n */\n\nexports.protocol = 3;\n\n/**\n * Packet types.\n */\n\nvar packets = exports.packets = {\n    open:     0    // non-ws\n  , close:    1    // non-ws\n  , ping:     2\n  , pong:     3\n  , message:  4\n  , upgrade:  5\n  , noop:     6\n};\n\nvar packetslist = keys(packets);\n\n/**\n * Premade error packet.\n */\n\nvar err = { type: 'error', data: 'parser error' };\n\n/**\n * Create a blob api even for blob builder when vendor prefixes exist\n */\n\nvar Blob = require('blob');\n\n/**\n * Encodes a packet.\n *\n *     <packet type id> [ <data> ]\n *\n * Example:\n *\n *     5hello world\n *     3\n *     4\n *\n * Binary is encoded in an identical principle\n *\n * @api private\n */\n\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = false;\n  }\n\n  if (typeof utf8encode === 'function') {\n    callback = utf8encode;\n    utf8encode = null;\n  }\n\n  var data = (packet.data === undefined)\n    ? undefined\n    : packet.data.buffer || packet.data;\n\n  if (typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer) {\n    return encodeArrayBuffer(packet, supportsBinary, callback);\n  } else if (typeof Blob !== 'undefined' && data instanceof Blob) {\n    return encodeBlob(packet, supportsBinary, callback);\n  }\n\n  // might be an object with { base64: true, data: dataAsBase64String }\n  if (data && data.base64) {\n    return encodeBase64Object(packet, callback);\n  }\n\n  // Sending data as a utf-8 string\n  var encoded = packets[packet.type];\n\n  // data fragment is optional\n  if (undefined !== packet.data) {\n    encoded += utf8encode ? utf8.encode(String(packet.data), { strict: false }) : String(packet.data);\n  }\n\n  return callback('' + encoded);\n\n};\n\nfunction encodeBase64Object(packet, callback) {\n  // packet data is an object { base64: true, data: dataAsBase64String }\n  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n  return callback(message);\n}\n\n/**\n * Encode packet helpers for binary types\n */\n\nfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var data = packet.data;\n  var contentArray = new Uint8Array(data);\n  var resultBuffer = new Uint8Array(1 + data.byteLength);\n\n  resultBuffer[0] = packets[packet.type];\n  for (var i = 0; i < contentArray.length; i++) {\n    resultBuffer[i+1] = contentArray[i];\n  }\n\n  return callback(resultBuffer.buffer);\n}\n\nfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var fr = new FileReader();\n  fr.onload = function() {\n    exports.encodePacket({ type: packet.type, data: fr.result }, supportsBinary, true, callback);\n  };\n  return fr.readAsArrayBuffer(packet.data);\n}\n\nfunction encodeBlob(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  if (dontSendBlobs) {\n    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n  }\n\n  var length = new Uint8Array(1);\n  length[0] = packets[packet.type];\n  var blob = new Blob([length.buffer, packet.data]);\n\n  return callback(blob);\n}\n\n/**\n * Encodes a packet with binary data in a base64 string\n *\n * @param {Object} packet, has `type` and `data`\n * @return {String} base64 encoded message\n */\n\nexports.encodeBase64Packet = function(packet, callback) {\n  var message = 'b' + exports.packets[packet.type];\n  if (typeof Blob !== 'undefined' && packet.data instanceof Blob) {\n    var fr = new FileReader();\n    fr.onload = function() {\n      var b64 = fr.result.split(',')[1];\n      callback(message + b64);\n    };\n    return fr.readAsDataURL(packet.data);\n  }\n\n  var b64data;\n  try {\n    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n  } catch (e) {\n    // iPhone Safari doesn't let you apply with typed arrays\n    var typed = new Uint8Array(packet.data);\n    var basic = new Array(typed.length);\n    for (var i = 0; i < typed.length; i++) {\n      basic[i] = typed[i];\n    }\n    b64data = String.fromCharCode.apply(null, basic);\n  }\n  message += btoa(b64data);\n  return callback(message);\n};\n\n/**\n * Decodes a packet. Changes format to Blob if requested.\n *\n * @return {Object} with `type` and `data` (if any)\n * @api private\n */\n\nexports.decodePacket = function (data, binaryType, utf8decode) {\n  if (data === undefined) {\n    return err;\n  }\n  // String data\n  if (typeof data === 'string') {\n    if (data.charAt(0) === 'b') {\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\n    }\n\n    if (utf8decode) {\n      data = tryDecode(data);\n      if (data === false) {\n        return err;\n      }\n    }\n    var type = data.charAt(0);\n\n    if (Number(type) != type || !packetslist[type]) {\n      return err;\n    }\n\n    if (data.length > 1) {\n      return { type: packetslist[type], data: data.substring(1) };\n    } else {\n      return { type: packetslist[type] };\n    }\n  }\n\n  var asArray = new Uint8Array(data);\n  var type = asArray[0];\n  var rest = sliceBuffer(data, 1);\n  if (Blob && binaryType === 'blob') {\n    rest = new Blob([rest]);\n  }\n  return { type: packetslist[type], data: rest };\n};\n\nfunction tryDecode(data) {\n  try {\n    data = utf8.decode(data, { strict: false });\n  } catch (e) {\n    return false;\n  }\n  return data;\n}\n\n/**\n * Decodes a packet encoded in a base64 string\n *\n * @param {String} base64 encoded message\n * @return {Object} with `type` and `data` (if any)\n */\n\nexports.decodeBase64Packet = function(msg, binaryType) {\n  var type = packetslist[msg.charAt(0)];\n  if (!base64encoder) {\n    return { type: type, data: { base64: true, data: msg.substr(1) } };\n  }\n\n  var data = base64encoder.decode(msg.substr(1));\n\n  if (binaryType === 'blob' && Blob) {\n    data = new Blob([data]);\n  }\n\n  return { type: type, data: data };\n};\n\n/**\n * Encodes multiple messages (payload).\n *\n *     <length>:data\n *\n * Example:\n *\n *     11:hello world2:hi\n *\n * If any contents are binary, they will be encoded as base64 strings. Base64\n * encoded strings are marked with a b before the length specifier\n *\n * @param {Array} packets\n * @api private\n */\n\nexports.encodePayload = function (packets, supportsBinary, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = null;\n  }\n\n  var isBinary = hasBinary(packets);\n\n  if (supportsBinary && isBinary) {\n    if (Blob && !dontSendBlobs) {\n      return exports.encodePayloadAsBlob(packets, callback);\n    }\n\n    return exports.encodePayloadAsArrayBuffer(packets, callback);\n  }\n\n  if (!packets.length) {\n    return callback('0:');\n  }\n\n  function setLengthHeader(message) {\n    return message.length + ':' + message;\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, !isBinary ? false : supportsBinary, false, function(message) {\n      doneCallback(null, setLengthHeader(message));\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(results.join(''));\n  });\n};\n\n/**\n * Async array map using after\n */\n\nfunction map(ary, each, done) {\n  var result = new Array(ary.length);\n  var next = after(ary.length, done);\n\n  var eachWithIndex = function(i, el, cb) {\n    each(el, function(error, msg) {\n      result[i] = msg;\n      cb(error, result);\n    });\n  };\n\n  for (var i = 0; i < ary.length; i++) {\n    eachWithIndex(i, ary[i], next);\n  }\n}\n\n/*\n * Decodes data when a payload is maybe expected. Possible binary contents are\n * decoded from their base64 representation\n *\n * @param {String} data, callback method\n * @api public\n */\n\nexports.decodePayload = function (data, binaryType, callback) {\n  if (typeof data !== 'string') {\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\n  }\n\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var packet;\n  if (data === '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n  var length = '', n, msg;\n\n  for (var i = 0, l = data.length; i < l; i++) {\n    var chr = data.charAt(i);\n\n    if (chr !== ':') {\n      length += chr;\n      continue;\n    }\n\n    if (length === '' || (length != (n = Number(length)))) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    msg = data.substr(i + 1, n);\n\n    if (length != msg.length) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    if (msg.length) {\n      packet = exports.decodePacket(msg, binaryType, false);\n\n      if (err.type === packet.type && err.data === packet.data) {\n        // parser error in individual packet - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      var ret = callback(packet, i + n, l);\n      if (false === ret) return;\n    }\n\n    // advance cursor\n    i += n;\n    length = '';\n  }\n\n  if (length !== '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n};\n\n/**\n * Encodes multiple messages (payload) as binary.\n *\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n * 255><data>\n *\n * Example:\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n *\n * @param {Array} packets\n * @return {ArrayBuffer} encoded payload\n * @api private\n */\n\nexports.encodePayloadAsArrayBuffer = function(packets, callback) {\n  if (!packets.length) {\n    return callback(new ArrayBuffer(0));\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(data) {\n      return doneCallback(null, data);\n    });\n  }\n\n  map(packets, encodeOne, function(err, encodedPackets) {\n    var totalLength = encodedPackets.reduce(function(acc, p) {\n      var len;\n      if (typeof p === 'string'){\n        len = p.length;\n      } else {\n        len = p.byteLength;\n      }\n      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n    }, 0);\n\n    var resultArray = new Uint8Array(totalLength);\n\n    var bufferIndex = 0;\n    encodedPackets.forEach(function(p) {\n      var isString = typeof p === 'string';\n      var ab = p;\n      if (isString) {\n        var view = new Uint8Array(p.length);\n        for (var i = 0; i < p.length; i++) {\n          view[i] = p.charCodeAt(i);\n        }\n        ab = view.buffer;\n      }\n\n      if (isString) { // not true binary\n        resultArray[bufferIndex++] = 0;\n      } else { // true binary\n        resultArray[bufferIndex++] = 1;\n      }\n\n      var lenStr = ab.byteLength.toString();\n      for (var i = 0; i < lenStr.length; i++) {\n        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n      }\n      resultArray[bufferIndex++] = 255;\n\n      var view = new Uint8Array(ab);\n      for (var i = 0; i < view.length; i++) {\n        resultArray[bufferIndex++] = view[i];\n      }\n    });\n\n    return callback(resultArray.buffer);\n  });\n};\n\n/**\n * Encode as Blob\n */\n\nexports.encodePayloadAsBlob = function(packets, callback) {\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(encoded) {\n      var binaryIdentifier = new Uint8Array(1);\n      binaryIdentifier[0] = 1;\n      if (typeof encoded === 'string') {\n        var view = new Uint8Array(encoded.length);\n        for (var i = 0; i < encoded.length; i++) {\n          view[i] = encoded.charCodeAt(i);\n        }\n        encoded = view.buffer;\n        binaryIdentifier[0] = 0;\n      }\n\n      var len = (encoded instanceof ArrayBuffer)\n        ? encoded.byteLength\n        : encoded.size;\n\n      var lenStr = len.toString();\n      var lengthAry = new Uint8Array(lenStr.length + 1);\n      for (var i = 0; i < lenStr.length; i++) {\n        lengthAry[i] = parseInt(lenStr[i]);\n      }\n      lengthAry[lenStr.length] = 255;\n\n      if (Blob) {\n        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n        doneCallback(null, blob);\n      }\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(new Blob(results));\n  });\n};\n\n/*\n * Decodes data when a payload is maybe expected. Strings are decoded by\n * interpreting each byte as a key code for entries marked to start with 0. See\n * description of encodePayloadAsBinary\n *\n * @param {ArrayBuffer} data, callback method\n * @api public\n */\n\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var bufferTail = data;\n  var buffers = [];\n\n  while (bufferTail.byteLength > 0) {\n    var tailArray = new Uint8Array(bufferTail);\n    var isString = tailArray[0] === 0;\n    var msgLength = '';\n\n    for (var i = 1; ; i++) {\n      if (tailArray[i] === 255) break;\n\n      // 310 = char length of Number.MAX_VALUE\n      if (msgLength.length > 310) {\n        return callback(err, 0, 1);\n      }\n\n      msgLength += tailArray[i];\n    }\n\n    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n    msgLength = parseInt(msgLength);\n\n    var msg = sliceBuffer(bufferTail, 0, msgLength);\n    if (isString) {\n      try {\n        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n      } catch (e) {\n        // iPhone Safari doesn't let you apply to typed arrays\n        var typed = new Uint8Array(msg);\n        msg = '';\n        for (var i = 0; i < typed.length; i++) {\n          msg += String.fromCharCode(typed[i]);\n        }\n      }\n    }\n\n    buffers.push(msg);\n    bufferTail = sliceBuffer(bufferTail, msgLength);\n  }\n\n  var total = buffers.length;\n  buffers.forEach(function(buffer, i) {\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n  });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/~/engine.io-parser/lib/browser.js\n// module id = 18\n// module chunks = 0","\n/**\n * Gets the keys for an object.\n *\n * @return {Array} keys\n * @api private\n */\n\nmodule.exports = Object.keys || function keys (obj){\n  var arr = [];\n  var has = Object.prototype.hasOwnProperty;\n\n  for (var i in obj) {\n    if (has.call(obj, i)) {\n      arr.push(i);\n    }\n  }\n  return arr;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/~/engine.io-parser/lib/keys.js\n// module id = 19\n// module chunks = 0","/* global Blob File */\n\n/*\n * Module requirements.\n */\n\nvar isArray = require('isarray');\n\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof Blob === 'function' ||\n                        typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof File === 'function' ||\n                        typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Supports Buffer, ArrayBuffer, Blob and File.\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary (obj) {\n  if (!obj || typeof obj !== 'object') {\n    return false;\n  }\n\n  if (isArray(obj)) {\n    for (var i = 0, l = obj.length; i < l; i++) {\n      if (hasBinary(obj[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  if ((typeof Buffer === 'function' && Buffer.isBuffer && Buffer.isBuffer(obj)) ||\n    (typeof ArrayBuffer === 'function' && obj instanceof ArrayBuffer) ||\n    (withNativeBlob && obj instanceof Blob) ||\n    (withNativeFile && obj instanceof File)\n  ) {\n    return true;\n  }\n\n  // see: https://github.com/Automattic/has-binary/pull/4\n  if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {\n    return hasBinary(obj.toJSON(), true);\n  }\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/has-binary2/index.js\n// module id = 20\n// module chunks = 0","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/buffer/index.js\n// module id = 21\n// module chunks = 0","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/base64-js/index.js\n// module id = 22\n// module chunks = 0","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ieee754/index.js\n// module id = 23\n// module chunks = 0","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/buffer/~/isarray/index.js\n// module id = 24\n// module chunks = 0","/**\n * An abstraction for slicing an arraybuffer even when\n * ArrayBuffer.prototype.slice is not supported\n *\n * @api public\n */\n\nmodule.exports = function(arraybuffer, start, end) {\n  var bytes = arraybuffer.byteLength;\n  start = start || 0;\n  end = end || bytes;\n\n  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\n\n  if (start < 0) { start += bytes; }\n  if (end < 0) { end += bytes; }\n  if (end > bytes) { end = bytes; }\n\n  if (start >= bytes || start >= end || bytes === 0) {\n    return new ArrayBuffer(0);\n  }\n\n  var abv = new Uint8Array(arraybuffer);\n  var result = new Uint8Array(end - start);\n  for (var i = start, ii = 0; i < end; i++, ii++) {\n    result[ii] = abv[i];\n  }\n  return result.buffer;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/arraybuffer.slice/index.js\n// module id = 25\n// module chunks = 0","module.exports = after\n\nfunction after(count, callback, err_cb) {\n    var bail = false\n    err_cb = err_cb || noop\n    proxy.count = count\n\n    return (count === 0) ? callback() : proxy\n\n    function proxy(err, result) {\n        if (proxy.count <= 0) {\n            throw new Error('after called too many times')\n        }\n        --proxy.count\n\n        // after first error, rest are passed to err_cb\n        if (err) {\n            bail = true\n            callback(err)\n            // future error callbacks will go to error handler\n            callback = err_cb\n        } else if (proxy.count === 0 && !bail) {\n            callback(null, result)\n        }\n    }\n}\n\nfunction noop() {}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/after/index.js\n// module id = 26\n// module chunks = 0","/*! https://mths.be/utf8js v2.1.2 by @mathias */\n\nvar stringFromCharCode = String.fromCharCode;\n\n// Taken from https://mths.be/punycode\nfunction ucs2decode(string) {\n\tvar output = [];\n\tvar counter = 0;\n\tvar length = string.length;\n\tvar value;\n\tvar extra;\n\twhile (counter < length) {\n\t\tvalue = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// high surrogate, and there is a next character\n\t\t\textra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n// Taken from https://mths.be/punycode\nfunction ucs2encode(array) {\n\tvar length = array.length;\n\tvar index = -1;\n\tvar value;\n\tvar output = '';\n\twhile (++index < length) {\n\t\tvalue = array[index];\n\t\tif (value > 0xFFFF) {\n\t\t\tvalue -= 0x10000;\n\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t}\n\t\toutput += stringFromCharCode(value);\n\t}\n\treturn output;\n}\n\nfunction checkScalarValue(codePoint, strict) {\n\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\tif (strict) {\n\t\t\tthrow Error(\n\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t' is not a scalar value'\n\t\t\t);\n\t\t}\n\t\treturn false;\n\t}\n\treturn true;\n}\n/*--------------------------------------------------------------------------*/\n\nfunction createByte(codePoint, shift) {\n\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n}\n\nfunction encodeCodePoint(codePoint, strict) {\n\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\treturn stringFromCharCode(codePoint);\n\t}\n\tvar symbol = '';\n\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t}\n\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\tif (!checkScalarValue(codePoint, strict)) {\n\t\t\tcodePoint = 0xFFFD;\n\t\t}\n\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\tsymbol += createByte(codePoint, 6);\n\t}\n\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\tsymbol += createByte(codePoint, 12);\n\t\tsymbol += createByte(codePoint, 6);\n\t}\n\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\treturn symbol;\n}\n\nfunction utf8encode(string, opts) {\n\topts = opts || {};\n\tvar strict = false !== opts.strict;\n\n\tvar codePoints = ucs2decode(string);\n\tvar length = codePoints.length;\n\tvar index = -1;\n\tvar codePoint;\n\tvar byteString = '';\n\twhile (++index < length) {\n\t\tcodePoint = codePoints[index];\n\t\tbyteString += encodeCodePoint(codePoint, strict);\n\t}\n\treturn byteString;\n}\n\n/*--------------------------------------------------------------------------*/\n\nfunction readContinuationByte() {\n\tif (byteIndex >= byteCount) {\n\t\tthrow Error('Invalid byte index');\n\t}\n\n\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\tbyteIndex++;\n\n\tif ((continuationByte & 0xC0) == 0x80) {\n\t\treturn continuationByte & 0x3F;\n\t}\n\n\t// If we end up here, it’s not a continuation byte\n\tthrow Error('Invalid continuation byte');\n}\n\nfunction decodeSymbol(strict) {\n\tvar byte1;\n\tvar byte2;\n\tvar byte3;\n\tvar byte4;\n\tvar codePoint;\n\n\tif (byteIndex > byteCount) {\n\t\tthrow Error('Invalid byte index');\n\t}\n\n\tif (byteIndex == byteCount) {\n\t\treturn false;\n\t}\n\n\t// Read first byte\n\tbyte1 = byteArray[byteIndex] & 0xFF;\n\tbyteIndex++;\n\n\t// 1-byte sequence (no continuation bytes)\n\tif ((byte1 & 0x80) == 0) {\n\t\treturn byte1;\n\t}\n\n\t// 2-byte sequence\n\tif ((byte1 & 0xE0) == 0xC0) {\n\t\tbyte2 = readContinuationByte();\n\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\tif (codePoint >= 0x80) {\n\t\t\treturn codePoint;\n\t\t} else {\n\t\t\tthrow Error('Invalid continuation byte');\n\t\t}\n\t}\n\n\t// 3-byte sequence (may include unpaired surrogates)\n\tif ((byte1 & 0xF0) == 0xE0) {\n\t\tbyte2 = readContinuationByte();\n\t\tbyte3 = readContinuationByte();\n\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\tif (codePoint >= 0x0800) {\n\t\t\treturn checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;\n\t\t} else {\n\t\t\tthrow Error('Invalid continuation byte');\n\t\t}\n\t}\n\n\t// 4-byte sequence\n\tif ((byte1 & 0xF8) == 0xF0) {\n\t\tbyte2 = readContinuationByte();\n\t\tbyte3 = readContinuationByte();\n\t\tbyte4 = readContinuationByte();\n\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t(byte3 << 0x06) | byte4;\n\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\treturn codePoint;\n\t\t}\n\t}\n\n\tthrow Error('Invalid UTF-8 detected');\n}\n\nvar byteArray;\nvar byteCount;\nvar byteIndex;\nfunction utf8decode(byteString, opts) {\n\topts = opts || {};\n\tvar strict = false !== opts.strict;\n\n\tbyteArray = ucs2decode(byteString);\n\tbyteCount = byteArray.length;\n\tbyteIndex = 0;\n\tvar codePoints = [];\n\tvar tmp;\n\twhile ((tmp = decodeSymbol(strict)) !== false) {\n\t\tcodePoints.push(tmp);\n\t}\n\treturn ucs2encode(codePoints);\n}\n\nmodule.exports = {\n\tversion: '2.1.2',\n\tencode: utf8encode,\n\tdecode: utf8decode\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/~/engine.io-parser/lib/utf8.js\n// module id = 27\n// module chunks = 0","/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function(){\n  \"use strict\";\n\n  var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n  // Use a lookup table to find the index.\n  var lookup = new Uint8Array(256);\n  for (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n  }\n\n  exports.encode = function(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n    i, len = bytes.length, base64 = \"\";\n\n    for (i = 0; i < len; i+=3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode =  function(base64) {\n    var bufferLength = base64.length * 0.75,\n    len = base64.length, i, p = 0,\n    encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i+=4) {\n      encoded1 = lookup[base64.charCodeAt(i)];\n      encoded2 = lookup[base64.charCodeAt(i+1)];\n      encoded3 = lookup[base64.charCodeAt(i+2)];\n      encoded4 = lookup[base64.charCodeAt(i+3)];\n\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n  };\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/base64-arraybuffer/lib/base64-arraybuffer.js\n// module id = 28\n// module chunks = 0","/**\r\n * Create a blob builder even when vendor prefixes exist\r\n */\r\n\r\nvar BlobBuilder = typeof BlobBuilder !== 'undefined' ? BlobBuilder :\r\n  typeof WebKitBlobBuilder !== 'undefined' ? WebKitBlobBuilder :\r\n  typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder :\r\n  typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : \r\n  false;\r\n\r\n/**\r\n * Check if Blob constructor is supported\r\n */\r\n\r\nvar blobSupported = (function() {\r\n  try {\r\n    var a = new Blob(['hi']);\r\n    return a.size === 2;\r\n  } catch(e) {\r\n    return false;\r\n  }\r\n})();\r\n\r\n/**\r\n * Check if Blob constructor supports ArrayBufferViews\r\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\r\n */\r\n\r\nvar blobSupportsArrayBufferView = blobSupported && (function() {\r\n  try {\r\n    var b = new Blob([new Uint8Array([1,2])]);\r\n    return b.size === 2;\r\n  } catch(e) {\r\n    return false;\r\n  }\r\n})();\r\n\r\n/**\r\n * Check if BlobBuilder is supported\r\n */\r\n\r\nvar blobBuilderSupported = BlobBuilder\r\n  && BlobBuilder.prototype.append\r\n  && BlobBuilder.prototype.getBlob;\r\n\r\n/**\r\n * Helper function that maps ArrayBufferViews to ArrayBuffers\r\n * Used by BlobBuilder constructor and old browsers that didn't\r\n * support it in the Blob constructor.\r\n */\r\n\r\nfunction mapArrayBufferViews(ary) {\r\n  return ary.map(function(chunk) {\r\n    if (chunk.buffer instanceof ArrayBuffer) {\r\n      var buf = chunk.buffer;\r\n\r\n      // if this is a subarray, make a copy so we only\r\n      // include the subarray region from the underlying buffer\r\n      if (chunk.byteLength !== buf.byteLength) {\r\n        var copy = new Uint8Array(chunk.byteLength);\r\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\r\n        buf = copy.buffer;\r\n      }\r\n\r\n      return buf;\r\n    }\r\n\r\n    return chunk;\r\n  });\r\n}\r\n\r\nfunction BlobBuilderConstructor(ary, options) {\r\n  options = options || {};\r\n\r\n  var bb = new BlobBuilder();\r\n  mapArrayBufferViews(ary).forEach(function(part) {\r\n    bb.append(part);\r\n  });\r\n\r\n  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();\r\n};\r\n\r\nfunction BlobConstructor(ary, options) {\r\n  return new Blob(mapArrayBufferViews(ary), options || {});\r\n};\r\n\r\nif (typeof Blob !== 'undefined') {\r\n  BlobBuilderConstructor.prototype = Blob.prototype;\r\n  BlobConstructor.prototype = Blob.prototype;\r\n}\r\n\r\nmodule.exports = (function() {\r\n  if (blobSupported) {\r\n    return blobSupportsArrayBufferView ? Blob : BlobConstructor;\r\n  } else if (blobBuilderSupported) {\r\n    return BlobBuilderConstructor;\r\n  } else {\r\n    return undefined;\r\n  }\r\n})();\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/blob/index.js\n// module id = 29\n// module chunks = 0","/**\r\n * Compiles a querystring\r\n * Returns string representation of the object\r\n *\r\n * @param {Object}\r\n * @api private\r\n */\r\n\r\nexports.encode = function (obj) {\r\n  var str = '';\r\n\r\n  for (var i in obj) {\r\n    if (obj.hasOwnProperty(i)) {\r\n      if (str.length) str += '&';\r\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\r\n    }\r\n  }\r\n\r\n  return str;\r\n};\r\n\r\n/**\r\n * Parses a simple querystring into an object\r\n *\r\n * @param {String} qs\r\n * @api private\r\n */\r\n\r\nexports.decode = function(qs){\r\n  var qry = {};\r\n  var pairs = qs.split('&');\r\n  for (var i = 0, l = pairs.length; i < l; i++) {\r\n    var pair = pairs[i].split('=');\r\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\r\n  }\r\n  return qry;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/parseqs/index.js\n// module id = 30\n// module chunks = 0","\nmodule.exports = function(a, b){\n  var fn = function(){};\n  fn.prototype = b.prototype;\n  a.prototype = new fn;\n  a.prototype.constructor = a;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/component-inherit/index.js\n// module id = 31\n// module chunks = 0","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/yeast/index.js\n// module id = 32\n// module chunks = 0","\r\n/**\r\n * Module requirements.\r\n */\r\n\r\nvar Polling = require('./polling');\r\nvar inherit = require('component-inherit');\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = JSONPPolling;\r\n\r\n/**\r\n * Cached regular expressions.\r\n */\r\n\r\nvar rNewline = /\\n/g;\r\nvar rEscapedNewline = /\\\\n/g;\r\n\r\n/**\r\n * Global JSONP callbacks.\r\n */\r\n\r\nvar callbacks;\r\n\r\n/**\r\n * Noop.\r\n */\r\n\r\nfunction empty () { }\r\n\r\n/**\r\n * JSONP Polling constructor.\r\n *\r\n * @param {Object} opts.\r\n * @api public\r\n */\r\n\r\nfunction JSONPPolling (opts) {\r\n  Polling.call(this, opts);\r\n\r\n  this.query = this.query || {};\r\n\r\n  // define global callbacks array if not present\r\n  // we do this here (lazily) to avoid unneeded global pollution\r\n  if (!callbacks) {\r\n    // we need to consider multiple engines in the same page\r\n    if (!global.___eio) global.___eio = [];\r\n    callbacks = global.___eio;\r\n  }\r\n\r\n  // callback identifier\r\n  this.index = callbacks.length;\r\n\r\n  // add callback to jsonp global\r\n  var self = this;\r\n  callbacks.push(function (msg) {\r\n    self.onData(msg);\r\n  });\r\n\r\n  // append to query string\r\n  this.query.j = this.index;\r\n\r\n  // prevent spurious errors from being emitted when the window is unloaded\r\n  if (global.document && global.addEventListener) {\r\n    global.addEventListener('beforeunload', function () {\r\n      if (self.script) self.script.onerror = empty;\r\n    }, false);\r\n  }\r\n}\r\n\r\n/**\r\n * Inherits from Polling.\r\n */\r\n\r\ninherit(JSONPPolling, Polling);\r\n\r\n/*\r\n * JSONP only supports binary as base64 encoded strings\r\n */\r\n\r\nJSONPPolling.prototype.supportsBinary = false;\r\n\r\n/**\r\n * Closes the socket.\r\n *\r\n * @api private\r\n */\r\n\r\nJSONPPolling.prototype.doClose = function () {\r\n  if (this.script) {\r\n    this.script.parentNode.removeChild(this.script);\r\n    this.script = null;\r\n  }\r\n\r\n  if (this.form) {\r\n    this.form.parentNode.removeChild(this.form);\r\n    this.form = null;\r\n    this.iframe = null;\r\n  }\r\n\r\n  Polling.prototype.doClose.call(this);\r\n};\r\n\r\n/**\r\n * Starts a poll cycle.\r\n *\r\n * @api private\r\n */\r\n\r\nJSONPPolling.prototype.doPoll = function () {\r\n  var self = this;\r\n  var script = document.createElement('script');\r\n\r\n  if (this.script) {\r\n    this.script.parentNode.removeChild(this.script);\r\n    this.script = null;\r\n  }\r\n\r\n  script.async = true;\r\n  script.src = this.uri();\r\n  script.onerror = function (e) {\r\n    self.onError('jsonp poll error', e);\r\n  };\r\n\r\n  var insertAt = document.getElementsByTagName('script')[0];\r\n  if (insertAt) {\r\n    insertAt.parentNode.insertBefore(script, insertAt);\r\n  } else {\r\n    (document.head || document.body).appendChild(script);\r\n  }\r\n  this.script = script;\r\n\r\n  var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);\r\n\r\n  if (isUAgecko) {\r\n    setTimeout(function () {\r\n      var iframe = document.createElement('iframe');\r\n      document.body.appendChild(iframe);\r\n      document.body.removeChild(iframe);\r\n    }, 100);\r\n  }\r\n};\r\n\r\n/**\r\n * Writes with a hidden iframe.\r\n *\r\n * @param {String} data to send\r\n * @param {Function} called upon flush.\r\n * @api private\r\n */\r\n\r\nJSONPPolling.prototype.doWrite = function (data, fn) {\r\n  var self = this;\r\n\r\n  if (!this.form) {\r\n    var form = document.createElement('form');\r\n    var area = document.createElement('textarea');\r\n    var id = this.iframeId = 'eio_iframe_' + this.index;\r\n    var iframe;\r\n\r\n    form.className = 'socketio';\r\n    form.style.position = 'absolute';\r\n    form.style.top = '-1000px';\r\n    form.style.left = '-1000px';\r\n    form.target = id;\r\n    form.method = 'POST';\r\n    form.setAttribute('accept-charset', 'utf-8');\r\n    area.name = 'd';\r\n    form.appendChild(area);\r\n    document.body.appendChild(form);\r\n\r\n    this.form = form;\r\n    this.area = area;\r\n  }\r\n\r\n  this.form.action = this.uri();\r\n\r\n  function complete () {\r\n    initIframe();\r\n    fn();\r\n  }\r\n\r\n  function initIframe () {\r\n    if (self.iframe) {\r\n      try {\r\n        self.form.removeChild(self.iframe);\r\n      } catch (e) {\r\n        self.onError('jsonp polling iframe removal error', e);\r\n      }\r\n    }\r\n\r\n    try {\r\n      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\r\n      var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\r\n      iframe = document.createElement(html);\r\n    } catch (e) {\r\n      iframe = document.createElement('iframe');\r\n      iframe.name = self.iframeId;\r\n      iframe.src = 'javascript:0';\r\n    }\r\n\r\n    iframe.id = self.iframeId;\r\n\r\n    self.form.appendChild(iframe);\r\n    self.iframe = iframe;\r\n  }\r\n\r\n  initIframe();\r\n\r\n  // escape \\n to prevent it from being converted into \\r\\n by some UAs\r\n  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\r\n  data = data.replace(rEscapedNewline, '\\\\\\n');\r\n  this.area.value = data.replace(rNewline, '\\\\n');\r\n\r\n  try {\r\n    this.form.submit();\r\n  } catch (e) {}\r\n\r\n  if (this.iframe.attachEvent) {\r\n    this.iframe.onreadystatechange = function () {\r\n      if (self.iframe.readyState === 'complete') {\r\n        complete();\r\n      }\r\n    };\r\n  } else {\r\n    this.iframe.onload = complete;\r\n  }\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/lib/transports/polling-jsonp.js\n// module id = 33\n// module chunks = 0","/**\r\n * Module dependencies.\r\n */\r\n\r\nvar Transport = require('../transport');\r\nvar parser = require('engine.io-parser');\r\nvar parseqs = require('parseqs');\r\nvar inherit = require('component-inherit');\r\nvar yeast = require('yeast');\r\nvar debug = require('debug')('engine.io-client:websocket');\r\nvar BrowserWebSocket = global.WebSocket || global.MozWebSocket;\r\nvar NodeWebSocket;\r\nif (typeof window === 'undefined') {\r\n  try {\r\n    NodeWebSocket = require('ws');\r\n  } catch (e) { }\r\n}\r\n\r\n/**\r\n * Get either the `WebSocket` or `MozWebSocket` globals\r\n * in the browser or try to resolve WebSocket-compatible\r\n * interface exposed by `ws` for Node-like environment.\r\n */\r\n\r\nvar WebSocket = BrowserWebSocket;\r\nif (!WebSocket && typeof window === 'undefined') {\r\n  WebSocket = NodeWebSocket;\r\n}\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = WS;\r\n\r\n/**\r\n * WebSocket transport constructor.\r\n *\r\n * @api {Object} connection options\r\n * @api public\r\n */\r\n\r\nfunction WS (opts) {\r\n  var forceBase64 = (opts && opts.forceBase64);\r\n  if (forceBase64) {\r\n    this.supportsBinary = false;\r\n  }\r\n  this.perMessageDeflate = opts.perMessageDeflate;\r\n  this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;\r\n  this.protocols = opts.protocols;\r\n  if (!this.usingBrowserWebSocket) {\r\n    WebSocket = NodeWebSocket;\r\n  }\r\n  Transport.call(this, opts);\r\n}\r\n\r\n/**\r\n * Inherits from Transport.\r\n */\r\n\r\ninherit(WS, Transport);\r\n\r\n/**\r\n * Transport name.\r\n *\r\n * @api public\r\n */\r\n\r\nWS.prototype.name = 'websocket';\r\n\r\n/*\r\n * WebSockets support binary\r\n */\r\n\r\nWS.prototype.supportsBinary = true;\r\n\r\n/**\r\n * Opens socket.\r\n *\r\n * @api private\r\n */\r\n\r\nWS.prototype.doOpen = function () {\r\n  if (!this.check()) {\r\n    // let probe timeout\r\n    return;\r\n  }\r\n\r\n  var uri = this.uri();\r\n  var protocols = this.protocols;\r\n  var opts = {\r\n    agent: this.agent,\r\n    perMessageDeflate: this.perMessageDeflate\r\n  };\r\n\r\n  // SSL options for Node.js client\r\n  opts.pfx = this.pfx;\r\n  opts.key = this.key;\r\n  opts.passphrase = this.passphrase;\r\n  opts.cert = this.cert;\r\n  opts.ca = this.ca;\r\n  opts.ciphers = this.ciphers;\r\n  opts.rejectUnauthorized = this.rejectUnauthorized;\r\n  if (this.extraHeaders) {\r\n    opts.headers = this.extraHeaders;\r\n  }\r\n  if (this.localAddress) {\r\n    opts.localAddress = this.localAddress;\r\n  }\r\n\r\n  try {\r\n    this.ws = this.usingBrowserWebSocket ? (protocols ? new WebSocket(uri, protocols) : new WebSocket(uri)) : new WebSocket(uri, protocols, opts);\r\n  } catch (err) {\r\n    return this.emit('error', err);\r\n  }\r\n\r\n  if (this.ws.binaryType === undefined) {\r\n    this.supportsBinary = false;\r\n  }\r\n\r\n  if (this.ws.supports && this.ws.supports.binary) {\r\n    this.supportsBinary = true;\r\n    this.ws.binaryType = 'nodebuffer';\r\n  } else {\r\n    this.ws.binaryType = 'arraybuffer';\r\n  }\r\n\r\n  this.addEventListeners();\r\n};\r\n\r\n/**\r\n * Adds event listeners to the socket\r\n *\r\n * @api private\r\n */\r\n\r\nWS.prototype.addEventListeners = function () {\r\n  var self = this;\r\n\r\n  this.ws.onopen = function () {\r\n    self.onOpen();\r\n  };\r\n  this.ws.onclose = function () {\r\n    self.onClose();\r\n  };\r\n  this.ws.onmessage = function (ev) {\r\n    self.onData(ev.data);\r\n  };\r\n  this.ws.onerror = function (e) {\r\n    self.onError('websocket error', e);\r\n  };\r\n};\r\n\r\n/**\r\n * Writes data to socket.\r\n *\r\n * @param {Array} array of packets.\r\n * @api private\r\n */\r\n\r\nWS.prototype.write = function (packets) {\r\n  var self = this;\r\n  this.writable = false;\r\n\r\n  // encodePacket efficient as it uses WS framing\r\n  // no need for encodePayload\r\n  var total = packets.length;\r\n  for (var i = 0, l = total; i < l; i++) {\r\n    (function (packet) {\r\n      parser.encodePacket(packet, self.supportsBinary, function (data) {\r\n        if (!self.usingBrowserWebSocket) {\r\n          // always create a new object (GH-437)\r\n          var opts = {};\r\n          if (packet.options) {\r\n            opts.compress = packet.options.compress;\r\n          }\r\n\r\n          if (self.perMessageDeflate) {\r\n            var len = 'string' === typeof data ? global.Buffer.byteLength(data) : data.length;\r\n            if (len < self.perMessageDeflate.threshold) {\r\n              opts.compress = false;\r\n            }\r\n          }\r\n        }\r\n\r\n        // Sometimes the websocket has already been closed but the browser didn't\r\n        // have a chance of informing us about it yet, in that case send will\r\n        // throw an error\r\n        try {\r\n          if (self.usingBrowserWebSocket) {\r\n            // TypeError is thrown when passing the second argument on Safari\r\n            self.ws.send(data);\r\n          } else {\r\n            self.ws.send(data, opts);\r\n          }\r\n        } catch (e) {\r\n\r\n        }\r\n\r\n        --total || done();\r\n      });\r\n    })(packets[i]);\r\n  }\r\n\r\n  function done () {\r\n    self.emit('flush');\r\n\r\n    // fake drain\r\n    // defer to next tick to allow Socket to clear writeBuffer\r\n    setTimeout(function () {\r\n      self.writable = true;\r\n      self.emit('drain');\r\n    }, 0);\r\n  }\r\n};\r\n\r\n/**\r\n * Called upon close\r\n *\r\n * @api private\r\n */\r\n\r\nWS.prototype.onClose = function () {\r\n  Transport.prototype.onClose.call(this);\r\n};\r\n\r\n/**\r\n * Closes socket.\r\n *\r\n * @api private\r\n */\r\n\r\nWS.prototype.doClose = function () {\r\n  if (typeof this.ws !== 'undefined') {\r\n    this.ws.close();\r\n  }\r\n};\r\n\r\n/**\r\n * Generates uri for connection.\r\n *\r\n * @api private\r\n */\r\n\r\nWS.prototype.uri = function () {\r\n  var query = this.query || {};\r\n  var schema = this.secure ? 'wss' : 'ws';\r\n  var port = '';\r\n\r\n  // avoid port if default for schema\r\n  if (this.port && (('wss' === schema && Number(this.port) !== 443) ||\r\n    ('ws' === schema && Number(this.port) !== 80))) {\r\n    port = ':' + this.port;\r\n  }\r\n\r\n  // append timestamp to URI\r\n  if (this.timestampRequests) {\r\n    query[this.timestampParam] = yeast();\r\n  }\r\n\r\n  // communicate binary support capabilities\r\n  if (!this.supportsBinary) {\r\n    query.b64 = 1;\r\n  }\r\n\r\n  query = parseqs.encode(query);\r\n\r\n  // prepend ? to query\r\n  if (query.length) {\r\n    query = '?' + query;\r\n  }\r\n\r\n  var ipv6 = this.hostname.indexOf(':') !== -1;\r\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\r\n};\r\n\r\n/**\r\n * Feature detection for WebSocket.\r\n *\r\n * @return {Boolean} whether this transport is available.\r\n * @api public\r\n */\r\n\r\nWS.prototype.check = function () {\r\n  return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/lib/transports/websocket.js\n// module id = 34\n// module chunks = 0","\nvar indexOf = [].indexOf;\n\nmodule.exports = function(arr, obj){\n  if (indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/indexof/index.js\n// module id = 36\n// module chunks = 0","\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar parser = require('socket.io-parser');\r\nvar Emitter = require('component-emitter');\r\nvar toArray = require('to-array');\r\nvar on = require('./on');\r\nvar bind = require('component-bind');\r\nvar debug = require('debug')('socket.io-client:socket');\r\nvar parseqs = require('parseqs');\r\nvar hasBin = require('has-binary2');\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = exports = Socket;\r\n\r\n/**\r\n * Internal events (blacklisted).\r\n * These events can't be emitted by the user.\r\n *\r\n * @api private\r\n */\r\n\r\nvar events = {\r\n  connect: 1,\r\n  connect_error: 1,\r\n  connect_timeout: 1,\r\n  connecting: 1,\r\n  disconnect: 1,\r\n  error: 1,\r\n  reconnect: 1,\r\n  reconnect_attempt: 1,\r\n  reconnect_failed: 1,\r\n  reconnect_error: 1,\r\n  reconnecting: 1,\r\n  ping: 1,\r\n  pong: 1\r\n};\r\n\r\n/**\r\n * Shortcut to `Emitter#emit`.\r\n */\r\n\r\nvar emit = Emitter.prototype.emit;\r\n\r\n/**\r\n * `Socket` constructor.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Socket (io, nsp, opts) {\r\n  this.io = io;\r\n  this.nsp = nsp;\r\n  this.json = this; // compat\r\n  this.ids = 0;\r\n  this.acks = {};\r\n  this.receiveBuffer = [];\r\n  this.sendBuffer = [];\r\n  this.connected = false;\r\n  this.disconnected = true;\r\n  this.flags = {};\r\n  if (opts && opts.query) {\r\n    this.query = opts.query;\r\n  }\r\n  if (this.io.autoConnect) this.open();\r\n}\r\n\r\n/**\r\n * Mix in `Emitter`.\r\n */\r\n\r\nEmitter(Socket.prototype);\r\n\r\n/**\r\n * Subscribe to open, close and packet events\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.subEvents = function () {\r\n  if (this.subs) return;\r\n\r\n  var io = this.io;\r\n  this.subs = [\r\n    on(io, 'open', bind(this, 'onopen')),\r\n    on(io, 'packet', bind(this, 'onpacket')),\r\n    on(io, 'close', bind(this, 'onclose'))\r\n  ];\r\n};\r\n\r\n/**\r\n * \"Opens\" the socket.\r\n *\r\n * @api public\r\n */\r\n\r\nSocket.prototype.open =\r\nSocket.prototype.connect = function () {\r\n  if (this.connected) return this;\r\n\r\n  this.subEvents();\r\n  this.io.open(); // ensure open\r\n  if ('open' === this.io.readyState) this.onopen();\r\n  this.emit('connecting');\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sends a `message` event.\r\n *\r\n * @return {Socket} self\r\n * @api public\r\n */\r\n\r\nSocket.prototype.send = function () {\r\n  var args = toArray(arguments);\r\n  args.unshift('message');\r\n  this.emit.apply(this, args);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Override `emit`.\r\n * If the event is in `events`, it's emitted normally.\r\n *\r\n * @param {String} event name\r\n * @return {Socket} self\r\n * @api public\r\n */\r\n\r\nSocket.prototype.emit = function (ev) {\r\n  if (events.hasOwnProperty(ev)) {\r\n    emit.apply(this, arguments);\r\n    return this;\r\n  }\r\n\r\n  var args = toArray(arguments);\r\n  var packet = {\r\n    type: (this.flags.binary !== undefined ? this.flags.binary : hasBin(args)) ? parser.BINARY_EVENT : parser.EVENT,\r\n    data: args\r\n  };\r\n\r\n  packet.options = {};\r\n  packet.options.compress = !this.flags || false !== this.flags.compress;\r\n\r\n  // event ack callback\r\n  if ('function' === typeof args[args.length - 1]) {\r\n\r\n    this.acks[this.ids] = args.pop();\r\n    packet.id = this.ids++;\r\n  }\r\n\r\n  if (this.connected) {\r\n    this.packet(packet);\r\n  } else {\r\n    this.sendBuffer.push(packet);\r\n  }\r\n\r\n  this.flags = {};\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sends a packet.\r\n *\r\n * @param {Object} packet\r\n * @api private\r\n */\r\n\r\nSocket.prototype.packet = function (packet) {\r\n  packet.nsp = this.nsp;\r\n  this.io.packet(packet);\r\n};\r\n\r\n/**\r\n * Called upon engine `open`.\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onopen = function () {\r\n\r\n\r\n  // write connect packet if necessary\r\n  if ('/' !== this.nsp) {\r\n    if (this.query) {\r\n      var query = typeof this.query === 'object' ? parseqs.encode(this.query) : this.query;\r\n\r\n      this.packet({type: parser.CONNECT, query: query});\r\n    } else {\r\n      this.packet({type: parser.CONNECT});\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Called upon engine `close`.\r\n *\r\n * @param {String} reason\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onclose = function (reason) {\r\n\r\n  this.connected = false;\r\n  this.disconnected = true;\r\n  delete this.id;\r\n  this.emit('disconnect', reason);\r\n};\r\n\r\n/**\r\n * Called with socket packet.\r\n *\r\n * @param {Object} packet\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onpacket = function (packet) {\r\n  var sameNamespace = packet.nsp === this.nsp;\r\n  var rootNamespaceError = packet.type === parser.ERROR && packet.nsp === '/';\r\n\r\n  if (!sameNamespace && !rootNamespaceError) return;\r\n\r\n  switch (packet.type) {\r\n    case parser.CONNECT:\r\n      this.onconnect();\r\n      break;\r\n\r\n    case parser.EVENT:\r\n      this.onevent(packet);\r\n      break;\r\n\r\n    case parser.BINARY_EVENT:\r\n      this.onevent(packet);\r\n      break;\r\n\r\n    case parser.ACK:\r\n      this.onack(packet);\r\n      break;\r\n\r\n    case parser.BINARY_ACK:\r\n      this.onack(packet);\r\n      break;\r\n\r\n    case parser.DISCONNECT:\r\n      this.ondisconnect();\r\n      break;\r\n\r\n    case parser.ERROR:\r\n      this.emit('error', packet.data);\r\n      break;\r\n  }\r\n};\r\n\r\n/**\r\n * Called upon a server event.\r\n *\r\n * @param {Object} packet\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onevent = function (packet) {\r\n  var args = packet.data || [];\r\n\r\n\r\n  if (null != packet.id) {\r\n\r\n    args.push(this.ack(packet.id));\r\n  }\r\n\r\n  if (this.connected) {\r\n    emit.apply(this, args);\r\n  } else {\r\n    this.receiveBuffer.push(args);\r\n  }\r\n};\r\n\r\n/**\r\n * Produces an ack callback to emit with an event.\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.ack = function (id) {\r\n  var self = this;\r\n  var sent = false;\r\n  return function () {\r\n    // prevent double callbacks\r\n    if (sent) return;\r\n    sent = true;\r\n    var args = toArray(arguments);\r\n\r\n\r\n    self.packet({\r\n      type: hasBin(args) ? parser.BINARY_ACK : parser.ACK,\r\n      id: id,\r\n      data: args\r\n    });\r\n  };\r\n};\r\n\r\n/**\r\n * Called upon a server acknowlegement.\r\n *\r\n * @param {Object} packet\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onack = function (packet) {\r\n  var ack = this.acks[packet.id];\r\n  if ('function' === typeof ack) {\r\n\r\n    ack.apply(this, packet.data);\r\n    delete this.acks[packet.id];\r\n  } else {\r\n\r\n  }\r\n};\r\n\r\n/**\r\n * Called upon server connect.\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onconnect = function () {\r\n  this.connected = true;\r\n  this.disconnected = false;\r\n  this.emit('connect');\r\n  this.emitBuffered();\r\n};\r\n\r\n/**\r\n * Emit buffered events (received and emitted).\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.emitBuffered = function () {\r\n  var i;\r\n  for (i = 0; i < this.receiveBuffer.length; i++) {\r\n    emit.apply(this, this.receiveBuffer[i]);\r\n  }\r\n  this.receiveBuffer = [];\r\n\r\n  for (i = 0; i < this.sendBuffer.length; i++) {\r\n    this.packet(this.sendBuffer[i]);\r\n  }\r\n  this.sendBuffer = [];\r\n};\r\n\r\n/**\r\n * Called upon server disconnect.\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.ondisconnect = function () {\r\n\r\n  this.destroy();\r\n  this.onclose('io server disconnect');\r\n};\r\n\r\n/**\r\n * Called upon forced client/server side disconnections,\r\n * this method ensures the manager stops tracking us and\r\n * that reconnections don't get triggered for this.\r\n *\r\n * @api private.\r\n */\r\n\r\nSocket.prototype.destroy = function () {\r\n  if (this.subs) {\r\n    // clean subscriptions to avoid reconnections\r\n    for (var i = 0; i < this.subs.length; i++) {\r\n      this.subs[i].destroy();\r\n    }\r\n    this.subs = null;\r\n  }\r\n\r\n  this.io.destroy(this);\r\n};\r\n\r\n/**\r\n * Disconnects the socket manually.\r\n *\r\n * @return {Socket} self\r\n * @api public\r\n */\r\n\r\nSocket.prototype.close =\r\nSocket.prototype.disconnect = function () {\r\n  if (this.connected) {\r\n\r\n    this.packet({ type: parser.DISCONNECT });\r\n  }\r\n\r\n  // remove socket from pool\r\n  this.destroy();\r\n\r\n  if (this.connected) {\r\n    // fire events\r\n    this.onclose('io client disconnect');\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sets the compress flag.\r\n *\r\n * @param {Boolean} if `true`, compresses the sending data\r\n * @return {Socket} self\r\n * @api public\r\n */\r\n\r\nSocket.prototype.compress = function (compress) {\r\n  this.flags.compress = compress;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sets the binary flag\r\n *\r\n * @param {Boolean} whether the emitted data contains binary\r\n * @return {Socket} self\r\n * @api public\r\n */\r\n\r\nSocket.prototype.binary = function (binary) {\r\n  this.flags.binary = binary;\r\n  return this;\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib/socket.js","module.exports = toArray\n\nfunction toArray(list, index) {\n    var array = []\n\n    index = index || 0\n\n    for (var i = index || 0; i < list.length; i++) {\n        array[i - index] = list[i]\n    }\n\n    return array\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/to-array/index.js\n// module id = 38\n// module chunks = 0","\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = on;\r\n\r\n/**\r\n * Helper for subscriptions.\r\n *\r\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\r\n * @param {String} event name\r\n * @param {Function} callback\r\n * @api public\r\n */\r\n\r\nfunction on (obj, ev, fn) {\r\n  obj.on(ev, fn);\r\n  return {\r\n    destroy: function () {\r\n      obj.removeListener(ev, fn);\r\n    }\r\n  };\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib/on.js","/**\n * Slice reference.\n */\n\nvar slice = [].slice;\n\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function(obj, fn){\n  if ('string' == typeof fn) fn = obj[fn];\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\n  var args = slice.call(arguments, 2);\n  return function(){\n    return fn.apply(obj, args.concat(slice.call(arguments)));\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/component-bind/index.js\n// module id = 40\n// module chunks = 0","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/backo2/index.js\n// module id = 41\n// module chunks = 0"],"sourceRoot":""}